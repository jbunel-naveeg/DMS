{"version":3,"sources":["../src/lib/utils.ts","../src/components/button.tsx","../src/components/card.tsx","../src/components/input.tsx","../src/components/label.tsx","../src/components/separator.tsx","../src/components/toast.tsx","../src/components/tooltip.tsx","../src/components/auth-form.tsx","../src/components/protected-route.tsx","../src/components/user-menu.tsx","../src/components/onboarding-step.tsx","../src/components/site-form.tsx","../src/components/domain-form.tsx","../src/components/onboarding-progress.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport { cn } from \"../lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from \"react\"\nimport { cn } from \"../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\nimport { cn } from \"../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\nimport { cn } from \"../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import * as React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"./button\"\nimport { Input } from \"./input\"\nimport { Label } from \"./label\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"./card\"\nimport { Separator } from \"./separator\"\nimport { cn } from \"../lib/utils\"\n\nexport interface AuthFormProps {\n  mode: 'signin' | 'signup' | 'reset'\n  onSubmit: (data: AuthFormData) => Promise<{ error: any }>\n  onGoogleSignIn?: () => Promise<{ error: any }>\n  onModeChange: (mode: 'signin' | 'signup' | 'reset') => void\n  loading?: boolean\n  className?: string\n}\n\nexport interface AuthFormData {\n  email: string\n  password: string\n  name?: string\n}\n\nexport function AuthForm({\n  mode,\n  onSubmit,\n  onGoogleSignIn,\n  onModeChange,\n  loading = false,\n  className\n}: AuthFormProps) {\n  const [formData, setFormData] = useState<AuthFormData>({\n    email: '',\n    password: '',\n    name: ''\n  })\n  const [error, setError] = useState<string | null>(null)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError(null)\n    setIsSubmitting(true)\n\n    try {\n      const { error } = await onSubmit(formData)\n      if (error) {\n        setError(error.message || 'An error occurred')\n      }\n    } catch (err) {\n      setError('An unexpected error occurred')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleGoogleSignIn = async () => {\n    if (!onGoogleSignIn) return\n    \n    setError(null)\n    setIsSubmitting(true)\n\n    try {\n      const { error } = await onGoogleSignIn()\n      if (error) {\n        setError(error.message || 'An error occurred')\n      }\n    } catch (err) {\n      setError('An unexpected error occurred')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: keyof AuthFormData) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: e.target.value\n    }))\n  }\n\n  const getTitle = () => {\n    switch (mode) {\n      case 'signin': return 'Sign In'\n      case 'signup': return 'Sign Up'\n      case 'reset': return 'Reset Password'\n      default: return 'Sign In'\n    }\n  }\n\n  const getDescription = () => {\n    switch (mode) {\n      case 'signin': return 'Enter your credentials to access your account'\n      case 'signup': return 'Create a new account to get started'\n      case 'reset': return 'Enter your email to reset your password'\n      default: return 'Enter your credentials to access your account'\n    }\n  }\n\n  const getSubmitText = () => {\n    switch (mode) {\n      case 'signin': return 'Sign In'\n      case 'signup': return 'Create Account'\n      case 'reset': return 'Send Reset Email'\n      default: return 'Sign In'\n    }\n  }\n\n  return (\n    <Card className={cn(\"w-full max-w-md mx-auto\", className)}>\n      <CardHeader className=\"space-y-1\">\n        <CardTitle className=\"text-2xl text-center\">{getTitle()}</CardTitle>\n        <CardDescription className=\"text-center\">\n          {getDescription()}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {mode === 'signup' && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Name</Label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={formData.name}\n                onChange={handleInputChange('name')}\n                required\n                disabled={isSubmitting || loading}\n              />\n            </div>\n          )}\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={formData.email}\n              onChange={handleInputChange('email')}\n              required\n              disabled={isSubmitting || loading}\n            />\n          </div>\n\n          {mode !== 'reset' && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                value={formData.password}\n                onChange={handleInputChange('password')}\n                required\n                disabled={isSubmitting || loading}\n              />\n            </div>\n          )}\n\n          {error && (\n            <div className=\"text-sm text-red-600 bg-red-50 p-3 rounded-md\">\n              {error}\n            </div>\n          )}\n\n          <Button\n            type=\"submit\"\n            className=\"w-full\"\n            disabled={isSubmitting || loading}\n          >\n            {isSubmitting ? 'Please wait...' : getSubmitText()}\n          </Button>\n        </form>\n\n        {mode !== 'reset' && onGoogleSignIn && (\n          <>\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <Separator className=\"w-full\" />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-background px-2 text-muted-foreground\">\n                  Or continue with\n                </span>\n              </div>\n            </div>\n\n            <Button\n              variant=\"outline\"\n              className=\"w-full\"\n              onClick={handleGoogleSignIn}\n              disabled={isSubmitting || loading}\n            >\n              <svg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\">\n                <path\n                  d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                  fill=\"#4285F4\"\n                />\n                <path\n                  d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                  fill=\"#34A853\"\n                />\n                <path\n                  d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                  fill=\"#FBBC05\"\n                />\n                <path\n                  d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                  fill=\"#EA4335\"\n                />\n              </svg>\n              Continue with Google\n            </Button>\n          </>\n        )}\n\n        <div className=\"text-center text-sm\">\n          {mode === 'signin' && (\n            <>\n              Don't have an account?{' '}\n              <button\n                type=\"button\"\n                className=\"text-primary hover:underline\"\n                onClick={() => onModeChange('signup')}\n              >\n                Sign up\n              </button>\n              {' • '}\n              <button\n                type=\"button\"\n                className=\"text-primary hover:underline\"\n                onClick={() => onModeChange('reset')}\n              >\n                Forgot password?\n              </button>\n            </>\n          )}\n          {mode === 'signup' && (\n            <>\n              Already have an account?{' '}\n              <button\n                type=\"button\"\n                className=\"text-primary hover:underline\"\n                onClick={() => onModeChange('signin')}\n              >\n                Sign in\n              </button>\n            </>\n          )}\n          {mode === 'reset' && (\n            <>\n              Remember your password?{' '}\n              <button\n                type=\"button\"\n                className=\"text-primary hover:underline\"\n                onClick={() => onModeChange('signin')}\n              >\n                Sign in\n              </button>\n            </>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from \"react\"\nimport { Button } from \"./button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"./card\"\n\nexport interface ProtectedRouteProps {\n  children: React.ReactNode\n  fallback?: React.ReactNode\n  requireAuth?: boolean\n  className?: string\n  user?: any\n  loading?: boolean\n}\n\nexport function ProtectedRoute({\n  children,\n  fallback,\n  requireAuth = true,\n  className,\n  user,\n  loading = false\n}: ProtectedRouteProps) {\n\n  if (loading) {\n    return (\n      <div className={`flex items-center justify-center min-h-screen ${className || ''}`}>\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (requireAuth && !user) {\n    if (fallback) {\n      return <>{fallback}</>\n    }\n\n    return (\n      <div className={`flex items-center justify-center min-h-screen p-4 ${className || ''}`}>\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <CardTitle>Authentication Required</CardTitle>\n            <CardDescription>\n              You need to be signed in to access this page.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Button \n              className=\"w-full\"\n              onClick={() => window.location.href = '/auth/signin'}\n            >\n              Sign In\n            </Button>\n            <Button \n              variant=\"outline\" \n              className=\"w-full\"\n              onClick={() => window.location.href = '/auth/signup'}\n            >\n              Sign Up\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (!requireAuth && user) {\n    // User is authenticated but this route doesn't require auth\n    // Redirect to dashboard or show appropriate content\n    return <>{children}</>\n  }\n\n  return <>{children}</>\n}\n","import * as React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"./button\"\nimport { Card, CardContent } from \"./card\"\nimport { Separator } from \"./separator\"\nimport { cn } from \"../lib/utils\"\n\nexport interface UserMenuProps {\n  user: {\n    id: string\n    email?: string\n    name?: string\n    avatar_url?: string\n  }\n  onSignOut: () => void\n  onProfileClick?: () => void\n  onSettingsClick?: () => void\n  className?: string\n}\n\nexport function UserMenu({\n  user,\n  onSignOut,\n  onProfileClick,\n  onSettingsClick,\n  className\n}: UserMenuProps) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const handleProfileClick = () => {\n    setIsOpen(false)\n    onProfileClick?.()\n  }\n\n  const handleSettingsClick = () => {\n    setIsOpen(false)\n    onSettingsClick?.()\n  }\n\n  const handleSignOut = () => {\n    setIsOpen(false)\n    onSignOut()\n  }\n\n  const getUserInitials = () => {\n    if (user.name) {\n      return user.name\n        .split(' ')\n        .map(n => n[0])\n        .join('')\n        .toUpperCase()\n        .slice(0, 2)\n    }\n    if (user.email) {\n      return user.email[0].toUpperCase()\n    }\n    return 'U'\n  }\n\n  const getUserDisplayName = () => {\n    return user.name || user.email || 'User'\n  }\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      <Button\n        variant=\"ghost\"\n        className=\"relative h-8 w-8 rounded-full\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {user.avatar_url ? (\n          <img\n            src={user.avatar_url}\n            alt={getUserDisplayName()}\n            className=\"h-8 w-8 rounded-full object-cover\"\n          />\n        ) : (\n          <div className=\"h-8 w-8 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-sm font-medium\">\n            {getUserInitials()}\n          </div>\n        )}\n      </Button>\n\n      {isOpen && (\n        <>\n          {/* Backdrop */}\n          <div\n            className=\"fixed inset-0 z-10\"\n            onClick={() => setIsOpen(false)}\n          />\n          \n          {/* Menu */}\n          <Card className=\"absolute right-0 top-10 z-20 w-56\">\n            <CardContent className=\"p-2\">\n              <div className=\"px-3 py-2\">\n                <p className=\"text-sm font-medium\">{getUserDisplayName()}</p>\n                {user.email && (\n                  <p className=\"text-xs text-muted-foreground\">{user.email}</p>\n                )}\n              </div>\n              \n              <Separator className=\"my-2\" />\n              \n              <div className=\"space-y-1\">\n                {onProfileClick && (\n                  <Button\n                    variant=\"ghost\"\n                    className=\"w-full justify-start text-sm\"\n                    onClick={handleProfileClick}\n                  >\n                    Profile\n                  </Button>\n                )}\n                \n                {onSettingsClick && (\n                  <Button\n                    variant=\"ghost\"\n                    className=\"w-full justify-start text-sm\"\n                    onClick={handleSettingsClick}\n                  >\n                    Settings\n                  </Button>\n                )}\n                \n                <Separator className=\"my-2\" />\n                \n                <Button\n                  variant=\"ghost\"\n                  className=\"w-full justify-start text-sm text-red-600 hover:text-red-600 hover:bg-red-50\"\n                  onClick={handleSignOut}\n                >\n                  Sign Out\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport { cn } from \"../lib/utils\"\n\nexport interface OnboardingStepProps {\n  step: number\n  totalSteps: number\n  title: string\n  description?: string\n  children: React.ReactNode\n  isCompleted?: boolean\n  isActive?: boolean\n  className?: string\n}\n\nexport function OnboardingStep({\n  step,\n  totalSteps,\n  title,\n  description,\n  children,\n  isCompleted = false,\n  isActive = false,\n  className\n}: OnboardingStepProps) {\n  return (\n    <div className={cn(\"space-y-6\", className)}>\n      {/* Step Header */}\n      <div className=\"flex items-center space-x-4\">\n        <div className={cn(\n          \"flex h-10 w-10 items-center justify-center rounded-full border-2 text-sm font-medium\",\n          isCompleted \n            ? \"border-green-500 bg-green-500 text-white\" \n            : isActive \n            ? \"border-blue-500 bg-blue-500 text-white\"\n            : \"border-gray-300 bg-white text-gray-500\"\n        )}>\n          {isCompleted ? (\n            <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n          ) : (\n            step\n          )}\n        </div>\n        <div className=\"flex-1\">\n          <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n          {description && (\n            <p className=\"text-sm text-gray-500\">{description}</p>\n          )}\n        </div>\n      </div>\n\n      {/* Step Content */}\n      {isActive && (\n        <div className=\"ml-14\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"./button\"\nimport { Input } from \"./input\"\nimport { Label } from \"./label\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"./card\"\nimport { cn } from \"../lib/utils\"\n\nexport interface SiteFormData {\n  name: string\n  subdomain: string\n  template: string\n  description?: string\n}\n\nexport interface SiteFormProps {\n  onSubmit: (data: SiteFormData) => Promise<{ error?: string }>\n  loading?: boolean\n  className?: string\n}\n\nconst TEMPLATES = [\n  { id: 'business', name: 'Business', description: 'Professional business website' },\n  { id: 'portfolio', name: 'Portfolio', description: 'Creative portfolio showcase' },\n  { id: 'blog', name: 'Blog', description: 'Content-focused blog site' },\n  { id: 'ecommerce', name: 'E-commerce', description: 'Online store with shopping cart' },\n  { id: 'restaurant', name: 'Restaurant', description: 'Restaurant with menu and reservations' },\n  { id: 'agency', name: 'Agency', description: 'Marketing agency website' },\n]\n\nexport function SiteForm({ onSubmit, loading = false, className }: SiteFormProps) {\n  const [formData, setFormData] = useState<SiteFormData>({\n    name: '',\n    subdomain: '',\n    template: 'business',\n    description: ''\n  })\n  const [error, setError] = useState<string | null>(null)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError(null)\n    setIsSubmitting(true)\n\n    try {\n      const { error } = await onSubmit(formData)\n      if (error) {\n        setError(error)\n      }\n    } catch (err) {\n      setError('An unexpected error occurred')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (field: keyof SiteFormData) => (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: e.target.value\n    }))\n  }\n\n  const generateSubdomain = () => {\n    const subdomain = formData.name\n      .toLowerCase()\n      .replace(/[^a-z0-9]/g, '-')\n      .replace(/-+/g, '-')\n      .replace(/^-|-$/g, '')\n    setFormData(prev => ({ ...prev, subdomain }))\n  }\n\n  return (\n    <Card className={cn(\"w-full max-w-2xl mx-auto\", className)}>\n      <CardHeader>\n        <CardTitle>Create Your Website</CardTitle>\n        <CardDescription>\n          Let's set up your new WordPress website. Choose a name, subdomain, and template.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Website Name *</Label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"My Awesome Website\"\n                value={formData.name}\n                onChange={handleInputChange('name')}\n                required\n                disabled={isSubmitting || loading}\n              />\n              <p className=\"text-xs text-gray-500\">\n                This will be the title of your website\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"subdomain\">Subdomain *</Label>\n              <div className=\"flex space-x-2\">\n                <Input\n                  id=\"subdomain\"\n                  type=\"text\"\n                  placeholder=\"my-awesome-website\"\n                  value={formData.subdomain}\n                  onChange={handleInputChange('subdomain')}\n                  required\n                  disabled={isSubmitting || loading}\n                  className=\"flex-1\"\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={generateSubdomain}\n                  disabled={isSubmitting || loading || !formData.name}\n                >\n                  Generate\n                </Button>\n              </div>\n              <p className=\"text-xs text-gray-500\">\n                Your site will be available at: {formData.subdomain ? `${formData.subdomain}.naveeg.com` : 'subdomain.naveeg.com'}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"template\">Template *</Label>\n            <select\n              id=\"template\"\n              value={formData.template}\n              onChange={handleInputChange('template')}\n              disabled={isSubmitting || loading}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              {TEMPLATES.map((template) => (\n                <option key={template.id} value={template.id}>\n                  {template.name} - {template.description}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"description\">Description (Optional)</Label>\n            <textarea\n              id=\"description\"\n              placeholder=\"Brief description of your website...\"\n              value={formData.description}\n              onChange={handleInputChange('description')}\n              disabled={isSubmitting || loading}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n\n          {error && (\n            <div className=\"text-sm text-red-600 bg-red-50 p-3 rounded-md\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"flex justify-end\">\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting || loading || !formData.name || !formData.subdomain}\n            >\n              {isSubmitting ? 'Creating Website...' : 'Create Website'}\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from \"react\"\nimport { useState } from \"react\"\nimport { Button } from \"./button\"\nimport { Input } from \"./input\"\nimport { Label } from \"./label\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"./card\"\nimport { cn } from \"../lib/utils\"\n\nexport interface DomainFormData {\n  domain: string\n}\n\nexport interface DomainFormProps {\n  siteUrl: string\n  onSubmit: (data: DomainFormData) => Promise<{ error?: string }>\n  onSkip: () => void\n  loading?: boolean\n  className?: string\n}\n\nexport function DomainForm({ \n  siteUrl, \n  onSubmit, \n  onSkip, \n  loading = false, \n  className \n}: DomainFormProps) {\n  const [formData, setFormData] = useState<DomainFormData>({\n    domain: ''\n  })\n  const [error, setError] = useState<string | null>(null)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError(null)\n    setIsSubmitting(true)\n\n    try {\n      const { error } = await onSubmit(formData)\n      if (error) {\n        setError(error)\n      }\n    } catch (err) {\n      setError('An unexpected error occurred')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      domain: e.target.value\n    }))\n  }\n\n  const isValidDomain = (domain: string) => {\n    const domainRegex = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\\.[a-zA-Z]{2,}$/\n    return domainRegex.test(domain)\n  }\n\n  return (\n    <Card className={cn(\"w-full max-w-2xl mx-auto\", className)}>\n      <CardHeader>\n        <CardTitle>Connect Custom Domain</CardTitle>\n        <CardDescription>\n          Add your own domain to your website. You can skip this step and do it later.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-6\">\n          {/* Current Site Info */}\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-blue-900\">Your Website</h4>\n            <p className=\"text-sm text-blue-700 mt-1\">\n              Currently available at: <span className=\"font-mono\">{siteUrl}</span>\n            </p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"domain\">Custom Domain</Label>\n              <Input\n                id=\"domain\"\n                type=\"text\"\n                placeholder=\"example.com\"\n                value={formData.domain}\n                onChange={handleInputChange}\n                disabled={isSubmitting || loading}\n                className={cn(\n                  formData.domain && !isValidDomain(formData.domain) && \"border-red-300\"\n                )}\n              />\n              <p className=\"text-xs text-gray-500\">\n                Enter your domain without www (e.g., example.com)\n              </p>\n              {formData.domain && !isValidDomain(formData.domain) && (\n                <p className=\"text-xs text-red-600\">\n                  Please enter a valid domain name\n                </p>\n              )}\n            </div>\n\n            {error && (\n              <div className=\"text-sm text-red-600 bg-red-50 p-3 rounded-md\">\n                {error}\n              </div>\n            )}\n\n            <div className=\"flex justify-between\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={onSkip}\n                disabled={isSubmitting || loading}\n              >\n                Skip for Now\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={isSubmitting || loading || !formData.domain || !isValidDomain(formData.domain)}\n              >\n                {isSubmitting ? 'Connecting Domain...' : 'Connect Domain'}\n              </Button>\n            </div>\n          </form>\n\n          {/* Domain Setup Instructions */}\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-gray-900 mb-2\">Domain Setup Instructions</h4>\n            <div className=\"text-sm text-gray-600 space-y-2\">\n              <p>To connect your domain, you'll need to update your DNS settings:</p>\n              <ol className=\"list-decimal list-inside space-y-1 ml-4\">\n                <li>Add a CNAME record pointing to <code className=\"bg-gray-200 px-1 rounded\">naveeg.com</code></li>\n                <li>Or add an A record pointing to our IP address</li>\n                <li>Wait for DNS propagation (usually 5-30 minutes)</li>\n              </ol>\n              <p className=\"text-xs text-gray-500 mt-2\">\n                Need help? Contact our support team for assistance.\n              </p>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n","import * as React from \"react\"\nimport { cn } from \"../lib/utils\"\n\nexport interface OnboardingProgressProps {\n  currentStep: number\n  totalSteps: number\n  steps: {\n    id: string\n    title: string\n    completed: boolean\n  }[]\n  className?: string\n}\n\nexport function OnboardingProgress({\n  currentStep,\n  totalSteps,\n  steps,\n  className\n}: OnboardingProgressProps) {\n  const progress = (currentStep / totalSteps) * 100\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {/* Progress Bar */}\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n          <span>Step {currentStep} of {totalSteps}</span>\n          <span>{Math.round(progress)}% Complete</span>\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div\n            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300 ease-in-out\"\n            style={{ width: `${progress}%` }}\n          />\n        </div>\n      </div>\n\n      {/* Step List */}\n      <div className=\"space-y-3\">\n        {steps.map((step, index) => (\n          <div\n            key={step.id}\n            className={cn(\n              \"flex items-center space-x-3 text-sm\",\n              index < currentStep ? \"text-green-600\" : \n              index === currentStep - 1 ? \"text-blue-600\" : \n              \"text-gray-400\"\n            )}\n          >\n            <div className={cn(\n              \"flex h-6 w-6 items-center justify-center rounded-full border-2 text-xs font-medium\",\n              step.completed \n                ? \"border-green-500 bg-green-500 text-white\" \n                : index === currentStep - 1\n                ? \"border-blue-500 bg-blue-500 text-white\"\n                : \"border-gray-300 bg-white text-gray-400\"\n            )}>\n              {step.completed ? (\n                <svg className=\"h-3 w-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              ) : (\n                index + 1\n              )}\n            </div>\n            <span className={cn(\n              \"font-medium\",\n              step.completed ? \"text-green-600\" : \n              index === currentStep - 1 ? \"text-blue-600\" : \n              \"text-gray-400\"\n            )}>\n              {step.title}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","names":["React","jsx","React","jsx","React","cva","jsx","cva","React","jsx","React","cva","jsx","cva","React","jsx","jsx","error","Fragment","jsx","jsxs","useState","Fragment","jsx","jsxs","useState","jsx","jsxs","useState","jsx","jsxs","useState","error","useState","jsx","jsxs","useState","error","jsx","jsxs"]}