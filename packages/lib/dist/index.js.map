{"version":3,"sources":["../../../node_modules/cookie/src/index.ts","../src/index.ts","../../../node_modules/@supabase/ssr/src/createBrowserClient.ts","../../../node_modules/@supabase/ssr/src/version.ts","../../../node_modules/@supabase/ssr/src/utils/helpers.ts","../../../node_modules/@supabase/ssr/src/utils/constants.ts","../../../node_modules/@supabase/ssr/src/utils/chunker.ts","../../../node_modules/@supabase/ssr/src/utils/base64url.ts","../../../node_modules/@supabase/ssr/src/cookies.ts","../../../node_modules/@supabase/ssr/src/createServerClient.ts","../src/supabase/supabase-browser.ts","../src/supabase/supabase-server.ts","../src/supabase/rls.ts","../src/stripe/stripe.ts","../src/stripe/checkout.ts","../src/types/plans.ts","../src/stripe/subscriptions.ts","../src/stripe/webhooks.ts","../src/tenweb/tenweb.ts","../../../node_modules/zod/v3/external.js","../../../node_modules/zod/v3/helpers/util.js","../../../node_modules/zod/v3/ZodError.js","../../../node_modules/zod/v3/locales/en.js","../../../node_modules/zod/v3/errors.js","../../../node_modules/zod/v3/helpers/parseUtil.js","../../../node_modules/zod/v3/helpers/errorUtil.js","../../../node_modules/zod/v3/types.js","../src/validations/validations.ts","../src/utils.ts","../src/auth/auth.ts","../src/auth/hooks.ts","../src/auth/onboarding.ts","../src/hooks/use-user-data.ts","../src/entitlements/entitlements.ts","../src/entitlements/hooks.ts","../src/openai/openai.ts","../src/google/google-analytics.ts","../src/google/google-search-console.ts","../src/google/google-business-profile.ts","../src/google/google.ts","../src/team/types.ts","../src/team/team-service.ts","../src/team/hooks.ts","../src/n8n/n8n.ts","../src/n8n/hooks.ts","../src/i18n/i18n-service.ts","../src/i18n/translation-manager.ts","../src/i18n/locale-detector.ts","../src/i18n/currency-formatter.ts","../src/i18n/date-formatter.ts","../src/i18n/number-formatter.ts","../src/i18n/hooks.ts","../src/gdpr/gdpr-service.ts","../src/gdpr/consent-manager.ts","../src/gdpr/data-subject-rights.ts","../src/gdpr/data-retention.ts","../src/gdpr/audit-logger.ts","../src/gdpr/cookie-manager.ts"],"sourcesContent":["/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n","// Re-export all utilities and types\nexport * from \"./supabase/supabase-browser\"\nexport * from \"./supabase/supabase-server\"\nexport * from \"./supabase/rls\"\nexport * from \"./stripe/stripe\"\nexport * from \"./stripe/checkout\"\nexport * from \"./stripe/subscriptions\"\nexport * from \"./stripe/webhooks\"\nexport * from \"./tenweb/tenweb\"\nexport * from \"./types/plans\"\nexport * from \"./validations/validations\"\nexport * from \"./utils\"\nexport * from \"./auth/auth\"\nexport * from \"./auth/hooks\"\nexport * from \"./auth/onboarding\"\nexport * from \"./hooks/use-user-data\"\nexport * from \"./entitlements/entitlements\"\nexport * from \"./entitlements/hooks\"\nexport * from \"./openai/openai\"\nexport * from \"./google/google\"\nexport * from \"./google/google-analytics\"\nexport * from \"./google/google-search-console\"\nexport * from \"./google/google-business-profile\"\nexport * from \"./team/types\"\nexport * from \"./team/team-service\"\nexport * from \"./team/hooks\"\nexport * from \"./n8n/n8n\"\nexport * from \"./n8n/hooks\"\nexport * from \"./i18n\"\nexport * from \"./gdpr/gdpr-service\"\nexport * from \"./gdpr/consent-manager\"\nexport * from \"./gdpr/data-subject-rights\"\nexport * from \"./gdpr/cookie-manager\"\n","import {\n  createClient,\n  SupabaseClient,\n  SupabaseClientOptions,\n} from \"@supabase/supabase-js\";\n\nimport { VERSION } from \"./version\";\nimport { isBrowser } from \"./utils\";\n\nimport type {\n  CookieMethodsBrowser,\n  CookieMethodsBrowserDeprecated,\n  CookieOptionsWithName,\n} from \"./types\";\n\nimport { createStorageFromOptions } from \"./cookies\";\n\nlet cachedBrowserClient: SupabaseClient<any, any, any> | undefined;\n\n/**\n * Creates a Supabase Client for use in a browser environment.\n *\n * In most cases you should not configure the `options.cookies` object, as this\n * is automatically handled for you. If you do customize this, prefer using the\n * `getAll` and `setAll` functions over `get`, `set` and `remove`. The latter\n * are deprecated due to being difficult to correctly implement and not\n * supporting some edge-cases. Both `getAll` and `setAll` (or both `get`, `set`\n * and `remove`) must be provided. Failing to provide the methods for setting\n * will throw an exception, and in previous versions of the library will result\n * in difficult to debug authentication issues such as random logouts, early\n * session termination or problems with inconsistent state.\n *\n * @param supabaseUrl The URL of the Supabase project.\n * @param supabaseKey The `anon` API key of the Supabase project.\n * @param options Various configuration options.\n */\nexport function createBrowserClient<\n  Database = any,\n  SchemaName extends string &\n    keyof Omit<Database, \"__InternalSupabase\"> = \"public\" extends keyof Omit<\n    Database,\n    \"__InternalSupabase\"\n  >\n    ? \"public\"\n    : string & keyof Omit<Database, \"__InternalSupabase\">,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions<SchemaName> & {\n    cookies?: CookieMethodsBrowser;\n    cookieOptions?: CookieOptionsWithName;\n    cookieEncoding?: \"raw\" | \"base64url\";\n    isSingleton?: boolean;\n  },\n): SupabaseClient<Database, SchemaName>;\n\n/**\n * @deprecated Please specify `getAll` and `setAll` cookie methods instead of\n * the `get`, `set` and `remove`. These will not be supported in the next major\n * version.\n */\nexport function createBrowserClient<\n  Database = any,\n  SchemaName extends string &\n    keyof Omit<Database, \"__InternalSupabase\"> = \"public\" extends keyof Omit<\n    Database,\n    \"__InternalSupabase\"\n  >\n    ? \"public\"\n    : string & keyof Omit<Database, \"__InternalSupabase\">,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions<SchemaName> & {\n    cookies: CookieMethodsBrowserDeprecated;\n    cookieOptions?: CookieOptionsWithName;\n    cookieEncoding?: \"raw\" | \"base64url\";\n    isSingleton?: boolean;\n  },\n): SupabaseClient<Database, SchemaName>;\n\nexport function createBrowserClient<\n  Database = any,\n  SchemaName extends string &\n    keyof Omit<Database, \"__InternalSupabase\"> = \"public\" extends keyof Omit<\n    Database,\n    \"__InternalSupabase\"\n  >\n    ? \"public\"\n    : string & keyof Omit<Database, \"__InternalSupabase\">,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions<SchemaName> & {\n    cookies?: CookieMethodsBrowser | CookieMethodsBrowserDeprecated;\n    cookieOptions?: CookieOptionsWithName;\n    cookieEncoding?: \"raw\" | \"base64url\";\n    isSingleton?: boolean;\n  },\n): SupabaseClient<Database, SchemaName> {\n  // singleton client is created only if isSingleton is set to true, or if isSingleton is not defined and we detect a browser\n  const shouldUseSingleton =\n    options?.isSingleton === true ||\n    ((!options || !(\"isSingleton\" in options)) && isBrowser());\n\n  if (shouldUseSingleton && cachedBrowserClient) {\n    return cachedBrowserClient;\n  }\n\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      `@supabase/ssr: Your project's URL and API key are required to create a Supabase client!\\n\\nCheck your Supabase project's API settings to find these values\\n\\nhttps://supabase.com/dashboard/project/_/settings/api`,\n    );\n  }\n\n  const { storage } = createStorageFromOptions(\n    {\n      ...options,\n      cookieEncoding: options?.cookieEncoding ?? \"base64url\",\n    },\n    false,\n  );\n\n  const client = createClient<Database, SchemaName>(supabaseUrl, supabaseKey, {\n    // TODO: resolve type error\n    ...(options as any),\n    global: {\n      ...options?.global,\n      headers: {\n        ...options?.global?.headers,\n        \"X-Client-Info\": `supabase-ssr/${VERSION} createBrowserClient`,\n      },\n    },\n    auth: {\n      ...options?.auth,\n      ...(options?.cookieOptions?.name\n        ? { storageKey: options.cookieOptions.name }\n        : null),\n      flowType: \"pkce\",\n      autoRefreshToken: isBrowser(),\n      detectSessionInUrl: isBrowser(),\n      persistSession: true,\n      storage,\n    },\n  });\n\n  if (shouldUseSingleton) {\n    cachedBrowserClient = client;\n  }\n\n  return client;\n}\n","export const VERSION = '0.7.0';\n","import type { SerializeOptions } from \"cookie\";\nimport { parse as cookieParse, serialize as cookieSerialize } from \"cookie\";\n\n/**\n * @deprecated Since v0.4.0: Please use {@link parseCookieHeader}. `parse` will\n * not be available for import starting v1.0.0 of `@supabase/ssr`.\n */\nexport const parse = cookieParse;\n\n/**\n * @deprecated Since v0.4.0: Please use {@link serializeCookieHeader}.\n * `serialize` will not be available for import starting v1.0.0 of\n * `@supabase/ssr`.\n */\nexport const serialize = cookieSerialize;\n\n/**\n * Parses the `Cookie` HTTP header into an array of cookie name-value objects.\n *\n * @param header The `Cookie` HTTP header. Decodes cookie names and values from\n * URI encoding first.\n */\nexport function parseCookieHeader(\n  header: string,\n): { name: string; value?: string }[] {\n  const parsed = cookieParse(header);\n\n  return Object.keys(parsed ?? {}).map((name) => ({\n    name,\n    value: parsed[name],\n  }));\n}\n\n/**\n * Converts the arguments to a valid `Set-Cookie` header. Non US-ASCII chars\n * and other forbidden cookie chars will be URI encoded.\n *\n * @param name Name of cookie.\n * @param value Value of cookie.\n */\nexport function serializeCookieHeader(\n  name: string,\n  value: string,\n  options: SerializeOptions,\n): string {\n  return cookieSerialize(name, value, options);\n}\n\nexport function isBrowser() {\n  return (\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\"\n  );\n}\n","import { CookieOptions } from \"../types\";\n\nexport const DEFAULT_COOKIE_OPTIONS: CookieOptions = {\n  path: \"/\",\n  sameSite: \"lax\",\n  httpOnly: false,\n  // https://developer.chrome.com/blog/cookie-max-age-expires\n  // https://httpwg.org/http-extensions/draft-ietf-httpbis-rfc6265bis.html#name-cookie-lifetime-limits\n  maxAge: 400 * 24 * 60 * 60,\n};\n","interface Chunk {\n  name: string;\n  value: string;\n}\n\nexport const MAX_CHUNK_SIZE = 3180;\n\nconst CHUNK_LIKE_REGEX = /^(.*)[.](0|[1-9][0-9]*)$/;\nexport function isChunkLike(cookieName: string, key: string) {\n  if (cookieName === key) {\n    return true;\n  }\n\n  const chunkLike = cookieName.match(CHUNK_LIKE_REGEX);\n  if (chunkLike && chunkLike[1] === key) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * create chunks from a string and return an array of object\n */\nexport function createChunks(\n  key: string,\n  value: string,\n  chunkSize?: number,\n): Chunk[] {\n  const resolvedChunkSize = chunkSize ?? MAX_CHUNK_SIZE;\n\n  let encodedValue = encodeURIComponent(value);\n\n  if (encodedValue.length <= resolvedChunkSize) {\n    return [{ name: key, value }];\n  }\n\n  const chunks: string[] = [];\n\n  while (encodedValue.length > 0) {\n    let encodedChunkHead = encodedValue.slice(0, resolvedChunkSize);\n\n    const lastEscapePos = encodedChunkHead.lastIndexOf(\"%\");\n\n    // Check if the last escaped character is truncated.\n    if (lastEscapePos > resolvedChunkSize - 3) {\n      // If so, reslice the string to exclude the whole escape sequence.\n      // We only reduce the size of the string as the chunk must\n      // be smaller than the chunk size.\n      encodedChunkHead = encodedChunkHead.slice(0, lastEscapePos);\n    }\n\n    let valueHead: string = \"\";\n\n    // Check if the chunk was split along a valid unicode boundary.\n    while (encodedChunkHead.length > 0) {\n      try {\n        // Try to decode the chunk back and see if it is valid.\n        // Stop when the chunk is valid.\n        valueHead = decodeURIComponent(encodedChunkHead);\n        break;\n      } catch (error) {\n        if (\n          error instanceof URIError &&\n          encodedChunkHead.at(-3) === \"%\" &&\n          encodedChunkHead.length > 3\n        ) {\n          encodedChunkHead = encodedChunkHead.slice(\n            0,\n            encodedChunkHead.length - 3,\n          );\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    chunks.push(valueHead);\n    encodedValue = encodedValue.slice(encodedChunkHead.length);\n  }\n\n  return chunks.map((value, i) => ({ name: `${key}.${i}`, value }));\n}\n\n// Get fully constructed chunks\nexport async function combineChunks(\n  key: string,\n  retrieveChunk: (\n    name: string,\n  ) => Promise<string | null | undefined> | string | null | undefined,\n) {\n  const value = await retrieveChunk(key);\n\n  if (value) {\n    return value;\n  }\n\n  let values: string[] = [];\n\n  for (let i = 0; ; i++) {\n    const chunkName = `${key}.${i}`;\n    const chunk = await retrieveChunk(chunkName);\n\n    if (!chunk) {\n      break;\n    }\n\n    values.push(chunk);\n  }\n\n  if (values.length > 0) {\n    return values.join(\"\");\n  }\n\n  return null;\n}\n\nexport async function deleteChunks(\n  key: string,\n  retrieveChunk: (\n    name: string,\n  ) => Promise<string | null | undefined> | string | null | undefined,\n  removeChunk: (name: string) => Promise<void> | void,\n) {\n  const value = await retrieveChunk(key);\n\n  if (value) {\n    await removeChunk(key);\n  }\n\n  for (let i = 0; ; i++) {\n    const chunkName = `${key}.${i}`;\n    const chunk = await retrieveChunk(chunkName);\n\n    if (!chunk) {\n      break;\n    }\n\n    await removeChunk(chunkName);\n  }\n}\n","/**\n * Avoid modifying this file. It's part of\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\n * that repo!\n */\n\n/**\n * An array of characters that encode 6 bits into a Base64-URL alphabet\n * character.\n */\nconst TO_BASE64URL =\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\".split(\"\");\n\n/**\n * An array of characters that can appear in a Base64-URL encoded string but\n * should be ignored.\n */\nconst IGNORE_BASE64URL = \" \\t\\n\\r=\".split(\"\");\n\n/**\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\n * used to skip the character, or if -1 used to error out.\n */\nconst FROM_BASE64URL = (() => {\n  const charMap: number[] = new Array(128);\n\n  for (let i = 0; i < charMap.length; i += 1) {\n    charMap[i] = -1;\n  }\n\n  for (let i = 0; i < IGNORE_BASE64URL.length; i += 1) {\n    charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\n  }\n\n  for (let i = 0; i < TO_BASE64URL.length; i += 1) {\n    charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\n  }\n\n  return charMap;\n})();\n\n/**\n * Converts a JavaScript string (which may include any valid character) into a\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\n * then encoded as Base64-URL.\n *\n * @param str The string to convert.\n */\nexport function stringToBase64URL(str: string) {\n  const base64: string[] = [];\n\n  let queue = 0;\n  let queuedBits = 0;\n\n  const emitter = (byte: number) => {\n    queue = (queue << 8) | byte;\n    queuedBits += 8;\n\n    while (queuedBits >= 6) {\n      const pos = (queue >> (queuedBits - 6)) & 63;\n      base64.push(TO_BASE64URL[pos]);\n      queuedBits -= 6;\n    }\n  };\n\n  stringToUTF8(str, emitter);\n\n  if (queuedBits > 0) {\n    queue = queue << (6 - queuedBits);\n    queuedBits = 6;\n\n    while (queuedBits >= 6) {\n      const pos = (queue >> (queuedBits - 6)) & 63;\n      base64.push(TO_BASE64URL[pos]);\n      queuedBits -= 6;\n    }\n  }\n\n  return base64.join(\"\");\n}\n\n/**\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\n * that the underlying string has been encoded as UTF-8.\n *\n * @param str The Base64-URL encoded string.\n */\nexport function stringFromBase64URL(str: string) {\n  const conv: string[] = [];\n\n  const emit = (codepoint: number) => {\n    conv.push(String.fromCodePoint(codepoint));\n  };\n\n  const state = {\n    utf8seq: 0,\n    codepoint: 0,\n  };\n\n  let queue = 0;\n  let queuedBits = 0;\n\n  for (let i = 0; i < str.length; i += 1) {\n    const codepoint = str.charCodeAt(i);\n    const bits = FROM_BASE64URL[codepoint];\n\n    if (bits > -1) {\n      // valid Base64-URL character\n      queue = (queue << 6) | bits;\n      queuedBits += 6;\n\n      while (queuedBits >= 8) {\n        stringFromUTF8((queue >> (queuedBits - 8)) & 0xff, state, emit);\n        queuedBits -= 8;\n      }\n    } else if (bits === -2) {\n      // ignore spaces, tabs, newlines, =\n      continue;\n    } else {\n      throw new Error(\n        `Invalid Base64-URL character \"${str.at(i)}\" at position ${i}`,\n      );\n    }\n  }\n\n  return conv.join(\"\");\n}\n\n/**\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\n *\n * @param codepoint The Unicode codepoint.\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\n */\nexport function codepointToUTF8(\n  codepoint: number,\n  emit: (byte: number) => void,\n) {\n  if (codepoint <= 0x7f) {\n    emit(codepoint);\n    return;\n  } else if (codepoint <= 0x7ff) {\n    emit(0xc0 | (codepoint >> 6));\n    emit(0x80 | (codepoint & 0x3f));\n    return;\n  } else if (codepoint <= 0xffff) {\n    emit(0xe0 | (codepoint >> 12));\n    emit(0x80 | ((codepoint >> 6) & 0x3f));\n    emit(0x80 | (codepoint & 0x3f));\n    return;\n  } else if (codepoint <= 0x10ffff) {\n    emit(0xf0 | (codepoint >> 18));\n    emit(0x80 | ((codepoint >> 12) & 0x3f));\n    emit(0x80 | ((codepoint >> 6) & 0x3f));\n    emit(0x80 | (codepoint & 0x3f));\n    return;\n  }\n\n  throw new Error(`Unrecognized Unicode codepoint: ${codepoint.toString(16)}`);\n}\n\n/**\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\n *\n * @param str  The string to convert to UTF-8.\n * @param emit Function which will be called for each UTF-8 byte of the string.\n */\nexport function stringToUTF8(str: string, emit: (byte: number) => void) {\n  for (let i = 0; i < str.length; i += 1) {\n    let codepoint = str.charCodeAt(i);\n\n    if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\n      // most UTF-16 codepoints are Unicode codepoints, except values in this\n      // range where the next UTF-16 codepoint needs to be combined with the\n      // current one to get the Unicode codepoint\n      const highSurrogate = ((codepoint - 0xd800) * 0x400) & 0xffff;\n      const lowSurrogate = (str.charCodeAt(i + 1) - 0xdc00) & 0xffff;\n      codepoint = (lowSurrogate | highSurrogate) + 0x10000;\n      i += 1;\n    }\n\n    codepointToUTF8(codepoint, emit);\n  }\n}\n\n/**\n * Converts a UTF-8 byte to a Unicode codepoint.\n *\n * @param byte  The UTF-8 byte next in the sequence.\n * @param state The shared state between consecutive UTF-8 bytes in the\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\n * @param emit  Function which will be called for each codepoint.\n */\nexport function stringFromUTF8(\n  byte: number,\n  state: { utf8seq: number; codepoint: number },\n  emit: (codepoint: number) => void,\n) {\n  if (state.utf8seq === 0) {\n    if (byte <= 0x7f) {\n      emit(byte);\n      return;\n    }\n\n    // count the number of 1 leading bits until you reach 0\n    for (let leadingBit = 1; leadingBit < 6; leadingBit += 1) {\n      if (((byte >> (7 - leadingBit)) & 1) === 0) {\n        state.utf8seq = leadingBit;\n        break;\n      }\n    }\n\n    if (state.utf8seq === 2) {\n      state.codepoint = byte & 31;\n    } else if (state.utf8seq === 3) {\n      state.codepoint = byte & 15;\n    } else if (state.utf8seq === 4) {\n      state.codepoint = byte & 7;\n    } else {\n      throw new Error(\"Invalid UTF-8 sequence\");\n    }\n\n    state.utf8seq -= 1;\n  } else if (state.utf8seq > 0) {\n    if (byte <= 0x7f) {\n      throw new Error(\"Invalid UTF-8 sequence\");\n    }\n\n    state.codepoint = (state.codepoint << 6) | (byte & 63);\n    state.utf8seq -= 1;\n\n    if (state.utf8seq === 0) {\n      emit(state.codepoint);\n    }\n  }\n}\n","import { parse, serialize } from \"cookie\";\n\nimport {\n  DEFAULT_COOKIE_OPTIONS,\n  combineChunks,\n  createChunks,\n  isBrowser,\n  isChunkLike,\n  stringFromBase64URL,\n  stringToBase64URL,\n} from \"./utils\";\n\nimport type {\n  CookieMethodsServer,\n  CookieMethodsServerDeprecated,\n  CookieMethodsBrowser,\n  CookieMethodsBrowserDeprecated,\n  CookieOptions,\n  CookieOptionsWithName,\n  GetAllCookies,\n  SetAllCookies,\n} from \"./types\";\n\nconst BASE64_PREFIX = \"base64-\";\n\n/**\n * Creates a storage client that handles cookies correctly for browser and\n * server clients with or without properly provided cookie methods.\n *\n * @param options The options passed to createBrowserClient or createServer client.\n *\n * @param isServerClient Whether it's called from createServerClient.\n */\nexport function createStorageFromOptions(\n  options: {\n    cookieEncoding: \"raw\" | \"base64url\";\n    cookies?:\n      | CookieMethodsBrowser\n      | CookieMethodsBrowserDeprecated\n      | CookieMethodsServer\n      | CookieMethodsServerDeprecated;\n    cookieOptions?: CookieOptionsWithName;\n  },\n  isServerClient: boolean,\n) {\n  const cookies = options.cookies ?? null;\n  const cookieEncoding = options.cookieEncoding;\n\n  const setItems: { [key: string]: string } = {};\n  const removedItems: { [key: string]: boolean } = {};\n\n  let getAll: (keyHints: string[]) => ReturnType<GetAllCookies>;\n  let setAll: SetAllCookies;\n\n  if (cookies) {\n    if (\"get\" in cookies) {\n      // Just get is not enough, because the client needs to see what cookies\n      // are already set and unset them if necessary. To attempt to fix this\n      // behavior for most use cases, we pass \"hints\" which is the keys of the\n      // storage items. They are then converted to their corresponding cookie\n      // chunk names and are fetched with get. Only 5 chunks are fetched, which\n      // should be enough for the majority of use cases, but does not solve\n      // those with very large sessions.\n\n      const getWithHints = async (keyHints: string[]) => {\n        // optimistically find the first 5 potential chunks for the specified key\n        const chunkNames = keyHints.flatMap((keyHint) => [\n          keyHint,\n          ...Array.from({ length: 5 }).map((_, i) => `${keyHint}.${i}`),\n        ]);\n\n        const chunks: ReturnType<GetAllCookies> = [];\n\n        for (let i = 0; i < chunkNames.length; i += 1) {\n          const value = await cookies.get(chunkNames[i]);\n\n          if (!value && typeof value !== \"string\") {\n            continue;\n          }\n\n          chunks.push({ name: chunkNames[i], value });\n        }\n\n        // TODO: detect and log stale chunks error\n\n        return chunks;\n      };\n\n      getAll = async (keyHints: string[]) => await getWithHints(keyHints);\n\n      if (\"set\" in cookies && \"remove\" in cookies) {\n        setAll = async (setCookies) => {\n          for (let i = 0; i < setCookies.length; i += 1) {\n            const { name, value, options } = setCookies[i];\n\n            if (value) {\n              await cookies.set!(name, value, options);\n            } else {\n              await cookies.remove!(name, options);\n            }\n          }\n        };\n      } else if (isServerClient) {\n        setAll = async () => {\n          console.warn(\n            \"@supabase/ssr: createServerClient was configured without set and remove cookie methods, but the client needs to set cookies. This can lead to issues such as random logouts, early session termination or increased token refresh requests. If in NextJS, check your middleware.ts file, route handlers and server actions for correctness. Consider switching to the getAll and setAll cookie methods instead of get, set and remove which are deprecated and can be difficult to use correctly.\",\n          );\n        };\n      } else {\n        throw new Error(\n          \"@supabase/ssr: createBrowserClient requires configuring a getAll and setAll cookie method (deprecated: alternatively both get, set and remove can be used)\",\n        );\n      }\n    } else if (\"getAll\" in cookies) {\n      getAll = async () => await cookies.getAll!();\n\n      if (\"setAll\" in cookies) {\n        setAll = cookies.setAll!;\n      } else if (isServerClient) {\n        setAll = async () => {\n          console.warn(\n            \"@supabase/ssr: createServerClient was configured without the setAll cookie method, but the client needs to set cookies. This can lead to issues such as random logouts, early session termination or increased token refresh requests. If in NextJS, check your middleware.ts file, route handlers and server actions for correctness.\",\n          );\n        };\n      } else {\n        throw new Error(\n          \"@supabase/ssr: createBrowserClient requires configuring both getAll and setAll cookie methods (deprecated: alternatively both get, set and remove can be used)\",\n        );\n      }\n    } else {\n      // neither get nor getAll is present on cookies, only will occur if pure JavaScript is used, but cookies is an object\n      throw new Error(\n        `@supabase/ssr: ${isServerClient ? \"createServerClient\" : \"createBrowserClient\"} requires configuring getAll and setAll cookie methods (deprecated: alternatively use get, set and remove).${isBrowser() ? \" As this is called in a browser runtime, consider removing the cookies option object to use the document.cookie API automatically.\" : \"\"}`,\n      );\n    }\n  } else if (!isServerClient && isBrowser()) {\n    // The environment is browser, so use the document.cookie API to implement getAll and setAll.\n\n    const noHintGetAll = () => {\n      const parsed = parse(document.cookie);\n\n      return Object.keys(parsed).map((name) => ({\n        name,\n        value: parsed[name] ?? \"\",\n      }));\n    };\n\n    getAll = () => noHintGetAll();\n\n    setAll = (setCookies) => {\n      setCookies.forEach(({ name, value, options }) => {\n        document.cookie = serialize(name, value, options);\n      });\n    };\n  } else if (isServerClient) {\n    throw new Error(\n      \"@supabase/ssr: createServerClient must be initialized with cookie options that specify getAll and setAll functions (deprecated, not recommended: alternatively use get, set and remove)\",\n    );\n  } else {\n    // getting cookies when there's no window but we're in browser mode can be OK, because the developer probably is not using auth functions\n    getAll = () => {\n      return [];\n    };\n\n    // this is NOT OK because the developer is using auth functions that require setting some state, so that must error out\n    setAll = () => {\n      throw new Error(\n        \"@supabase/ssr: createBrowserClient in non-browser runtimes (including Next.js pre-rendering mode) was not initialized cookie options that specify getAll and setAll functions (deprecated: alternatively use get, set and remove), but they were needed\",\n      );\n    };\n  }\n\n  if (!isServerClient) {\n    // This is the storage client to be used in browsers. It only\n    // works on the cookies abstraction, unlike the server client\n    // which only uses cookies to read the initial state. When an\n    // item is set, cookies are both cleared and set to values so\n    // that stale chunks are not left remaining.\n    return {\n      getAll, // for type consistency\n      setAll, // for type consistency\n      setItems, // for type consistency\n      removedItems, // for type consistency\n      storage: {\n        isServer: false,\n        getItem: async (key: string) => {\n          const allCookies = await getAll([key]);\n          const chunkedCookie = await combineChunks(\n            key,\n            async (chunkName: string) => {\n              const cookie =\n                allCookies?.find(({ name }) => name === chunkName) || null;\n\n              if (!cookie) {\n                return null;\n              }\n\n              return cookie.value;\n            },\n          );\n\n          if (!chunkedCookie) {\n            return null;\n          }\n\n          let decoded = chunkedCookie;\n\n          if (chunkedCookie.startsWith(BASE64_PREFIX)) {\n            decoded = stringFromBase64URL(\n              chunkedCookie.substring(BASE64_PREFIX.length),\n            );\n          }\n\n          return decoded;\n        },\n        setItem: async (key: string, value: string) => {\n          const allCookies = await getAll([key]);\n          const cookieNames = allCookies?.map(({ name }) => name) || [];\n\n          const removeCookies = new Set(\n            cookieNames.filter((name) => isChunkLike(name, key)),\n          );\n\n          let encoded = value;\n\n          if (cookieEncoding === \"base64url\") {\n            encoded = BASE64_PREFIX + stringToBase64URL(value);\n          }\n\n          const setCookies = createChunks(key, encoded);\n\n          setCookies.forEach(({ name }) => {\n            removeCookies.delete(name);\n          });\n\n          const removeCookieOptions = {\n            ...DEFAULT_COOKIE_OPTIONS,\n            ...options?.cookieOptions,\n            maxAge: 0,\n          };\n          const setCookieOptions = {\n            ...DEFAULT_COOKIE_OPTIONS,\n            ...options?.cookieOptions,\n            maxAge: DEFAULT_COOKIE_OPTIONS.maxAge,\n          };\n\n          // the NextJS cookieStore API can get confused if the `name` from\n          // options.cookieOptions leaks\n          delete removeCookieOptions.name;\n          delete setCookieOptions.name;\n\n          const allToSet = [\n            ...[...removeCookies].map((name) => ({\n              name,\n              value: \"\",\n              options: removeCookieOptions,\n            })),\n            ...setCookies.map(({ name, value }) => ({\n              name,\n              value,\n              options: setCookieOptions,\n            })),\n          ];\n\n          if (allToSet.length > 0) {\n            await setAll(allToSet);\n          }\n        },\n        removeItem: async (key: string) => {\n          const allCookies = await getAll([key]);\n          const cookieNames = allCookies?.map(({ name }) => name) || [];\n          const removeCookies = cookieNames.filter((name) =>\n            isChunkLike(name, key),\n          );\n\n          const removeCookieOptions = {\n            ...DEFAULT_COOKIE_OPTIONS,\n            ...options?.cookieOptions,\n            maxAge: 0,\n          };\n\n          // the NextJS cookieStore API can get confused if the `name` from\n          // options.cookieOptions leaks\n          delete removeCookieOptions.name;\n\n          if (removeCookies.length > 0) {\n            await setAll(\n              removeCookies.map((name) => ({\n                name,\n                value: \"\",\n                options: removeCookieOptions,\n              })),\n            );\n          }\n        },\n      },\n    };\n  }\n\n  // This is the server client. It only uses getAll to read the initial\n  // state. Any subsequent changes to the items is persisted in the\n  // setItems and removedItems objects. createServerClient *must* use\n  // getAll, setAll and the values in setItems and removedItems to\n  // persist the changes *at once* when appropriate (usually only when\n  // the TOKEN_REFRESHED, USER_UPDATED or SIGNED_OUT events are fired by\n  // the Supabase Auth client).\n  return {\n    getAll,\n    setAll,\n    setItems,\n    removedItems,\n    storage: {\n      // to signal to the libraries that these cookies are\n      // coming from a server environment and their value\n      // should not be trusted\n      isServer: true,\n      getItem: async (key: string) => {\n        if (typeof setItems[key] === \"string\") {\n          return setItems[key];\n        }\n\n        if (removedItems[key]) {\n          return null;\n        }\n\n        const allCookies = await getAll([key]);\n        const chunkedCookie = await combineChunks(\n          key,\n          async (chunkName: string) => {\n            const cookie =\n              allCookies?.find(({ name }) => name === chunkName) || null;\n\n            if (!cookie) {\n              return null;\n            }\n\n            return cookie.value;\n          },\n        );\n\n        if (!chunkedCookie) {\n          return null;\n        }\n\n        let decoded = chunkedCookie;\n\n        if (\n          typeof chunkedCookie === \"string\" &&\n          chunkedCookie.startsWith(BASE64_PREFIX)\n        ) {\n          decoded = stringFromBase64URL(\n            chunkedCookie.substring(BASE64_PREFIX.length),\n          );\n        }\n\n        return decoded;\n      },\n      setItem: async (key: string, value: string) => {\n        // We don't have an `onAuthStateChange` event that can let us know that\n        // the PKCE code verifier is being set. Therefore, if we see it being\n        // set, we need to apply the storage (call `setAll` so the cookie is\n        // set properly).\n        if (key.endsWith(\"-code-verifier\")) {\n          await applyServerStorage(\n            {\n              getAll,\n              setAll,\n              // pretend only that the code verifier was set\n              setItems: { [key]: value },\n              // pretend that nothing was removed\n              removedItems: {},\n            },\n            {\n              cookieOptions: options?.cookieOptions ?? null,\n              cookieEncoding,\n            },\n          );\n        }\n\n        setItems[key] = value;\n        delete removedItems[key];\n      },\n      removeItem: async (key: string) => {\n        // Intentionally not applying the storage when the key is the PKCE code\n        // verifier, as usually right after it's removed other items are set,\n        // so application of the storage will be handled by the\n        // `onAuthStateChange` callback that follows removal -- usually as part\n        // of the `exchangeCodeForSession` call.\n        delete setItems[key];\n        removedItems[key] = true;\n      },\n    },\n  };\n}\n\n/**\n * When createServerClient needs to apply the created storage to cookies, it\n * should call this function which handles correcly setting cookies for stored\n * and removed items in the storage.\n */\nexport async function applyServerStorage(\n  {\n    getAll,\n    setAll,\n    setItems,\n    removedItems,\n  }: {\n    getAll: (keyHints: string[]) => ReturnType<GetAllCookies>;\n    setAll: SetAllCookies;\n    setItems: { [name: string]: string };\n    removedItems: { [name: string]: boolean };\n  },\n  options: {\n    cookieEncoding: \"raw\" | \"base64url\";\n    cookieOptions?: CookieOptions | null;\n  },\n) {\n  const cookieEncoding = options.cookieEncoding;\n  const cookieOptions = options.cookieOptions ?? null;\n\n  const allCookies = await getAll([\n    ...(setItems ? (Object.keys(setItems) as string[]) : []),\n    ...(removedItems ? (Object.keys(removedItems) as string[]) : []),\n  ]);\n  const cookieNames = allCookies?.map(({ name }) => name) || [];\n\n  const removeCookies: string[] = Object.keys(removedItems).flatMap(\n    (itemName) => {\n      return cookieNames.filter((name) => isChunkLike(name, itemName));\n    },\n  );\n\n  const setCookies = Object.keys(setItems).flatMap((itemName) => {\n    const removeExistingCookiesForItem = new Set(\n      cookieNames.filter((name) => isChunkLike(name, itemName)),\n    );\n\n    let encoded = setItems[itemName];\n\n    if (cookieEncoding === \"base64url\") {\n      encoded = BASE64_PREFIX + stringToBase64URL(encoded);\n    }\n\n    const chunks = createChunks(itemName, encoded);\n\n    chunks.forEach((chunk) => {\n      removeExistingCookiesForItem.delete(chunk.name);\n    });\n\n    removeCookies.push(...removeExistingCookiesForItem);\n\n    return chunks;\n  });\n\n  const removeCookieOptions = {\n    ...DEFAULT_COOKIE_OPTIONS,\n    ...cookieOptions,\n    maxAge: 0,\n  };\n  const setCookieOptions = {\n    ...DEFAULT_COOKIE_OPTIONS,\n    ...cookieOptions,\n    maxAge: DEFAULT_COOKIE_OPTIONS.maxAge,\n  };\n\n  // the NextJS cookieStore API can get confused if the `name` from\n  // options.cookieOptions leaks\n  delete (removeCookieOptions as any).name;\n  delete (setCookieOptions as any).name;\n\n  await setAll([\n    ...removeCookies.map((name) => ({\n      name,\n      value: \"\",\n      options: removeCookieOptions,\n    })),\n    ...setCookies.map(({ name, value }) => ({\n      name,\n      value,\n      options: setCookieOptions,\n    })),\n  ]);\n}\n","import {\n  AuthChangeEvent,\n  createClient,\n  SupabaseClient,\n  SupabaseClientOptions,\n} from \"@supabase/supabase-js\";\n\nimport { VERSION } from \"./version\";\nimport { createStorageFromOptions, applyServerStorage } from \"./cookies\";\nimport type {\n  CookieOptionsWithName,\n  CookieMethodsServer,\n  CookieMethodsServerDeprecated,\n} from \"./types\";\n\n/**\n * @deprecated Please specify `getAll` and `setAll` cookie methods instead of\n * the `get`, `set` and `remove`. These will not be supported in the next major\n * version.\n */\nexport function createServerClient<\n  Database = any,\n  SchemaName extends string &\n    keyof Omit<Database, \"__InternalSupabase\"> = \"public\" extends keyof Omit<\n    Database,\n    \"__InternalSupabase\"\n  >\n    ? \"public\"\n    : string & keyof Omit<Database, \"__InternalSupabase\">,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options: SupabaseClientOptions<SchemaName> & {\n    cookieOptions?: CookieOptionsWithName;\n    cookies: CookieMethodsServerDeprecated;\n    cookieEncoding?: \"raw\" | \"base64url\";\n  },\n): SupabaseClient<Database, SchemaName>;\n\n/**\n * Creates a Supabase Client for use on the server-side of a server-side\n * rendering (SSR) framework.\n *\n * There are two categories of uses for this function: use in middlewares and\n * use in pages, components or routes.\n *\n * **Use in middlewares.**\n *\n * Middlewares are functions that run before any rendering logic is executed on\n * the server-side. They typically have access to request headers (cookies) and\n * can modify both the request and response headers.\n *\n * In most SSR frameworks, to use Supabase correctly you *must set up a\n * middleware* and use this function in it.\n *\n * When using this in a middleware, the `cookie` option must be configured to\n * use both `getAll` and `setAll`. Alternatively you can use the `get`, `set`\n * and `remove` functions. The latter are deprecated **and not recommended**\n * for most use cases due to being difficult to use properly and they do not\n * cover important edge cases. In future major versions of the library, the\n * option to configure `get`, `set` and `remove` will be removed.\n *\n * **IMPORTANT:** Failing to implement `getAll` and `setAll` correctly (or the\n * deprecated `get`, `set` and `remove`) including omitting them **will cause\n * significant and difficult to debug authentication issues**. They will\n * manifest as: random logouts, early session termination, JSON parsing errors,\n * increased number of refresh token requests, or relying on garbage state.\n *\n * **Use in pages, components or routes.**\n *\n * To use Supabase features server-side rendered in pages, components or routes\n * (a.k.a. actions / APIs) you must create a client with this function. Not all\n * frameworks allow the ability to set cookies or response headers when pages\n * or components are rendered. In those cases you _can omit `setAll` (or the\n * deprecated `set`, `remove`) cookie option methods_. **It is strongly\n * recommended that if the ability to set cookies and response headers is\n * present, you should configure the `setAll` (or the deprecated `set` and\n * `remove`) cookie access methods.**\n *\n * **IMPORTANT:** If the ability to set cookies or response headers is not\n * available **middleware or an equivalent must be used.** Failing to do this\n * will cause significant and difficult to debug authentication issues.\n *\n * When `setAll` (or the deprecated `set`, `remove`) cookie methods are not\n * configured, the Supabase Client will emit a warning if it is used in a way\n * that requires setting cookies. If you see this warning, it usually means\n * that you are using the Supabase Client in a wrong way:\n *\n * - You should have, but did not configure a middleware client.\n * - There is a bug in your middleware function.\n * - You are using features of the Supabase Client that change the User, e.g.\n *   by calling `supabase.auth.updateUser()` on the server.\n *\n * Please consult the latest Supabase guides for advice on how to avoid common\n * pitfalls depending on SSR framework.\n *\n * @param supabaseUrl The URL of the Supabase project.\n * @param supabaseKey The `anon` API key of the Supabase project.\n * @param options Various configuration options.\n */\nexport function createServerClient<\n  Database = any,\n  SchemaName extends string &\n    keyof Omit<Database, \"__InternalSupabase\"> = \"public\" extends keyof Omit<\n    Database,\n    \"__InternalSupabase\"\n  >\n    ? \"public\"\n    : string & keyof Omit<Database, \"__InternalSupabase\">,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options: SupabaseClientOptions<SchemaName> & {\n    cookieOptions?: CookieOptionsWithName;\n    cookies: CookieMethodsServer;\n    cookieEncoding?: \"raw\" | \"base64url\";\n  },\n): SupabaseClient<Database, SchemaName>;\n\nexport function createServerClient<\n  Database = any,\n  SchemaName extends string &\n    keyof Omit<Database, \"__InternalSupabase\"> = \"public\" extends keyof Omit<\n    Database,\n    \"__InternalSupabase\"\n  >\n    ? \"public\"\n    : string & keyof Omit<Database, \"__InternalSupabase\">,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options: SupabaseClientOptions<SchemaName> & {\n    cookieOptions?: CookieOptionsWithName;\n    cookies: CookieMethodsServer | CookieMethodsServerDeprecated;\n    cookieEncoding?: \"raw\" | \"base64url\";\n  },\n): SupabaseClient<Database, SchemaName> {\n  if (!supabaseUrl || !supabaseKey) {\n    throw new Error(\n      `Your project's URL and Key are required to create a Supabase client!\\n\\nCheck your Supabase project's API settings to find these values\\n\\nhttps://supabase.com/dashboard/project/_/settings/api`,\n    );\n  }\n\n  const { storage, getAll, setAll, setItems, removedItems } =\n    createStorageFromOptions(\n      {\n        ...options,\n        cookieEncoding: options?.cookieEncoding ?? \"base64url\",\n      },\n      true,\n    );\n\n  const client = createClient<Database, SchemaName>(supabaseUrl, supabaseKey, {\n    // TODO: resolve type error\n    ...(options as any),\n    global: {\n      ...options?.global,\n      headers: {\n        ...options?.global?.headers,\n        \"X-Client-Info\": `supabase-ssr/${VERSION} createServerClient`,\n      },\n    },\n    auth: {\n      ...(options?.cookieOptions?.name\n        ? { storageKey: options.cookieOptions.name }\n        : null),\n      ...options?.auth,\n      flowType: \"pkce\",\n      autoRefreshToken: false,\n      detectSessionInUrl: false,\n      persistSession: true,\n      storage,\n    },\n  });\n\n  client.auth.onAuthStateChange(async (event: AuthChangeEvent) => {\n    // The SIGNED_IN event is fired very often, but we don't need to\n    // apply the storage each time it fires, only if there are changes\n    // that need to be set -- which is if setItems / removeItems have\n    // data.\n    const hasStorageChanges =\n      Object.keys(setItems).length > 0 || Object.keys(removedItems).length > 0;\n\n    if (\n      hasStorageChanges &&\n      (event === \"SIGNED_IN\" ||\n        event === \"TOKEN_REFRESHED\" ||\n        event === \"USER_UPDATED\" ||\n        event === \"PASSWORD_RECOVERY\" ||\n        event === \"SIGNED_OUT\" ||\n        event === \"MFA_CHALLENGE_VERIFIED\")\n    ) {\n      await applyServerStorage(\n        { getAll, setAll, setItems, removedItems },\n        {\n          cookieOptions: options?.cookieOptions ?? null,\n          cookieEncoding: options?.cookieEncoding ?? \"base64url\",\n        },\n      );\n    }\n  });\n\n  return client;\n}\n","import { createBrowserClient } from \"@supabase/ssr\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co';\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder_key';\n\nexport function getBrowserSupabaseClient() {\n  // Handle missing environment variables during build time\n  if (!supabaseUrl || !supabaseAnonKey) {\n    if (process.env.NODE_ENV === 'development' || process.env.NEXT_PHASE === 'phase-production-build') {\n      // Return a mock client during build time\n      return createBrowserClient('https://placeholder.supabase.co', 'placeholder_key');\n    }\n    throw new Error(\"Supabase env vars missing\");\n  }\n  return createBrowserClient(supabaseUrl, supabaseAnonKey);\n}\n\n","import { createClient } from \"@supabase/supabase-js\";\nimport { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\n// Server-side Supabase helpers\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co';\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder_key';\n\nexport function getServerSupabaseClient() {\n  // Handle missing environment variables during build time\n  if (!supabaseUrl || !supabaseAnonKey) {\n    if (process.env.NODE_ENV === 'development' || process.env.NEXT_PHASE === 'phase-production-build') {\n      // Return a mock client during build time\n      return createClient('https://placeholder.supabase.co', 'placeholder_key');\n    }\n    throw new Error(\"Supabase env vars missing\");\n  }\n  return createClient(supabaseUrl, supabaseAnonKey);\n}\n\nexport function createServerSupabaseClient(request?: any) {\n  // Handle missing environment variables during build time\n  if (!supabaseUrl || !supabaseAnonKey) {\n    if (process.env.NODE_ENV === 'development' || process.env.NEXT_PHASE === 'phase-production-build') {\n      // Return a mock client during build time\n      return createClient('https://placeholder.supabase.co', 'placeholder_key');\n    }\n    throw new Error(\"Supabase env vars missing\");\n  }\n  \n  // If request is provided, use it for cookie handling\n  if (request) {\n    return createServerClient(supabaseUrl, supabaseAnonKey, {\n      cookies: {\n        get(name: string) {\n          return request.cookies.get(name)?.value;\n        },\n        set(name: string, value: string, options: any) {\n          request.cookies.set({ name, value, ...options });\n        },\n        remove(name: string, options: any) {\n          request.cookies.set({ name, value: '', ...options });\n        },\n      },\n    });\n  }\n  \n  // Fallback to regular client\n  return createClient(supabaseUrl, supabaseAnonKey);\n}\n\nexport function getServiceSupabaseClient() {\n  const serviceRole = process.env.SUPABASE_SERVICE_ROLE_KEY;\n  if (!supabaseUrl || !serviceRole) {\n    throw new Error(\"Supabase service role env vars missing\");\n  }\n  return createClient(supabaseUrl, serviceRole);\n}\n\n","export class AppError extends Error {\n  code: string;\n  hint?: string;\n  constructor(code: string, message: string, hint?: string) {\n    super(message);\n    this.code = code;\n    this.hint = hint;\n  }\n}\n\n","import Stripe from \"stripe\";\n\nexport function getStripe() {\n  const key = process.env.STRIPE_SECRET_KEY;\n  if (!key) {\n    throw new Error(\"STRIPE_SECRET_KEY missing\");\n  }\n  return new Stripe(key, {\n    apiVersion: \"2023-10-16\",\n  });\n}\n\nexport const STRIPE_WEBHOOK_SECRET = process.env.STRIPE_WEBHOOK_SECRET || \"\";\n\n","import Stripe from 'stripe'\nimport { PLANS } from '../types/plans'\n\nexport interface CheckoutSession {\n  id: string\n  url: string\n  customer_email?: string\n  customer_id?: string\n  subscription_id?: string\n}\n\nexport interface CreateCheckoutSessionRequest {\n  plan_id: string\n  customer_id?: string\n  customer_email?: string\n  success_url: string\n  cancel_url: string\n  trial_period_days?: number\n}\n\nexport interface CreateCheckoutSessionResponse {\n  success: boolean\n  session?: CheckoutSession\n  error?: string\n}\n\nexport class StripeCheckoutService {\n  private stripe: Stripe\n\n  constructor(apiKey: string) {\n    this.stripe = new Stripe(apiKey, {\n      apiVersion: '2023-10-16',\n    })\n  }\n\n  async createCheckoutSession(\n    request: CreateCheckoutSessionRequest\n  ): Promise<CreateCheckoutSessionResponse> {\n    try {\n      const plan = PLANS.find(p => p.id === request.plan_id)\n      if (!plan) {\n        return {\n          success: false,\n          error: 'Plan not found'\n        }\n      }\n\n      if (!plan.stripe_price_id) {\n        return {\n          success: false,\n          error: 'Plan does not support Stripe checkout'\n        }\n      }\n\n      const sessionParams: Stripe.Checkout.SessionCreateParams = {\n        mode: 'subscription',\n        payment_method_types: ['card'],\n        line_items: [\n          {\n            price: plan.stripe_price_id,\n            quantity: 1,\n          },\n        ],\n        success_url: request.success_url,\n        cancel_url: request.cancel_url,\n        metadata: {\n          plan_id: plan.id,\n        },\n      }\n\n      // Add customer information if provided\n      if (request.customer_id) {\n        sessionParams.customer = request.customer_id\n      } else if (request.customer_email) {\n        sessionParams.customer_email = request.customer_email\n      }\n\n      // Add trial period if specified\n      if (request.trial_period_days && request.trial_period_days > 0) {\n        sessionParams.subscription_data = {\n          trial_period_days: request.trial_period_days,\n        }\n      }\n\n      const session = await this.stripe.checkout.sessions.create(sessionParams)\n\n      return {\n        success: true,\n        session: {\n          id: session.id,\n          url: session.url!,\n          customer_email: session.customer_email || undefined,\n          customer_id: typeof session.customer === 'string' ? session.customer : session.customer?.id,\n          subscription_id: typeof session.subscription === 'string' ? session.subscription : session.subscription?.id,\n        }\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to create checkout session'\n      }\n    }\n  }\n\n  async retrieveCheckoutSession(sessionId: string): Promise<CheckoutSession | null> {\n    try {\n      const session = await this.stripe.checkout.sessions.retrieve(sessionId)\n      \n      return {\n        id: session.id,\n        url: session.url!,\n        customer_email: session.customer_email || undefined,\n        customer_id: typeof session.customer === 'string' ? session.customer : session.customer?.id,\n        subscription_id: typeof session.subscription === 'string' ? session.subscription : session.subscription?.id,\n      }\n    } catch (error) {\n      console.error('Error retrieving checkout session:', error)\n      return null\n    }\n  }\n\n  async createCustomerPortalSession(\n    customerId: string,\n    returnUrl: string\n  ): Promise<{ url: string } | null> {\n    try {\n      const session = await this.stripe.billingPortal.sessions.create({\n        customer: customerId,\n        return_url: returnUrl,\n      })\n\n      return { url: session.url }\n    } catch (error) {\n      console.error('Error creating customer portal session:', error)\n      return null\n    }\n  }\n}\n\n// Create a singleton instance\nexport const stripeCheckoutService = new StripeCheckoutService(\n  process.env.STRIPE_SECRET_KEY || ''\n)\n","export interface Plan {\n  id: string\n  name: string\n  description: string\n  price: number\n  interval: 'month' | 'year'\n  features: string[]\n  limits: {\n    websites: number\n    domains: number\n    storage: number // in GB\n    bandwidth: number // in GB\n    team_members: number\n  }\n  stripe_price_id?: string\n  is_popular?: boolean\n  is_enterprise?: boolean\n}\n\nexport interface UserPlan {\n  id: string\n  user_id: string\n  plan_id: string\n  status: 'active' | 'canceled' | 'past_due' | 'unpaid'\n  current_period_start: string\n  current_period_end: string\n  cancel_at_period_end: boolean\n  stripe_subscription_id?: string\n  stripe_customer_id?: string\n  created_at: string\n  updated_at: string\n  plan: Plan\n}\n\nexport interface Website {\n  id: string\n  user_id: string\n  name: string\n  subdomain: string\n  url: string\n  status: 'active' | 'inactive' | 'pending' | 'suspended'\n  template: string\n  description?: string\n  created_at: string\n  updated_at: string\n  last_deployed_at?: string\n}\n\nexport interface Domain {\n  id: string\n  website_id: string\n  domain: string\n  status: 'active' | 'inactive' | 'pending' | 'failed'\n  ssl_enabled: boolean\n  created_at: string\n  updated_at: string\n  website: Website\n}\n\nexport interface UsageStats {\n  websites_count: number\n  domains_count: number\n  storage_used: number // in GB\n  bandwidth_used: number // in GB\n  team_members_count: number\n}\n\nexport interface PlanLimits {\n  websites: number\n  domains: number\n  storage: number\n  bandwidth: number\n  team_members: number\n}\n\nexport interface PlanUsage {\n  websites: { used: number; limit: number }\n  domains: { used: number; limit: number }\n  storage: { used: number; limit: number }\n  bandwidth: { used: number; limit: number }\n  team_members: { used: number; limit: number }\n}\n\n// Plan definitions\nexport const PLANS: Plan[] = [\n  {\n    id: 'trial',\n    name: 'Trial',\n    description: 'Perfect for testing the platform',\n    price: 0,\n    interval: 'month',\n    features: [\n      '1 Website',\n      '1 Subdomain',\n      '1GB Storage',\n      '10GB Bandwidth',\n      'Basic Support',\n      'WordPress Hosting'\n    ],\n    limits: {\n      websites: 1,\n      domains: 1,\n      storage: 1,\n      bandwidth: 10,\n      team_members: 1\n    }\n  },\n  {\n    id: 'starter',\n    name: 'Starter',\n    description: 'Great for small businesses and freelancers',\n    price: 49,\n    interval: 'month',\n    features: [\n      '3 Websites',\n      '3 Custom Domains',\n      '10GB Storage',\n      '100GB Bandwidth',\n      'Priority Support',\n      'WordPress Hosting',\n      'SSL Certificates',\n      'Basic Analytics'\n    ],\n    limits: {\n      websites: 3,\n      domains: 3,\n      storage: 10,\n      bandwidth: 100,\n      team_members: 2\n    },\n    stripe_price_id: 'price_starter_monthly'\n  },\n  {\n    id: 'pro',\n    name: 'Pro',\n    description: 'Perfect for growing businesses',\n    price: 99,\n    interval: 'month',\n    features: [\n      '10 Websites',\n      '10 Custom Domains',\n      '50GB Storage',\n      '500GB Bandwidth',\n      'Priority Support',\n      'WordPress Hosting',\n      'SSL Certificates',\n      'Advanced Analytics',\n      'Team Collaboration',\n      'API Access'\n    ],\n    limits: {\n      websites: 10,\n      domains: 10,\n      storage: 50,\n      bandwidth: 500,\n      team_members: 5\n    },\n    is_popular: true,\n    stripe_price_id: 'price_pro_monthly'\n  },\n  {\n    id: 'enterprise',\n    name: 'Enterprise',\n    description: 'For large organizations with custom needs',\n    price: 199,\n    interval: 'month',\n    features: [\n      'Unlimited Websites',\n      'Unlimited Domains',\n      '500GB Storage',\n      '2TB Bandwidth',\n      '24/7 Priority Support',\n      'WordPress Hosting',\n      'SSL Certificates',\n      'Advanced Analytics',\n      'Team Collaboration',\n      'API Access',\n      'Custom Integrations',\n      'Dedicated Support'\n    ],\n    limits: {\n      websites: -1, // -1 means unlimited\n      domains: -1,\n      storage: 500,\n      bandwidth: 2000,\n      team_members: -1\n    },\n    is_enterprise: true,\n    stripe_price_id: 'price_enterprise_monthly'\n  }\n]\n\n// Helper functions\nexport function getPlanById(id: string): Plan | undefined {\n  return PLANS.find(plan => plan.id === id)\n}\n\nexport function getPlanLimits(planId: string): PlanLimits | null {\n  const plan = getPlanById(planId)\n  return plan ? plan.limits : null\n}\n\nexport function calculateUsagePercentage(usage: number, limit: number): number {\n  if (limit === -1) return 0 // Unlimited\n  if (limit === 0) return 100\n  return Math.min((usage / limit) * 100, 100)\n}\n\nexport function isFeatureAvailable(planId: string, feature: keyof PlanLimits, currentUsage: number): boolean {\n  const limits = getPlanLimits(planId)\n  if (!limits) return false\n  \n  const limit = limits[feature]\n  if (limit === -1) return true // Unlimited\n  return currentUsage < limit\n}\n\nexport function formatStorageSize(gb: number): string {\n  if (gb >= 1000) {\n    return `${(gb / 1000).toFixed(1)}TB`\n  }\n  return `${gb}GB`\n}\n\nexport function formatBandwidthSize(gb: number): string {\n  if (gb >= 1000) {\n    return `${(gb / 1000).toFixed(1)}TB`\n  }\n  return `${gb}GB`\n}","import Stripe from 'stripe'\nimport { UserPlan } from '../types/plans'\n\nexport interface Subscription {\n  id: string\n  customer_id: string\n  status: 'active' | 'canceled' | 'incomplete' | 'incomplete_expired' | 'past_due' | 'trialing' | 'unpaid'\n  current_period_start: number\n  current_period_end: number\n  cancel_at_period_end: boolean\n  canceled_at?: number\n  trial_start?: number\n  trial_end?: number\n  plan_id: string\n  price_id: string\n  created: number\n}\n\nexport interface CreateSubscriptionRequest {\n  customer_id: string\n  price_id: string\n  trial_period_days?: number\n}\n\nexport interface CreateSubscriptionResponse {\n  success: boolean\n  subscription?: Subscription\n  error?: string\n}\n\nexport interface UpdateSubscriptionRequest {\n  subscription_id: string\n  price_id?: string\n  cancel_at_period_end?: boolean\n}\n\nexport interface UpdateSubscriptionResponse {\n  success: boolean\n  subscription?: Subscription\n  error?: string\n}\n\nexport interface CancelSubscriptionRequest {\n  subscription_id: string\n  immediately?: boolean\n}\n\nexport interface CancelSubscriptionResponse {\n  success: boolean\n  subscription?: Subscription\n  error?: string\n}\n\nexport class StripeSubscriptionService {\n  private stripe: Stripe\n\n  constructor(apiKey: string) {\n    this.stripe = new Stripe(apiKey, {\n      apiVersion: '2023-10-16',\n    })\n  }\n\n  async createSubscription(\n    request: CreateSubscriptionRequest\n  ): Promise<CreateSubscriptionResponse> {\n    try {\n      const subscriptionParams: Stripe.SubscriptionCreateParams = {\n        customer: request.customer_id,\n        items: [\n          {\n            price: request.price_id,\n          },\n        ],\n        payment_behavior: 'default_incomplete',\n        payment_settings: { save_default_payment_method: 'on_subscription' },\n        expand: ['latest_invoice.payment_intent'],\n      }\n\n      if (request.trial_period_days && request.trial_period_days > 0) {\n        subscriptionParams.trial_period_days = request.trial_period_days\n      }\n\n      const subscription = await this.stripe.subscriptions.create(subscriptionParams)\n\n      return {\n        success: true,\n        subscription: this.mapSubscription(subscription),\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to create subscription'\n      }\n    }\n  }\n\n  async updateSubscription(\n    request: UpdateSubscriptionRequest\n  ): Promise<UpdateSubscriptionResponse> {\n    try {\n      const updateParams: Stripe.SubscriptionUpdateParams = {}\n\n      if (request.price_id) {\n        const subscription = await this.stripe.subscriptions.retrieve(request.subscription_id)\n        await this.stripe.subscriptions.update(request.subscription_id, {\n          items: [\n            {\n              id: subscription.items.data[0].id,\n              price: request.price_id,\n            },\n          ],\n        })\n      }\n\n      if (request.cancel_at_period_end !== undefined) {\n        updateParams.cancel_at_period_end = request.cancel_at_period_end\n      }\n\n      if (Object.keys(updateParams).length > 0) {\n        const subscription = await this.stripe.subscriptions.update(\n          request.subscription_id,\n          updateParams\n        )\n\n        return {\n          success: true,\n          subscription: this.mapSubscription(subscription),\n        }\n      }\n\n      // If no updates needed, just return the current subscription\n      const subscription = await this.stripe.subscriptions.retrieve(request.subscription_id)\n      return {\n        success: true,\n        subscription: this.mapSubscription(subscription),\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to update subscription'\n      }\n    }\n  }\n\n  async cancelSubscription(\n    request: CancelSubscriptionRequest\n  ): Promise<CancelSubscriptionResponse> {\n    try {\n      let subscription: Stripe.Subscription\n\n      if (request.immediately) {\n        subscription = await this.stripe.subscriptions.cancel(request.subscription_id)\n      } else {\n        subscription = await this.stripe.subscriptions.update(request.subscription_id, {\n          cancel_at_period_end: true,\n        })\n      }\n\n      return {\n        success: true,\n        subscription: this.mapSubscription(subscription),\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to cancel subscription'\n      }\n    }\n  }\n\n  async getSubscription(subscriptionId: string): Promise<Subscription | null> {\n    try {\n      const subscription = await this.stripe.subscriptions.retrieve(subscriptionId)\n      return this.mapSubscription(subscription)\n    } catch (error) {\n      console.error('Error retrieving subscription:', error)\n      return null\n    }\n  }\n\n  async getCustomerSubscriptions(customerId: string): Promise<Subscription[]> {\n    try {\n      const subscriptions = await this.stripe.subscriptions.list({\n        customer: customerId,\n        status: 'all',\n      })\n\n      return subscriptions.data.map(sub => this.mapSubscription(sub))\n    } catch (error) {\n      console.error('Error retrieving customer subscriptions:', error)\n      return []\n    }\n  }\n\n  async getUpcomingInvoice(customerId: string): Promise<Stripe.Invoice | null> {\n    try {\n      const invoice = await this.stripe.invoices.retrieveUpcoming({\n        customer: customerId,\n      })\n      return invoice as unknown as Stripe.Invoice\n    } catch (error) {\n      console.error('Error retrieving upcoming invoice:', error)\n      return null\n    }\n  }\n\n  private mapSubscription(subscription: Stripe.Subscription): Subscription {\n    const price = subscription.items.data[0]?.price\n    const planId = price?.metadata?.plan_id || 'unknown'\n\n    return {\n      id: subscription.id,\n      customer_id: subscription.customer as string,\n      status: subscription.status as 'active' | 'canceled' | 'incomplete' | 'incomplete_expired' | 'past_due' | 'trialing' | 'unpaid',\n      current_period_start: subscription.current_period_start,\n      current_period_end: subscription.current_period_end,\n      cancel_at_period_end: subscription.cancel_at_period_end,\n      canceled_at: subscription.canceled_at || undefined,\n      trial_start: subscription.trial_start || undefined,\n      trial_end: subscription.trial_end || undefined,\n      plan_id: planId,\n      price_id: price?.id || '',\n      created: subscription.created,\n    }\n  }\n}\n\n// Create a singleton instance\nexport const stripeSubscriptionService = new StripeSubscriptionService(\n  process.env.STRIPE_SECRET_KEY || ''\n)\n","import Stripe from 'stripe'\nimport { createClient } from '@supabase/supabase-js'\n\nexport interface WebhookEvent {\n  id: string\n  type: string\n  data: any\n  created: number\n}\n\nexport interface ProcessWebhookResponse {\n  success: boolean\n  error?: string\n}\n\nexport class StripeWebhookService {\n  private stripe: Stripe\n  private supabase: any\n\n  constructor(stripeSecretKey: string, supabaseUrl: string, supabaseServiceKey: string) {\n    this.stripe = new Stripe(stripeSecretKey, {\n      apiVersion: '2023-10-16',\n    })\n    this.supabase = createClient(supabaseUrl || 'https://placeholder.supabase.co', supabaseServiceKey || 'placeholder_key')\n  }\n\n  async processWebhook(\n    payload: string | Buffer,\n    signature: string,\n    webhookSecret: string\n  ): Promise<ProcessWebhookResponse> {\n    try {\n      const event = this.stripe.webhooks.constructEvent(payload, signature, webhookSecret)\n      \n      switch (event.type) {\n        case 'checkout.session.completed':\n          return await this.handleCheckoutSessionCompleted(event.data.object as Stripe.Checkout.Session)\n        \n        case 'customer.subscription.created':\n          return await this.handleSubscriptionCreated(event.data.object as Stripe.Subscription)\n        \n        case 'customer.subscription.updated':\n          return await this.handleSubscriptionUpdated(event.data.object as Stripe.Subscription)\n        \n        case 'customer.subscription.deleted':\n          return await this.handleSubscriptionDeleted(event.data.object as Stripe.Subscription)\n        \n        case 'invoice.payment_succeeded':\n          return await this.handlePaymentSucceeded(event.data.object as Stripe.Invoice)\n        \n        case 'invoice.payment_failed':\n          return await this.handlePaymentFailed(event.data.object as Stripe.Invoice)\n        \n        case 'customer.created':\n          return await this.handleCustomerCreated(event.data.object as Stripe.Customer)\n        \n        case 'customer.updated':\n          return await this.handleCustomerUpdated(event.data.object as Stripe.Customer)\n        \n        default:\n          console.log(`Unhandled event type: ${event.type}`)\n          return { success: true }\n      }\n    } catch (error) {\n      console.error('Webhook processing error:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Webhook processing failed'\n      }\n    }\n  }\n\n  private async handleCheckoutSessionCompleted(session: Stripe.Checkout.Session): Promise<ProcessWebhookResponse> {\n    try {\n      const customerId = session.customer as string\n      const subscriptionId = session.subscription as string\n      const planId = session.metadata?.plan_id\n\n      if (!customerId || !subscriptionId || !planId) {\n        throw new Error('Missing required session data')\n      }\n\n      // Get the subscription details\n      const subscription = await this.stripe.subscriptions.retrieve(subscriptionId)\n      \n      // Create or update user plan in database\n      const { error } = await this.supabase\n        .from('user_plans')\n        .upsert({\n          user_id: customerId, // Assuming customer_id maps to user_id\n          plan_id: planId,\n          stripe_subscription_id: subscriptionId,\n          status: subscription.status,\n          current_period_start: new Date(subscription.current_period_start * 1000).toISOString(),\n          current_period_end: new Date(subscription.current_period_end * 1000).toISOString(),\n          cancel_at_period_end: subscription.cancel_at_period_end,\n        })\n\n      if (error) {\n        throw new Error(`Database error: ${error.message}`)\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling checkout session completed:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process checkout session'\n      }\n    }\n  }\n\n  private async handleSubscriptionCreated(subscription: Stripe.Subscription): Promise<ProcessWebhookResponse> {\n    try {\n      const customerId = subscription.customer as string\n      const planId = subscription.metadata?.plan_id || 'unknown'\n\n      // Update user plan status\n      const { error } = await this.supabase\n        .from('user_plans')\n        .update({\n          status: subscription.status,\n          current_period_start: new Date(subscription.current_period_start * 1000).toISOString(),\n          current_period_end: new Date(subscription.current_period_end * 1000).toISOString(),\n          cancel_at_period_end: subscription.cancel_at_period_end,\n        })\n        .eq('stripe_subscription_id', subscription.id)\n\n      if (error) {\n        throw new Error(`Database error: ${error.message}`)\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling subscription created:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process subscription created'\n      }\n    }\n  }\n\n  private async handleSubscriptionUpdated(subscription: Stripe.Subscription): Promise<ProcessWebhookResponse> {\n    try {\n      // Update user plan with new subscription details\n      const { error } = await this.supabase\n        .from('user_plans')\n        .update({\n          status: subscription.status,\n          current_period_start: new Date(subscription.current_period_start * 1000).toISOString(),\n          current_period_end: new Date(subscription.current_period_end * 1000).toISOString(),\n          cancel_at_period_end: subscription.cancel_at_period_end,\n          canceled_at: subscription.canceled_at ? new Date(subscription.canceled_at * 1000).toISOString() : null,\n        })\n        .eq('stripe_subscription_id', subscription.id)\n\n      if (error) {\n        throw new Error(`Database error: ${error.message}`)\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling subscription updated:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process subscription updated'\n      }\n    }\n  }\n\n  private async handleSubscriptionDeleted(subscription: Stripe.Subscription): Promise<ProcessWebhookResponse> {\n    try {\n      // Mark subscription as canceled\n      const { error } = await this.supabase\n        .from('user_plans')\n        .update({\n          status: 'canceled',\n          canceled_at: new Date().toISOString(),\n        })\n        .eq('stripe_subscription_id', subscription.id)\n\n      if (error) {\n        throw new Error(`Database error: ${error.message}`)\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling subscription deleted:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process subscription deleted'\n      }\n    }\n  }\n\n  private async handlePaymentSucceeded(invoice: Stripe.Invoice): Promise<ProcessWebhookResponse> {\n    try {\n      const subscriptionId = invoice.subscription as string\n      \n      if (subscriptionId) {\n        // Update subscription status to active\n        const { error } = await this.supabase\n          .from('user_plans')\n          .update({\n            status: 'active',\n          })\n          .eq('stripe_subscription_id', subscriptionId)\n\n        if (error) {\n          throw new Error(`Database error: ${error.message}`)\n        }\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling payment succeeded:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process payment succeeded'\n      }\n    }\n  }\n\n  private async handlePaymentFailed(invoice: Stripe.Invoice): Promise<ProcessWebhookResponse> {\n    try {\n      const subscriptionId = invoice.subscription as string\n      \n      if (subscriptionId) {\n        // Update subscription status to past_due\n        const { error } = await this.supabase\n          .from('user_plans')\n          .update({\n            status: 'past_due',\n          })\n          .eq('stripe_subscription_id', subscriptionId)\n\n        if (error) {\n          throw new Error(`Database error: ${error.message}`)\n        }\n      }\n\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling payment failed:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process payment failed'\n      }\n    }\n  }\n\n  private async handleCustomerCreated(customer: Stripe.Customer): Promise<ProcessWebhookResponse> {\n    try {\n      // Store customer information if needed\n      // This could be used to sync customer data with your user records\n      console.log('Customer created:', customer.id)\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling customer created:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process customer created'\n      }\n    }\n  }\n\n  private async handleCustomerUpdated(customer: Stripe.Customer): Promise<ProcessWebhookResponse> {\n    try {\n      // Update customer information if needed\n      console.log('Customer updated:', customer.id)\n      return { success: true }\n    } catch (error) {\n      console.error('Error handling customer updated:', error)\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to process customer updated'\n      }\n    }\n  }\n}\n\n// Create a singleton instance\nexport const stripeWebhookService = new StripeWebhookService(\n  process.env.STRIPE_SECRET_KEY || '',\n  process.env.SUPABASE_URL || '',\n  process.env.SUPABASE_SERVICE_ROLE_KEY || ''\n)\n","import { createClient } from '@supabase/supabase-js'\n\nexport interface TenWebSite {\n  id: string\n  name: string\n  url: string\n  status: 'active' | 'inactive' | 'pending'\n  created_at: string\n  updated_at: string\n}\n\nexport interface TenWebDomain {\n  id: string\n  domain: string\n  site_id: string\n  status: 'active' | 'inactive' | 'pending' | 'failed' | 'suspended'\n  ssl_enabled: boolean\n  ssl_status: 'pending' | 'active' | 'failed' | 'expired'\n  created_at: string\n  updated_at: string\n  verified_at?: string\n  expires_at?: string\n  nameservers?: string[]\n  dns_records?: TenWebDNSRecord[]\n}\n\nexport interface TenWebDNSRecord {\n  type: 'A' | 'CNAME' | 'TXT' | 'MX'\n  name: string\n  value: string\n  ttl: number\n  priority?: number\n}\n\nexport interface CreateSiteRequest {\n  site_title: string\n  subdomain: string\n  admin_username: string\n  admin_password: string\n  region?: string\n  template?: string\n  description?: string\n}\n\nexport interface CreateSiteResponse {\n  success: boolean\n  site?: TenWebSite\n  error?: string\n}\n\nexport interface CreateDomainRequest {\n  site_id: string\n  domain: string\n}\n\nexport interface CreateDomainResponse {\n  success: boolean\n  domain?: TenWebDomain\n  error?: string\n}\n\nexport interface GenerateSitemapRequest {\n  website_id: number\n  business_type: string\n  business_name: string\n  business_description: string\n}\n\nexport interface GenerateSitemapResponse {\n  success: boolean\n  data?: {\n    unique_id: string\n    pages_meta: any[]\n    website_description: string\n    website_keyphrase: string\n    website_title: string\n    website_type: string\n  }\n  error?: string\n}\n\nexport interface GenerateSiteFromSitemapRequest {\n  website_id: number\n  unique_id: string\n  business_type: string\n  business_name: string\n  business_description: string\n  pages_meta: any[]\n  website_description: string\n  website_keyphrase: string\n  website_title: string\n  website_type: string\n  template_type?: string\n}\n\nexport interface GenerateSiteFromSitemapResponse {\n  success: boolean\n  data?: {\n    url: string\n  }\n  error?: string\n}\n\nexport class TenWebAPI {\n  private apiKey: string\n  private baseUrl = 'https://my.10web.io/api'\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE' = 'GET',\n    body?: any\n  ): Promise<T> {\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      method,\n      headers: {\n        'Authorization': `Bearer ${this.apiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: body ? JSON.stringify(body) : undefined,\n    })\n\n    if (!response.ok) {\n      throw new Error(`TenWeb API error: ${response.status} ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  // Create a new WordPress site\n  async createSite(request: CreateSiteRequest): Promise<CreateSiteResponse> {\n    try {\n      // Call the actual 10Web API\n      const response = await this.makeRequest<any>('/v1/hosting/website', 'POST', {\n        subdomain: request.subdomain,\n        region: request.region || 'europe-west3-b',\n        site_title: request.site_title,\n        admin_username: request.admin_username,\n        admin_password: request.admin_password\n      })\n\n      if (response.status === 'ok' && response.data) {\n        const site: TenWebSite = {\n          id: response.data.id.toString(),\n          name: request.site_title,\n          url: response.data.url || `https://${request.subdomain}.naveeg.com`,\n          status: 'active',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n        }\n\n        return {\n          success: true,\n          site: site,\n        }\n      } else {\n        return {\n          success: false,\n          error: response.message || 'Failed to create site',\n        }\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }\n    }\n  }\n\n  // Generate sitemap using AI\n  async generateSitemap(request: GenerateSitemapRequest): Promise<GenerateSitemapResponse> {\n    try {\n      const response = await this.makeRequest<any>('/v1/ai/generate_sitemap', 'POST', {\n        website_id: request.website_id,\n        params: {\n          business_type: request.business_type,\n          business_name: request.business_name,\n          business_description: request.business_description\n        }\n      })\n\n      if (response.status === 200 && response.data) {\n        return {\n          success: true,\n          data: response.data,\n        }\n      } else {\n        return {\n          success: false,\n          error: response.msg || 'Failed to generate sitemap',\n        }\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }\n    }\n  }\n\n  // Generate website from sitemap\n  async generateSiteFromSitemap(request: GenerateSiteFromSitemapRequest): Promise<GenerateSiteFromSitemapResponse> {\n    try {\n      const response = await this.makeRequest<any>('/v1/ai/generate_site_from_sitemap', 'POST', {\n        website_id: request.website_id,\n        unique_id: request.unique_id,\n        params: {\n          business_type: request.business_type,\n          business_name: request.business_name,\n          business_description: request.business_description,\n          pages_meta: request.pages_meta,\n          website_description: request.website_description,\n          website_keyphrase: request.website_keyphrase,\n          website_title: request.website_title,\n          website_type: request.website_type,\n          template_type: request.template_type || 'basic'\n        }\n      })\n\n      if (response.status === 200 && response.data) {\n        return {\n          success: true,\n          data: response.data,\n        }\n      } else {\n        return {\n          success: false,\n          error: response.msg || 'Failed to generate site from sitemap',\n        }\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }\n    }\n  }\n\n  // Enable/publish website\n  async enableWebsite(websiteId: number): Promise<{ success: boolean; error?: string }> {\n    try {\n      const response = await this.makeRequest<any>(`/v1/hosting/websites/${websiteId}/enable`, 'POST')\n\n      if (response.status === 'ok') {\n        return { success: true }\n      } else {\n        return {\n          success: false,\n          error: response.message || 'Failed to enable website',\n        }\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }\n    }\n  }\n\n  // Get all sites for a user\n  async getSites(): Promise<TenWebSite[]> {\n    try {\n      // Simulate API call - replace with actual implementation\n      return []\n    } catch (error) {\n      console.error('Error fetching sites:', error)\n      return []\n    }\n  }\n\n  // Get site details\n  async getSite(siteId: string): Promise<TenWebSite | null> {\n    try {\n      // Simulate API call - replace with actual implementation\n      return null\n    } catch (error) {\n      console.error('Error fetching site:', error)\n      return null\n    }\n  }\n\n  // Create a custom domain for a site\n  async createDomain(request: CreateDomainRequest): Promise<CreateDomainResponse> {\n    try {\n      // Simulate 10Web API call - replace with actual API integration\n      const mockDomain: TenWebDomain = {\n        id: `domain_${Date.now()}`,\n        domain: request.domain,\n        site_id: request.site_id,\n        status: 'pending',\n        ssl_enabled: false,\n        ssl_status: 'pending',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      }\n\n      // In a real implementation, you would call the actual 10Web API:\n      // const response = await this.makeRequest<TenWebDomain>('/domains', 'POST', request)\n      \n      return {\n        success: true,\n        domain: mockDomain,\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }\n    }\n  }\n\n  // Get domains for a site\n  async getDomains(siteId: string): Promise<TenWebDomain[]> {\n    try {\n      // Simulate API call - replace with actual implementation\n      return []\n    } catch (error) {\n      console.error('Error fetching domains:', error)\n      return []\n    }\n  }\n\n  // Delete a site\n  async deleteSite(siteId: string): Promise<boolean> {\n    try {\n      // Simulate API call - replace with actual implementation\n      return true\n    } catch (error) {\n      console.error('Error deleting site:', error)\n      return false\n    }\n  }\n\n  // Delete a domain\n  async deleteDomain(domainId: string): Promise<boolean> {\n    try {\n      // Simulate API call - replace with actual implementation\n      return true\n    } catch (error) {\n      console.error('Error deleting domain:', error)\n      return false\n    }\n  }\n\n  // Get domain status and details\n  async getDomainStatus(domainId: string): Promise<TenWebDomain | null> {\n    try {\n      // Simulate API call - replace with actual implementation\n      const mockDomain: TenWebDomain = {\n        id: domainId,\n        domain: 'example.com',\n        site_id: `site_${Date.now()}`,\n        status: 'active',\n        ssl_enabled: true,\n        ssl_status: 'active',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n        verified_at: new Date().toISOString(),\n        expires_at: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString(),\n        nameservers: ['ns1.10web.io', 'ns2.10web.io'],\n        dns_records: [\n          {\n            type: 'A',\n            name: '@',\n            value: '192.168.1.1',\n            ttl: 3600\n          },\n          {\n            type: 'CNAME',\n            name: 'www',\n            value: 'example.com',\n            ttl: 3600\n          }\n        ]\n      }\n      return mockDomain\n    } catch (error) {\n      console.error('Error fetching domain status:', error)\n      return null\n    }\n  }\n\n  // Update domain DNS records\n  async updateDomainDNS(domainId: string, records: TenWebDNSRecord[]): Promise<boolean> {\n    try {\n      // Simulate API call - replace with actual implementation\n      console.log('Updating DNS records for domain:', domainId, records)\n      return true\n    } catch (error) {\n      console.error('Error updating domain DNS:', error)\n      return false\n    }\n  }\n\n  // Verify domain ownership\n  async verifyDomainOwnership(domain: string): Promise<{ success: boolean; verified: boolean; error?: string }> {\n    try {\n      // Simulate API call - replace with actual implementation\n      console.log('Verifying domain ownership:', domain)\n      \n      // Mock verification - in real implementation, this would check DNS records\n      const verified = Math.random() > 0.3 // 70% success rate for demo\n      \n      return {\n        success: true,\n        verified\n      }\n    } catch (error) {\n      return {\n        success: false,\n        verified: false,\n        error: error instanceof Error ? error.message : 'Failed to verify domain ownership'\n      }\n    }\n  }\n\n  // Get SSL certificate status\n  async getSSLStatus(domainId: string): Promise<{ status: string; expires_at?: string; error?: string }> {\n    try {\n      // Simulate API call - replace with actual implementation\n      console.log('Getting SSL status for domain:', domainId)\n      \n      return {\n        status: 'active',\n        expires_at: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000).toISOString()\n      }\n    } catch (error) {\n      return {\n        status: 'failed',\n        error: error instanceof Error ? error.message : 'Failed to get SSL status'\n      }\n    }\n  }\n\n  // Request SSL certificate\n  async requestSSLCertificate(domainId: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      // Simulate API call - replace with actual implementation\n      console.log('Requesting SSL certificate for domain:', domainId)\n      \n      return {\n        success: true\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to request SSL certificate'\n      }\n    }\n  }\n\n  // Get domain analytics\n  async getDomainAnalytics(domainId: string, period: '7d' | '30d' | '90d' = '30d'): Promise<{\n    visitors: number\n    page_views: number\n    bounce_rate: number\n    avg_session_duration: number\n  } | null> {\n    try {\n      // Simulate API call - replace with actual implementation\n      console.log('Getting domain analytics for:', domainId, period)\n      \n      return {\n        visitors: Math.floor(Math.random() * 10000),\n        page_views: Math.floor(Math.random() * 50000),\n        bounce_rate: Math.random() * 0.5 + 0.2, // 20-70%\n        avg_session_duration: Math.random() * 300 + 60 // 1-6 minutes\n      }\n    } catch (error) {\n      console.error('Error fetching domain analytics:', error)\n      return null\n    }\n  }\n}\n\n// Create a singleton instance\nexport const tenWebAPI = new TenWebAPI(process.env.TENWEB_API_KEY || '')\n\n// Helper function to get TenWeb API instance\nexport function getTenWebAPI(): TenWebAPI {\n  const apiKey = process.env.TENWEB_API_KEY\n  if (!apiKey) {\n    throw new Error('TENWEB_API_KEY environment variable is required')\n  }\n  return new TenWebAPI(apiKey)\n}","export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n","export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n","import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n","import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n","import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n","export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n","import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n","import { z } from \"zod\";\n\nexport const briefSchema = z.object({\n  businessName: z.string().min(2),\n  tagline: z.string().min(2),\n  description: z.string().min(10),\n  vertical: z.string().min(2),\n});\n\nexport const designSchema = z.object({\n  colors: z.record(z.string(), z.string()).optional(),\n  fonts: z.record(z.string(), z.string()).optional(),\n});\n\nexport const generateSchema = z.object({\n  draftId: z.string().uuid(),\n});\n\nexport type BriefInput = z.infer<typeof briefSchema>;\nexport type DesignInput = z.infer<typeof designSchema>;\n\n","// Shared utility functions\nexport function formatCurrency(amount: number, currency = 'EUR'): string {\n  return new Intl.NumberFormat('en-EU', {\n    style: 'currency',\n    currency,\n  }).format(amount)\n}\n\nexport function formatDate(date: Date | string): string {\n  return new Intl.DateTimeFormat('en-EU', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }).format(new Date(date))\n}\n\nexport function generateSubdomain(name: string): string {\n  return name\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, '-')\n    .replace(/-+/g, '-')\n    .replace(/^-|-$/g, '')\n}","import { createClient } from '@supabase/supabase-js'\nimport type { User, Session, AuthError } from '@supabase/supabase-js'\n\nexport interface AuthUser extends User {\n  user_metadata: {\n    name?: string\n    avatar_url?: string\n  }\n}\n\nexport interface AuthSession extends Session {\n  user: AuthUser\n}\n\nexport interface AuthResponse {\n  user: AuthUser | null\n  session: AuthSession | null\n  error: AuthError | null\n}\n\n// Create Supabase client for authentication\nexport function createAuthClient() {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co'\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder_key'\n\n  return createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true\n    }\n  })\n}\n\n// Authentication utilities\nexport class AuthService {\n  private supabase = createAuthClient()\n\n  // Sign up with email and password\n  async signUp(email: string, password: string, name?: string) {\n    const { data, error } = await this.supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          name: name || email.split('@')[0]\n        }\n      }\n    })\n\n    return { data, error }\n  }\n\n  // Sign in with email and password\n  async signIn(email: string, password: string) {\n    const { data, error } = await this.supabase.auth.signInWithPassword({\n      email,\n      password\n    })\n\n    return { data, error }\n  }\n\n  // Sign in with Google\n  async signInWithGoogle() {\n    const redirectTo = typeof window !== 'undefined' ? `${window.location.origin}/auth/callback` : '/auth/callback'\n    const { data, error } = await this.supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        redirectTo\n      }\n    })\n\n    return { data, error }\n  }\n\n  // Sign out\n  async signOut() {\n    const { error } = await this.supabase.auth.signOut()\n    return { error }\n  }\n\n  // Get current user\n  async getCurrentUser() {\n    const { data: { user }, error } = await this.supabase.auth.getUser()\n    return { user, error }\n  }\n\n  // Get current session\n  async getCurrentSession() {\n    const { data: { session }, error } = await this.supabase.auth.getSession()\n    return { session, error }\n  }\n\n  // Reset password\n  async resetPassword(email: string) {\n    const redirectTo = typeof window !== 'undefined' ? `${window.location.origin}/auth/reset-password` : '/auth/reset-password'\n    const { data, error } = await this.supabase.auth.resetPasswordForEmail(email, {\n      redirectTo\n    })\n\n    return { data, error }\n  }\n\n  // Update password\n  async updatePassword(password: string) {\n    const { data, error } = await this.supabase.auth.updateUser({\n      password\n    })\n\n    return { data, error }\n  }\n\n  // Update user profile\n  async updateProfile(updates: { name?: string; avatar_url?: string }) {\n    const { data, error } = await this.supabase.auth.updateUser({\n      data: updates\n    })\n\n    return { data, error }\n  }\n\n  // Listen to auth state changes\n  onAuthStateChange(callback: (event: string, session: AuthSession | null) => void) {\n    return this.supabase.auth.onAuthStateChange(callback)\n  }\n\n  // Get the Supabase client\n  getClient() {\n    return this.supabase\n  }\n}\n\n// Create a singleton instance\nexport const authService = new AuthService()\n\n// Simple auth functions for backward compatibility\nexport const createBrowserClient = () => createAuthClient()\n\nexport const createServerClient = (cookies: any) => {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co'\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder_key'\n\n  return createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true\n    }\n  })\n}\n","import { useState, useEffect, useCallback } from 'react'\nimport { authService, type AuthUser, type AuthSession } from './auth'\n\nexport interface UseAuthReturn {\n  user: AuthUser | null\n  session: AuthSession | null\n  loading: boolean\n  signUp: (email: string, password: string, name?: string) => Promise<{ error: any }>\n  signIn: (email: string, password: string) => Promise<{ error: any }>\n  signInWithGoogle: () => Promise<{ error: any }>\n  signOut: () => Promise<{ error: any }>\n  resetPassword: (email: string) => Promise<{ error: any }>\n  updatePassword: (password: string) => Promise<{ error: any }>\n  updateProfile: (updates: { name?: string; avatar_url?: string }) => Promise<{ error: any }>\n}\n\nexport function useAuth(): UseAuthReturn {\n  const [user, setUser] = useState<AuthUser | null>(null)\n  const [session, setSession] = useState<AuthSession | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  // Initialize auth state\n  useEffect(() => {\n    let mounted = true\n\n    // Get initial session\n    authService.getCurrentSession().then(({ session, error }) => {\n      if (mounted) {\n        if (error) {\n          console.error('Error getting session:', error)\n        }\n        setSession(session)\n        setUser(session?.user ?? null)\n        setLoading(false)\n      }\n    })\n\n    // Listen for auth changes\n    const { data: { subscription } } = authService.onAuthStateChange(\n      async (event, session) => {\n        if (mounted) {\n          setSession(session)\n          setUser(session?.user ?? null)\n          setLoading(false)\n        }\n      }\n    )\n\n    return () => {\n      mounted = false\n      subscription.unsubscribe()\n    }\n  }, [])\n\n  const signUp = useCallback(async (email: string, password: string, name?: string) => {\n    setLoading(true)\n    const { error } = await authService.signUp(email, password, name)\n    setLoading(false)\n    return { error }\n  }, [])\n\n  const signIn = useCallback(async (email: string, password: string) => {\n    setLoading(true)\n    const { error } = await authService.signIn(email, password)\n    setLoading(false)\n    return { error }\n  }, [])\n\n  const signInWithGoogle = useCallback(async () => {\n    setLoading(true)\n    const { error } = await authService.signInWithGoogle()\n    setLoading(false)\n    return { error }\n  }, [])\n\n  const signOut = useCallback(async () => {\n    setLoading(true)\n    const { error } = await authService.signOut()\n    setLoading(false)\n    return { error }\n  }, [])\n\n  const resetPassword = useCallback(async (email: string) => {\n    setLoading(true)\n    const { error } = await authService.resetPassword(email)\n    setLoading(false)\n    return { error }\n  }, [])\n\n  const updatePassword = useCallback(async (password: string) => {\n    setLoading(true)\n    const { error } = await authService.updatePassword(password)\n    setLoading(false)\n    return { error }\n  }, [])\n\n  const updateProfile = useCallback(async (updates: { name?: string; avatar_url?: string }) => {\n    setLoading(true)\n    const { error } = await authService.updateProfile(updates)\n    setLoading(false)\n    return { error }\n  }, [])\n\n  return {\n    user,\n    session,\n    loading,\n    signUp,\n    signIn,\n    signInWithGoogle,\n    signOut,\n    resetPassword,\n    updatePassword,\n    updateProfile\n  }\n}\n\n// Hook for protecting routes\nexport function useRequireAuth(redirectTo: string = '/login') {\n  const { user, loading } = useAuth()\n  const [shouldRedirect, setShouldRedirect] = useState(false)\n\n  useEffect(() => {\n    if (!loading && !user) {\n      setShouldRedirect(true)\n    }\n  }, [user, loading])\n\n  return {\n    user,\n    loading,\n    shouldRedirect,\n    redirectTo\n  }\n}\n\n// Hook for checking if user is authenticated\nexport function useIsAuthenticated() {\n  const { user, loading } = useAuth()\n  return {\n    isAuthenticated: !!user,\n    loading\n  }\n}\n\n// Simple hook that matches the expected interface\nexport function useUser() {\n  const { user, loading } = useAuth()\n  return { user, loading }\n}\n","import { useState, useEffect } from 'react'\nimport { createBrowserClient } from './auth'\n\nexport interface OnboardingStatus {\n  isCompleted: boolean\n  hasWebsites: boolean\n  loading: boolean\n  error: string | null\n}\n\nexport function useOnboardingStatus(): OnboardingStatus {\n  const [status, setStatus] = useState<OnboardingStatus>({\n    isCompleted: false,\n    hasWebsites: false,\n    loading: true,\n    error: null\n  })\n  const supabase = createBrowserClient()\n\n  useEffect(() => {\n    const checkOnboardingStatus = async () => {\n      try {\n        setStatus(prev => ({ ...prev, loading: true, error: null }))\n\n        // Check if user has any websites\n        const { data: websites, error: websitesError } = await supabase\n          .from('websites')\n          .select('id')\n          .limit(1)\n\n        if (websitesError) {\n          throw new Error(websitesError.message)\n        }\n\n        const hasWebsites = websites && websites.length > 0\n        const isCompleted = hasWebsites\n\n        setStatus({\n          isCompleted,\n          hasWebsites,\n          loading: false,\n          error: null\n        })\n      } catch (error) {\n        setStatus({\n          isCompleted: false,\n          hasWebsites: false,\n          loading: false,\n          error: error instanceof Error ? error.message : 'Unknown error'\n        })\n      }\n    }\n\n    checkOnboardingStatus()\n  }, [supabase])\n\n  return status\n}\n","import { useState, useEffect } from 'react'\nimport { createBrowserClient } from '../auth/auth'\nimport { UserPlan, Website, Domain, UsageStats, PlanUsage } from '../types/plans'\n\nexport interface UserData {\n  plan: UserPlan | null\n  websites: Website[]\n  domains: Domain[]\n  usage: UsageStats\n  planUsage: PlanUsage\n  loading: boolean\n  error: string | null\n}\n\nexport function useUserData(): UserData {\n  const [data, setData] = useState<UserData>({\n    plan: null,\n    websites: [],\n    domains: [],\n    usage: {\n      websites_count: 0,\n      domains_count: 0,\n      storage_used: 0,\n      bandwidth_used: 0,\n      team_members_count: 0\n    },\n    planUsage: {\n      websites: { used: 0, limit: 0 },\n      domains: { used: 0, limit: 0 },\n      storage: { used: 0, limit: 0 },\n      bandwidth: { used: 0, limit: 0 },\n      team_members: { used: 0, limit: 0 }\n    },\n    loading: true,\n    error: null\n  })\n\n  const supabase = createBrowserClient()\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        setData(prev => ({ ...prev, loading: true, error: null }))\n\n        // Fetch user's current plan\n        const { data: planData, error: planError } = await supabase\n          .from('user_plans')\n          .select(`\n            *,\n            plan:plans(*)\n          `)\n          .eq('status', 'active')\n          .single()\n\n        if (planError && planError.code !== 'PGRST116') {\n          throw new Error(planError.message)\n        }\n\n        // Fetch user's websites\n        const { data: websitesData, error: websitesError } = await supabase\n          .from('websites')\n          .select('*')\n          .order('created_at', { ascending: false })\n\n        if (websitesError) {\n          throw new Error(websitesError.message)\n        }\n\n        // Fetch user's domains\n        const { data: domainsData, error: domainsError } = await supabase\n          .from('domains')\n          .select(`\n            *,\n            website:websites(*)\n          `)\n          .order('created_at', { ascending: false })\n\n        if (domainsError) {\n          throw new Error(domainsError.message)\n        }\n\n        // Calculate usage stats\n        const usage: UsageStats = {\n          websites_count: websitesData?.length || 0,\n          domains_count: domainsData?.length || 0,\n          storage_used: 0, // This would be calculated from actual storage usage\n          bandwidth_used: 0, // This would be calculated from actual bandwidth usage\n          team_members_count: 0 // This would be fetched from team_members table\n        }\n\n        // Calculate plan usage\n        const plan = planData?.plan || { limits: { websites: 1, domains: 1, storage: 1, bandwidth: 10, team_members: 1 } }\n        const planUsage: PlanUsage = {\n          websites: { used: usage.websites_count, limit: plan.limits.websites },\n          domains: { used: usage.domains_count, limit: plan.limits.domains },\n          storage: { used: usage.storage_used, limit: plan.limits.storage },\n          bandwidth: { used: usage.bandwidth_used, limit: plan.limits.bandwidth },\n          team_members: { used: usage.team_members_count, limit: plan.limits.team_members }\n        }\n\n        setData({\n          plan: planData,\n          websites: websitesData || [],\n          domains: domainsData || [],\n          usage,\n          planUsage,\n          loading: false,\n          error: null\n        })\n      } catch (error) {\n        setData(prev => ({\n          ...prev,\n          loading: false,\n          error: error instanceof Error ? error.message : 'Failed to fetch user data'\n        }))\n      }\n    }\n\n    fetchUserData()\n  }, [supabase])\n\n  return data\n}\n","import { UserPlan, PlanLimits, PlanUsage } from '../types/plans'\n\nexport interface FeatureEntitlement {\n  feature: string\n  allowed: boolean\n  reason?: string\n  upgradeRequired?: boolean\n  currentUsage?: number\n  limit?: number\n}\n\nexport interface EntitlementCheck {\n  feature: string\n  planId: string\n  usage: PlanUsage\n  limits: PlanLimits\n}\n\nexport class EntitlementService {\n  private planLimits: Map<string, PlanLimits> = new Map()\n  private featureDefinitions: Map<string, string[]> = new Map()\n\n  constructor() {\n    this.initializeFeatureDefinitions()\n  }\n\n  private initializeFeatureDefinitions() {\n    // Define which features are available for each plan\n    this.featureDefinitions.set('trial', [\n      'basic_websites',\n      'basic_domains',\n      'basic_analytics',\n      'basic_support'\n    ])\n\n    this.featureDefinitions.set('starter', [\n      'basic_websites',\n      'basic_domains',\n      'basic_analytics',\n      'basic_support',\n      'custom_domains',\n      'ssl_certificates',\n      'priority_support',\n      'basic_team_collaboration'\n    ])\n\n    this.featureDefinitions.set('pro', [\n      'basic_websites',\n      'basic_domains',\n      'basic_analytics',\n      'basic_support',\n      'custom_domains',\n      'ssl_certificates',\n      'priority_support',\n      'basic_team_collaboration',\n      'advanced_analytics',\n      'api_access',\n      'advanced_team_collaboration',\n      'custom_integrations'\n    ])\n\n    this.featureDefinitions.set('enterprise', [\n      'basic_websites',\n      'basic_domains',\n      'basic_analytics',\n      'basic_support',\n      'custom_domains',\n      'ssl_certificates',\n      'priority_support',\n      'basic_team_collaboration',\n      'advanced_analytics',\n      'api_access',\n      'advanced_team_collaboration',\n      'custom_integrations',\n      'unlimited_websites',\n      'unlimited_domains',\n      'dedicated_support',\n      'custom_contracts',\n      'sla_guarantee'\n    ])\n  }\n\n  checkFeatureEntitlement(check: EntitlementCheck): FeatureEntitlement {\n    const { feature, planId, usage, limits } = check\n\n    // Check if feature is available in the plan\n    const planFeatures = this.featureDefinitions.get(planId) || []\n    if (!planFeatures.includes(feature)) {\n      return {\n        feature,\n        allowed: false,\n        reason: 'Feature not available in your current plan',\n        upgradeRequired: true\n      }\n    }\n\n    // Check usage-based limits\n    const usageCheck = this.checkUsageLimits(feature, usage, limits)\n    if (!usageCheck.allowed) {\n      return {\n        feature,\n        allowed: false,\n        reason: usageCheck.reason,\n        upgradeRequired: usageCheck.upgradeRequired,\n        currentUsage: usageCheck.currentUsage,\n        limit: usageCheck.limit\n      }\n    }\n\n    return {\n      feature,\n      allowed: true\n    }\n  }\n\n  private checkUsageLimits(feature: string, usage: PlanUsage, limits: PlanLimits): {\n    allowed: boolean\n    reason?: string\n    upgradeRequired?: boolean\n    currentUsage?: number\n    limit?: number\n  } {\n    switch (feature) {\n      case 'basic_websites':\n      case 'unlimited_websites':\n        return this.checkLimit('websites', usage.websites, limits.websites)\n      \n      case 'basic_domains':\n      case 'custom_domains':\n      case 'unlimited_domains':\n        return this.checkLimit('domains', usage.domains, limits.domains)\n      \n      case 'basic_team_collaboration':\n      case 'advanced_team_collaboration':\n        return this.checkLimit('team_members', usage.team_members, limits.team_members)\n      \n      case 'storage':\n        return this.checkLimit('storage', usage.storage, limits.storage)\n      \n      case 'bandwidth':\n        return this.checkLimit('bandwidth', usage.bandwidth, limits.bandwidth)\n      \n      default:\n        return { allowed: true }\n    }\n  }\n\n  private checkLimit(\n    resource: string,\n    currentUsage: { used: number; limit: number },\n    limit: number\n  ): {\n    allowed: boolean\n    reason?: string\n    upgradeRequired?: boolean\n    currentUsage?: number\n    limit?: number\n  } {\n    if (limit === -1) {\n      return { allowed: true } // Unlimited\n    }\n\n    if (currentUsage.used >= limit) {\n      return {\n        allowed: false,\n        reason: `You have reached your ${resource} limit`,\n        upgradeRequired: true,\n        currentUsage: currentUsage.used,\n        limit: limit\n      }\n    }\n\n    if (currentUsage.used >= limit * 0.8) {\n      return {\n        allowed: true,\n        reason: `You are approaching your ${resource} limit`,\n        currentUsage: currentUsage.used,\n        limit: limit\n      }\n    }\n\n    return { allowed: true }\n  }\n\n  getAvailableFeatures(planId: string): string[] {\n    return this.featureDefinitions.get(planId) || []\n  }\n\n  getFeatureTier(feature: string): 'trial' | 'starter' | 'pro' | 'enterprise' {\n    for (const [planId, features] of this.featureDefinitions.entries()) {\n      if (features.includes(feature)) {\n        return planId as 'trial' | 'starter' | 'pro' | 'enterprise'\n      }\n    }\n    return 'enterprise' // Default to highest tier if not found\n  }\n\n  canUpgrade(currentPlanId: string, targetPlanId: string): boolean {\n    const planHierarchy = ['trial', 'starter', 'pro', 'enterprise']\n    const currentIndex = planHierarchy.indexOf(currentPlanId)\n    const targetIndex = planHierarchy.indexOf(targetPlanId)\n    \n    return targetIndex > currentIndex\n  }\n\n  getUpgradePath(currentPlanId: string): string[] {\n    const planHierarchy = ['trial', 'starter', 'pro', 'enterprise']\n    const currentIndex = planHierarchy.indexOf(currentPlanId)\n    \n    return planHierarchy.slice(currentIndex + 1)\n  }\n}\n\n// Create a singleton instance\nexport const entitlementService = new EntitlementService()\n","import { useState, useEffect } from 'react'\nimport { useUserData } from '../hooks/use-user-data'\nimport { entitlementService, FeatureEntitlement, EntitlementCheck } from './entitlements'\n\nexport interface UseEntitlementReturn {\n  checkFeature: (feature: string) => FeatureEntitlement\n  hasFeature: (feature: string) => boolean\n  canUseFeature: (feature: string) => boolean\n  getFeatureReason: (feature: string) => string | undefined\n  requiresUpgrade: (feature: string) => boolean\n  loading: boolean\n  error: string | null\n}\n\nexport function useEntitlements(): UseEntitlementReturn {\n  const { plan, planUsage, loading, error } = useUserData()\n  const [entitlements, setEntitlements] = useState<Map<string, FeatureEntitlement>>(new Map())\n\n  useEffect(() => {\n    if (!plan || !planUsage) return\n\n    const currentEntitlements = new Map<string, FeatureEntitlement>()\n    \n    // Check all available features for the current plan\n    const availableFeatures = entitlementService.getAvailableFeatures(plan.plan.id)\n    \n    availableFeatures.forEach(feature => {\n      const check: EntitlementCheck = {\n        feature,\n        planId: plan.plan.id,\n        usage: planUsage,\n        limits: plan.plan.limits\n      }\n      \n      const entitlement = entitlementService.checkFeatureEntitlement(check)\n      currentEntitlements.set(feature, entitlement)\n    })\n\n    setEntitlements(currentEntitlements)\n  }, [plan, planUsage])\n\n  const checkFeature = (feature: string): FeatureEntitlement => {\n    if (entitlements.has(feature)) {\n      return entitlements.get(feature)!\n    }\n\n    // If not cached, check on demand\n    if (!plan || !planUsage) {\n      return {\n        feature,\n        allowed: false,\n        reason: 'No plan information available'\n      }\n    }\n\n    const check: EntitlementCheck = {\n      feature,\n      planId: plan.plan.id,\n      usage: planUsage,\n      limits: plan.plan.limits\n    }\n\n    return entitlementService.checkFeatureEntitlement(check)\n  }\n\n  const hasFeature = (feature: string): boolean => {\n    return checkFeature(feature).allowed\n  }\n\n  const canUseFeature = (feature: string): boolean => {\n    const entitlement = checkFeature(feature)\n    return entitlement.allowed && !entitlement.upgradeRequired\n  }\n\n  const getFeatureReason = (feature: string): string | undefined => {\n    return checkFeature(feature).reason\n  }\n\n  const requiresUpgrade = (feature: string): boolean => {\n    return checkFeature(feature).upgradeRequired || false\n  }\n\n  return {\n    checkFeature,\n    hasFeature,\n    canUseFeature,\n    getFeatureReason,\n    requiresUpgrade,\n    loading,\n    error\n  }\n}\n\nexport interface UseFeatureGateProps {\n  feature: string\n  fallback?: React.ReactNode\n  children: React.ReactNode\n  showUpgrade?: boolean\n}\n\nexport function useFeatureGate(feature: string) {\n  const entitlements = useEntitlements()\n  const entitlement = entitlements.checkFeature(feature)\n\n  return {\n    ...entitlement,\n    ...entitlements,\n    isAllowed: entitlement.allowed,\n    needsUpgrade: entitlement.upgradeRequired || false\n  }\n}\n","export interface OpenAIEmbedding {\n  embedding: number[]\n  index: number\n}\n\nexport interface OpenAIEmbeddingResponse {\n  data: OpenAIEmbedding[]\n  model: string\n  usage: {\n    prompt_tokens: number\n    total_tokens: number\n  }\n}\n\nexport interface ChatMessage {\n  role: 'system' | 'user' | 'assistant'\n  content: string\n}\n\nexport interface ChatCompletionResponse {\n  id: string\n  object: string\n  created: number\n  model: string\n  choices: Array<{\n    index: number\n    message: ChatMessage\n    finish_reason: string\n  }>\n  usage: {\n    prompt_tokens: number\n    completion_tokens: number\n    total_tokens: number\n  }\n}\n\nexport interface FAQDocument {\n  id: string\n  title: string\n  content: string\n  category: string\n  embedding?: number[]\n  created_at: string\n  updated_at: string\n}\n\nexport interface ChatbotResponse {\n  answer: string\n  sources: FAQDocument[]\n  confidence: number\n  tokens_used: number\n}\n\nexport class OpenAIService {\n  private apiKey: string\n  private baseUrl: string = 'https://api.openai.com/v1'\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    method: 'GET' | 'POST' = 'POST',\n    body?: any\n  ): Promise<T> {\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      method,\n      headers: {\n        'Authorization': `Bearer ${this.apiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: body ? JSON.stringify(body) : undefined,\n    })\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.status} ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  // Generate embeddings for text\n  async generateEmbedding(text: string): Promise<number[]> {\n    try {\n      const response = await this.makeRequest<OpenAIEmbeddingResponse>('/embeddings', 'POST', {\n        input: text,\n        model: 'text-embedding-ada-002'\n      })\n\n      return response.data[0].embedding\n    } catch (error) {\n      console.error('Error generating embedding:', error)\n      throw error\n    }\n  }\n\n  // Generate embeddings for multiple texts\n  async generateEmbeddings(texts: string[]): Promise<number[][]> {\n    try {\n      const response = await this.makeRequest<OpenAIEmbeddingResponse>('/embeddings', 'POST', {\n        input: texts,\n        model: 'text-embedding-ada-002'\n      })\n\n      return response.data.map(item => item.embedding)\n    } catch (error) {\n      console.error('Error generating embeddings:', error)\n      throw error\n    }\n  }\n\n  // Generate chat completion\n  async generateChatCompletion(\n    messages: ChatMessage[],\n    model: string = 'gpt-3.5-turbo',\n    maxTokens: number = 1000,\n    temperature: number = 0.7\n  ): Promise<ChatCompletionResponse> {\n    try {\n      const response = await this.makeRequest<ChatCompletionResponse>('/chat/completions', 'POST', {\n        model,\n        messages,\n        max_tokens: maxTokens,\n        temperature,\n        stream: false\n      })\n\n      return response\n    } catch (error) {\n      console.error('Error generating chat completion:', error)\n      throw error\n    }\n  }\n\n  // Process FAQ document and generate embedding\n  async processFAQDocument(document: {\n    title: string\n    content: string\n    category: string\n  }): Promise<{\n    embedding: number[]\n    processed_content: string\n  }> {\n    try {\n      // Combine title and content for embedding\n      const combinedText = `${document.title}\\n\\n${document.content}`\n      \n      // Generate embedding\n      const embedding = await this.generateEmbedding(combinedText)\n      \n      // Clean and process content\n      const processedContent = this.cleanText(document.content)\n      \n      return {\n        embedding,\n        processed_content: processedContent\n      }\n    } catch (error) {\n      console.error('Error processing FAQ document:', error)\n      throw error\n    }\n  }\n\n  // Clean and normalize text for better embedding\n  private cleanText(text: string): string {\n    return text\n      .replace(/\\s+/g, ' ') // Replace multiple spaces with single space\n      .replace(/\\n+/g, ' ') // Replace newlines with spaces\n      .trim()\n      .toLowerCase()\n  }\n\n  // Generate chatbot response with context\n  async generateChatbotResponse(\n    question: string,\n    context: FAQDocument[],\n    conversationHistory: ChatMessage[] = []\n  ): Promise<ChatbotResponse> {\n    try {\n      // Create context from FAQ documents\n      const contextText = context\n        .map(doc => `Title: ${doc.title}\\nContent: ${doc.content}`)\n        .join('\\n\\n')\n\n      // Create system message with context\n      const systemMessage: ChatMessage = {\n        role: 'system',\n        content: `You are a helpful AI assistant for Naveeg, a website management platform. \n        \nUse the following FAQ context to answer user questions. If the question is not covered in the context, \nprovide a helpful response based on your general knowledge about website management and hosting.\n\nFAQ Context:\n${contextText}\n\nInstructions:\n- Answer questions based on the provided FAQ context when possible\n- Be helpful, accurate, and concise\n- If you're unsure about something, say so\n- Provide step-by-step instructions when appropriate\n- Be friendly and professional in tone`\n      }\n\n      // Create user message\n      const userMessage: ChatMessage = {\n        role: 'user',\n        content: question\n      }\n\n      // Combine all messages\n      const messages = [systemMessage, ...conversationHistory, userMessage]\n\n      // Generate response\n      const response = await this.generateChatCompletion(messages, 'gpt-3.5-turbo', 1000, 0.7)\n\n      // Calculate confidence based on context relevance\n      const confidence = this.calculateConfidence(question, context)\n\n      return {\n        answer: response.choices[0].message.content,\n        sources: context,\n        confidence,\n        tokens_used: response.usage.total_tokens\n      }\n    } catch (error) {\n      console.error('Error generating chatbot response:', error)\n      throw error\n    }\n  }\n\n  // Calculate confidence score based on context relevance\n  private calculateConfidence(question: string, context: FAQDocument[]): number {\n    if (context.length === 0) return 0.3\n\n    // Simple keyword matching for confidence calculation\n    const questionWords = question.toLowerCase().split(/\\s+/)\n    const contextText = context\n      .map(doc => `${doc.title} ${doc.content}`)\n      .join(' ')\n      .toLowerCase()\n\n    let matches = 0\n    questionWords.forEach(word => {\n      if (contextText.includes(word)) {\n        matches++\n      }\n    })\n\n    const confidence = Math.min(0.9, 0.3 + (matches / questionWords.length) * 0.6)\n    return Math.round(confidence * 100) / 100\n  }\n\n  // Generate search query from user question\n  generateSearchQuery(question: string): string {\n    // Extract key terms and create a search-friendly query\n    const words = question\n      .toLowerCase()\n      .replace(/[^\\w\\s]/g, '') // Remove punctuation\n      .split(/\\s+/)\n      .filter(word => word.length > 2) // Filter out short words\n      .slice(0, 10) // Limit to 10 words\n\n    return words.join(' ')\n  }\n}\n\n// Create a singleton instance\nexport const openAIService = new OpenAIService(process.env.OPENAI_API_KEY || 'placeholder_key')\n\n// Helper function to get OpenAI service instance\nexport function getOpenAIService(): OpenAIService {\n  const apiKey = process.env.OPENAI_API_KEY || 'placeholder_key'\n  return new OpenAIService(apiKey)\n}\n","export interface GoogleAnalyticsAccount {\n  id: string\n  name: string\n  displayName: string\n  websiteUrl: string\n  type: string\n  permissions: {\n    effective: string[]\n  }\n  createTime: string\n  updateTime: string\n}\n\nexport interface GoogleAnalyticsProperty {\n  id: string\n  name: string\n  displayName: string\n  parent: string\n  timeZone: string\n  currencyCode: string\n  createTime: string\n  updateTime: string\n}\n\nexport interface GoogleAnalyticsDataStream {\n  name: string\n  type: 'WEB_DATA_STREAM' | 'ANDROID_APP_DATA_STREAM' | 'IOS_APP_DATA_STREAM'\n  displayName: string\n  webStreamData?: {\n    measurementId: string\n    defaultUri: string\n    firebaseAppId?: string\n  }\n  androidAppStreamData?: {\n    firebaseAppId: string\n    packageName: string\n  }\n  iosAppStreamData?: {\n    firebaseAppId: string\n    bundleId: string\n  }\n  createTime: string\n  updateTime: string\n}\n\nexport interface GoogleAnalyticsReport {\n  metricHeaders: Array<{\n    name: string\n    type: string\n  }>\n  dimensionHeaders: Array<{\n    name: string\n  }>\n  rows: Array<{\n    dimensionValues: Array<{\n      value: string\n    }>\n    metricValues: Array<{\n      value: string\n    }>\n  }>\n  rowCount: number\n  metadata: {\n    currencyCode: string\n    timeZone: string\n  }\n}\n\nexport interface GoogleAnalyticsMetrics {\n  users: number\n  sessions: number\n  pageViews: number\n  bounceRate: number\n  avgSessionDuration: number\n  newUsers: number\n  returningUsers: number\n  organicSearch: number\n  directTraffic: number\n  socialTraffic: number\n  referralTraffic: number\n  paidSearch: number\n  emailTraffic: number\n  topPages: Array<{\n    page: string\n    pageViews: number\n    uniquePageViews: number\n    avgTimeOnPage: number\n    bounceRate: number\n  }>\n  topSources: Array<{\n    source: string\n    medium: string\n    sessions: number\n    users: number\n    bounceRate: number\n  }>\n  topCountries: Array<{\n    country: string\n    sessions: number\n    users: number\n  }>\n  topDevices: Array<{\n    device: string\n    sessions: number\n    users: number\n  }>\n  topBrowsers: Array<{\n    browser: string\n    sessions: number\n    users: number\n  }>\n}\n\nexport class GoogleAnalyticsService {\n  private accessToken: string\n  private baseUrl: string = 'https://analyticsdata.googleapis.com/v1beta'\n  private managementUrl: string = 'https://analyticsadmin.googleapis.com/v1beta'\n\n  constructor(accessToken: string) {\n    this.accessToken = accessToken\n  }\n\n  private async makeRequest<T>(\n    url: string,\n    method: 'GET' | 'POST' = 'GET',\n    body?: any\n  ): Promise<T> {\n    const response = await fetch(url, {\n      method,\n      headers: {\n        'Authorization': `Bearer ${this.accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: body ? JSON.stringify(body) : undefined,\n    })\n\n    if (!response.ok) {\n      throw new Error(`Google Analytics API error: ${response.status} ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  // Get all accounts accessible to the user\n  async getAccounts(): Promise<GoogleAnalyticsAccount[]> {\n    try {\n      const response = await this.makeRequest<{ accounts: GoogleAnalyticsAccount[] }>(\n        `${this.managementUrl}/accounts`\n      )\n      return response.accounts || []\n    } catch (error) {\n      console.error('Error fetching accounts:', error)\n      throw error\n    }\n  }\n\n  // Get properties for an account\n  async getProperties(accountId: string): Promise<GoogleAnalyticsProperty[]> {\n    try {\n      const response = await this.makeRequest<{ properties: GoogleAnalyticsProperty[] }>(\n        `${this.managementUrl}/accounts/${accountId}/properties`\n      )\n      return response.properties || []\n    } catch (error) {\n      console.error('Error fetching properties:', error)\n      throw error\n    }\n  }\n\n  // Get data streams for a property\n  async getDataStreams(propertyId: string): Promise<GoogleAnalyticsDataStream[]> {\n    try {\n      const response = await this.makeRequest<{ dataStreams: GoogleAnalyticsDataStream[] }>(\n        `${this.managementUrl}/properties/${propertyId}/dataStreams`\n      )\n      return response.dataStreams || []\n    } catch (error) {\n      console.error('Error fetching data streams:', error)\n      throw error\n    }\n  }\n\n  // Get analytics data for a property\n  async getAnalyticsData(\n    propertyId: string,\n    startDate: string,\n    endDate: string,\n    metrics: string[] = ['activeUsers', 'sessions', 'screenPageViews'],\n    dimensions: string[] = ['date']\n  ): Promise<GoogleAnalyticsReport> {\n    try {\n      const requestBody = {\n        requests: [{\n          property: `properties/${propertyId}`,\n          dateRanges: [{\n            startDate,\n            endDate\n          }],\n          metrics: metrics.map(metric => ({ name: metric })),\n          dimensions: dimensions.map(dimension => ({ name: dimension })),\n          keepEmptyRows: false\n        }]\n      }\n\n      const response = await this.makeRequest<{ reports: GoogleAnalyticsReport[] }>(\n        `${this.baseUrl}/properties/${propertyId}:runReport`,\n        'POST',\n        requestBody\n      )\n\n      return response.reports[0]\n    } catch (error) {\n      console.error('Error fetching analytics data:', error)\n      throw error\n    }\n  }\n\n  // Get comprehensive metrics for a property\n  async getMetrics(\n    propertyId: string,\n    startDate: string,\n    endDate: string\n  ): Promise<GoogleAnalyticsMetrics> {\n    try {\n      // Get basic metrics\n      const basicMetrics = await this.getAnalyticsData(\n        propertyId,\n        startDate,\n        endDate,\n        ['activeUsers', 'sessions', 'screenPageViews', 'bounceRate', 'averageSessionDuration', 'newUsers']\n      )\n\n      // Get traffic source data\n      const trafficSourceData = await this.getAnalyticsData(\n        propertyId,\n        startDate,\n        endDate,\n        ['sessions', 'activeUsers', 'bounceRate'],\n        ['sessionDefaultChannelGrouping']\n      )\n\n      // Get top pages data\n      const topPagesData = await this.getAnalyticsData(\n        propertyId,\n        startDate,\n        endDate,\n        ['screenPageViews', 'uniquePageviews', 'averageSessionDuration', 'bounceRate'],\n        ['pagePath']\n      )\n\n      // Get geographic data\n      const geoData = await this.getAnalyticsData(\n        propertyId,\n        startDate,\n        endDate,\n        ['sessions', 'activeUsers'],\n        ['country']\n      )\n\n      // Get device data\n      const deviceData = await this.getAnalyticsData(\n        propertyId,\n        startDate,\n        endDate,\n        ['sessions', 'activeUsers'],\n        ['deviceCategory']\n      )\n\n      // Get browser data\n      const browserData = await this.getAnalyticsData(\n        propertyId,\n        startDate,\n        endDate,\n        ['sessions', 'activeUsers'],\n        ['browser']\n      )\n\n      // Process the data into our metrics format\n      const metrics: GoogleAnalyticsMetrics = {\n        users: this.extractMetricValue(basicMetrics, 'activeUsers') || 0,\n        sessions: this.extractMetricValue(basicMetrics, 'sessions') || 0,\n        pageViews: this.extractMetricValue(basicMetrics, 'screenPageViews') || 0,\n        bounceRate: this.extractMetricValue(basicMetrics, 'bounceRate') || 0,\n        avgSessionDuration: this.extractMetricValue(basicMetrics, 'averageSessionDuration') || 0,\n        newUsers: this.extractMetricValue(basicMetrics, 'newUsers') || 0,\n        returningUsers: 0, // Calculate as users - newUsers\n        organicSearch: this.extractTrafficSourceValue(trafficSourceData, 'Organic Search') || 0,\n        directTraffic: this.extractTrafficSourceValue(trafficSourceData, 'Direct') || 0,\n        socialTraffic: this.extractTrafficSourceValue(trafficSourceData, 'Social') || 0,\n        referralTraffic: this.extractTrafficSourceValue(trafficSourceData, 'Referral') || 0,\n        paidSearch: this.extractTrafficSourceValue(trafficSourceData, 'Paid Search') || 0,\n        emailTraffic: this.extractTrafficSourceValue(trafficSourceData, 'Email') || 0,\n        topPages: this.processTopPagesData(topPagesData),\n        topSources: this.processTrafficSourceData(trafficSourceData),\n        topCountries: this.processGeoData(geoData),\n        topDevices: this.processDeviceData(deviceData),\n        topBrowsers: this.processBrowserData(browserData)\n      }\n\n      // Calculate returning users\n      metrics.returningUsers = Math.max(0, metrics.users - metrics.newUsers)\n\n      return metrics\n    } catch (error) {\n      console.error('Error fetching comprehensive metrics:', error)\n      throw error\n    }\n  }\n\n  // Helper method to extract metric values\n  private extractMetricValue(report: GoogleAnalyticsReport, metricName: string): number {\n    const metricIndex = report.metricHeaders.findIndex(header => header.name === metricName)\n    if (metricIndex === -1) return 0\n\n    const totalValue = report.rows.reduce((sum, row) => {\n      const value = parseFloat(row.metricValues[metricIndex]?.value || '0')\n      return sum + value\n    }, 0)\n\n    return totalValue\n  }\n\n  // Helper method to extract traffic source values\n  private extractTrafficSourceValue(report: GoogleAnalyticsReport, sourceName: string): number {\n    const sourceIndex = report.dimensionHeaders.findIndex(header => header.name === 'sessionDefaultChannelGrouping')\n    if (sourceIndex === -1) return 0\n\n    const sessionsIndex = report.metricHeaders.findIndex(header => header.name === 'sessions')\n    if (sessionsIndex === -1) return 0\n\n    const row = report.rows.find(row => \n      row.dimensionValues[sourceIndex]?.value === sourceName\n    )\n\n    return row ? parseFloat(row.metricValues[sessionsIndex]?.value || '0') : 0\n  }\n\n  // Process top pages data\n  private processTopPagesData(report: GoogleAnalyticsReport): Array<{\n    page: string\n    pageViews: number\n    uniquePageViews: number\n    avgTimeOnPage: number\n    bounceRate: number\n  }> {\n    const pageIndex = report.dimensionHeaders.findIndex(header => header.name === 'pagePath')\n    const pageViewsIndex = report.metricHeaders.findIndex(header => header.name === 'screenPageViews')\n    const uniquePageViewsIndex = report.metricHeaders.findIndex(header => header.name === 'uniquePageviews')\n    const avgTimeIndex = report.metricHeaders.findIndex(header => header.name === 'averageSessionDuration')\n    const bounceRateIndex = report.metricHeaders.findIndex(header => header.name === 'bounceRate')\n\n    return report.rows\n      .map(row => ({\n        page: row.dimensionValues[pageIndex]?.value || '',\n        pageViews: parseFloat(row.metricValues[pageViewsIndex]?.value || '0'),\n        uniquePageViews: parseFloat(row.metricValues[uniquePageViewsIndex]?.value || '0'),\n        avgTimeOnPage: parseFloat(row.metricValues[avgTimeIndex]?.value || '0'),\n        bounceRate: parseFloat(row.metricValues[bounceRateIndex]?.value || '0')\n      }))\n      .sort((a, b) => b.pageViews - a.pageViews)\n      .slice(0, 10)\n  }\n\n  // Process traffic source data\n  private processTrafficSourceData(report: GoogleAnalyticsReport): Array<{\n    source: string\n    medium: string\n    sessions: number\n    users: number\n    bounceRate: number\n  }> {\n    const sourceIndex = report.dimensionHeaders.findIndex(header => header.name === 'sessionDefaultChannelGrouping')\n    const sessionsIndex = report.metricHeaders.findIndex(header => header.name === 'sessions')\n    const usersIndex = report.metricHeaders.findIndex(header => header.name === 'activeUsers')\n    const bounceRateIndex = report.metricHeaders.findIndex(header => header.name === 'bounceRate')\n\n    return report.rows\n      .map(row => ({\n        source: row.dimensionValues[sourceIndex]?.value || '',\n        medium: 'Unknown', // This would need additional dimension\n        sessions: parseFloat(row.metricValues[sessionsIndex]?.value || '0'),\n        users: parseFloat(row.metricValues[usersIndex]?.value || '0'),\n        bounceRate: parseFloat(row.metricValues[bounceRateIndex]?.value || '0')\n      }))\n      .sort((a, b) => b.sessions - a.sessions)\n      .slice(0, 10)\n  }\n\n  // Process geographic data\n  private processGeoData(report: GoogleAnalyticsReport): Array<{\n    country: string\n    sessions: number\n    users: number\n  }> {\n    const countryIndex = report.dimensionHeaders.findIndex(header => header.name === 'country')\n    const sessionsIndex = report.metricHeaders.findIndex(header => header.name === 'sessions')\n    const usersIndex = report.metricHeaders.findIndex(header => header.name === 'activeUsers')\n\n    return report.rows\n      .map(row => ({\n        country: row.dimensionValues[countryIndex]?.value || '',\n        sessions: parseFloat(row.metricValues[sessionsIndex]?.value || '0'),\n        users: parseFloat(row.metricValues[usersIndex]?.value || '0')\n      }))\n      .sort((a, b) => b.sessions - a.sessions)\n      .slice(0, 10)\n  }\n\n  // Process device data\n  private processDeviceData(report: GoogleAnalyticsReport): Array<{\n    device: string\n    sessions: number\n    users: number\n  }> {\n    const deviceIndex = report.dimensionHeaders.findIndex(header => header.name === 'deviceCategory')\n    const sessionsIndex = report.metricHeaders.findIndex(header => header.name === 'sessions')\n    const usersIndex = report.metricHeaders.findIndex(header => header.name === 'activeUsers')\n\n    return report.rows\n      .map(row => ({\n        device: row.dimensionValues[deviceIndex]?.value || '',\n        sessions: parseFloat(row.metricValues[sessionsIndex]?.value || '0'),\n        users: parseFloat(row.metricValues[usersIndex]?.value || '0')\n      }))\n      .sort((a, b) => b.sessions - a.sessions)\n      .slice(0, 5)\n  }\n\n  // Process browser data\n  private processBrowserData(report: GoogleAnalyticsReport): Array<{\n    browser: string\n    sessions: number\n    users: number\n  }> {\n    const browserIndex = report.dimensionHeaders.findIndex(header => header.name === 'browser')\n    const sessionsIndex = report.metricHeaders.findIndex(header => header.name === 'sessions')\n    const usersIndex = report.metricHeaders.findIndex(header => header.name === 'activeUsers')\n\n    return report.rows\n      .map(row => ({\n        browser: row.dimensionValues[browserIndex]?.value || '',\n        sessions: parseFloat(row.metricValues[sessionsIndex]?.value || '0'),\n        users: parseFloat(row.metricValues[usersIndex]?.value || '0')\n      }))\n      .sort((a, b) => b.sessions - a.sessions)\n      .slice(0, 5)\n  }\n}\n","export interface GoogleSearchConsoleSite {\n  siteUrl: string\n  permissionLevel: 'SITE_FULL' | 'SITE_READ_ONLY' | 'SITE_RESTRICTED' | 'SITE_UNVERIFIED'\n}\n\nexport interface GoogleSearchConsoleSearchAnalyticsData {\n  rows: Array<{\n    keys: string[]\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }>\n  responseAggregationType: string\n}\n\nexport interface GoogleSearchConsoleSearchAnalyticsQuery {\n  startDate: string\n  endDate: string\n  dimensions?: string[]\n  dimensionFilterGroups?: Array<{\n    groupType: 'AND' | 'OR'\n    filters: Array<{\n      dimension: string\n      operator: 'EQUALS' | 'NOT_EQUALS' | 'CONTAINS' | 'NOT_CONTAINS'\n      expression: string\n    }>\n  }>\n  rowLimit?: number\n  startRow?: number\n  searchType?: 'WEB' | 'IMAGE' | 'VIDEO' | 'NEWS' | 'DISCOVER' | 'GOOGLE_NEWS'\n}\n\nexport interface GoogleSearchConsoleSitemap {\n  path: string\n  lastSubmitted: string\n  isPending: boolean\n  isSitemapsIndex: boolean\n  type: 'WEB' | 'IMAGE' | 'VIDEO' | 'NEWS' | 'DISCOVER' | 'GOOGLE_NEWS'\n  contents: Array<{\n    type: 'URL' | 'SITEMAP' | 'FEED'\n    submitted: number\n    indexed: number\n  }>\n  warnings: string[]\n  errors: string[]\n}\n\nexport interface GoogleSearchConsoleUrlInspectionResult {\n  inspectionResult: {\n    indexStatusResult: {\n      verdict: 'PASS' | 'PARTIAL' | 'FAIL' | 'NEUTRAL' | 'VERDICT_UNSPECIFIED'\n      coverageState: 'COVERED' | 'NOT_COVERED' | 'COVERAGE_STATE_UNSPECIFIED'\n      crawledAs: 'MOBILE' | 'DESKTOP' | 'CRAWLED_AS_UNSPECIFIED'\n      lastCrawlTime: string\n      pageFetchState: 'SUCCESSFUL' | 'SOFT_404' | 'BLOCKED_ROBOTS_TXT' | 'NOT_FOUND' | 'ACCESS_DENIED' | 'SERVER_ERROR' | 'REDIRECT_ERROR' | 'ACCESS_FORBIDDEN' | 'BLOCKED_4XX' | 'INTERNAL_CRAWL_ERROR' | 'INVALID_URL' | 'PAGE_FETCH_STATE_UNSPECIFIED'\n      indexingState: 'INDEXING_ALLOWED' | 'INDEXING_FORBIDDEN' | 'INDEXING_STATE_UNSPECIFIED'\n      robotsTxtState: 'ALLOWED' | 'DISALLOWED' | 'ROBOTS_TXT_STATE_UNSPECIFIED'\n      userAgent: string\n    }\n    richResultsResult: {\n      verdict: 'PASS' | 'PARTIAL' | 'FAIL' | 'NEUTRAL' | 'VERDICT_UNSPECIFIED'\n      detectedItems: Array<{\n        invalidArgumentNames: string[]\n        invalidArgumentValues: string[]\n        richResultType: string\n        issues: Array<{\n          severity: 'ERROR' | 'WARNING' | 'INFO' | 'SEVERITY_UNSPECIFIED'\n          message: string\n        }>\n      }>\n    }\n    mobileUsabilityResult: {\n      verdict: 'PASS' | 'PARTIAL' | 'FAIL' | 'NEUTRAL' | 'VERDICT_UNSPECIFIED'\n      issues: Array<{\n        severity: 'ERROR' | 'WARNING' | 'INFO' | 'SEVERITY_UNSPECIFIED'\n        message: string\n      }>\n    }\n  }\n}\n\nexport interface GoogleSearchConsoleMetrics {\n  totalClicks: number\n  totalImpressions: number\n  averageCtr: number\n  averagePosition: number\n  topQueries: Array<{\n    query: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }>\n  topPages: Array<{\n    page: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }>\n  topCountries: Array<{\n    country: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }>\n  topDevices: Array<{\n    device: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }>\n  searchAppearance: Array<{\n    type: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }>\n}\n\nexport class GoogleSearchConsoleService {\n  private accessToken: string\n  private baseUrl: string = 'https://www.googleapis.com/webmasters/v3'\n\n  constructor(accessToken: string) {\n    this.accessToken = accessToken\n  }\n\n  private async makeRequest<T>(\n    url: string,\n    method: 'GET' | 'POST' = 'GET',\n    body?: any\n  ): Promise<T> {\n    const response = await fetch(url, {\n      method,\n      headers: {\n        'Authorization': `Bearer ${this.accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: body ? JSON.stringify(body) : undefined,\n    })\n\n    if (!response.ok) {\n      throw new Error(`Google Search Console API error: ${response.status} ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  // Get all sites accessible to the user\n  async getSites(): Promise<GoogleSearchConsoleSite[]> {\n    try {\n      const response = await this.makeRequest<{ siteEntry: GoogleSearchConsoleSite[] }>(\n        `${this.baseUrl}/sites`\n      )\n      return response.siteEntry || []\n    } catch (error) {\n      console.error('Error fetching sites:', error)\n      throw error\n    }\n  }\n\n  // Get search analytics data\n  async getSearchAnalytics(\n    siteUrl: string,\n    query: GoogleSearchConsoleSearchAnalyticsQuery\n  ): Promise<GoogleSearchConsoleSearchAnalyticsData> {\n    try {\n      const response = await this.makeRequest<GoogleSearchConsoleSearchAnalyticsData>(\n        `${this.baseUrl}/sites/${encodeURIComponent(siteUrl)}/searchAnalytics/query`,\n        'POST',\n        query\n      )\n      return response\n    } catch (error) {\n      console.error('Error fetching search analytics:', error)\n      throw error\n    }\n  }\n\n  // Get sitemaps for a site\n  async getSitemaps(siteUrl: string): Promise<GoogleSearchConsoleSitemap[]> {\n    try {\n      const response = await this.makeRequest<{ sitemap: GoogleSearchConsoleSitemap[] }>(\n        `${this.baseUrl}/sites/${encodeURIComponent(siteUrl)}/sitemaps`\n      )\n      return response.sitemap || []\n    } catch (error) {\n      console.error('Error fetching sitemaps:', error)\n      throw error\n    }\n  }\n\n  // Inspect a URL\n  async inspectUrl(\n    siteUrl: string,\n    url: string\n  ): Promise<GoogleSearchConsoleUrlInspectionResult> {\n    try {\n      const response = await this.makeRequest<GoogleSearchConsoleUrlInspectionResult>(\n        `${this.baseUrl}/sites/${encodeURIComponent(siteUrl)}/urlInspection/index:inspect`,\n        'POST',\n        { inspectionUrl: url }\n      )\n      return response\n    } catch (error) {\n      console.error('Error inspecting URL:', error)\n      throw error\n    }\n  }\n\n  // Get comprehensive metrics for a site\n  async getMetrics(\n    siteUrl: string,\n    startDate: string,\n    endDate: string\n  ): Promise<GoogleSearchConsoleMetrics> {\n    try {\n      // Get overall metrics\n      const overallData = await this.getSearchAnalytics(siteUrl, {\n        startDate,\n        endDate,\n        rowLimit: 1\n      })\n\n      // Get top queries\n      const queriesData = await this.getSearchAnalytics(siteUrl, {\n        startDate,\n        endDate,\n        dimensions: ['query'],\n        rowLimit: 100\n      })\n\n      // Get top pages\n      const pagesData = await this.getSearchAnalytics(siteUrl, {\n        startDate,\n        endDate,\n        dimensions: ['page'],\n        rowLimit: 100\n      })\n\n      // Get country data\n      const countriesData = await this.getSearchAnalytics(siteUrl, {\n        startDate,\n        endDate,\n        dimensions: ['country'],\n        rowLimit: 100\n      })\n\n      // Get device data\n      const devicesData = await this.getSearchAnalytics(siteUrl, {\n        startDate,\n        endDate,\n        dimensions: ['device'],\n        rowLimit: 100\n      })\n\n      // Get search appearance data\n      const searchAppearanceData = await this.getSearchAnalytics(siteUrl, {\n        startDate,\n        endDate,\n        dimensions: ['searchAppearance'],\n        rowLimit: 100\n      })\n\n      // Process the data\n      const metrics: GoogleSearchConsoleMetrics = {\n        totalClicks: this.calculateTotalClicks(overallData),\n        totalImpressions: this.calculateTotalImpressions(overallData),\n        averageCtr: this.calculateAverageCtr(overallData),\n        averagePosition: this.calculateAveragePosition(overallData),\n        topQueries: this.processQueriesData(queriesData),\n        topPages: this.processPagesData(pagesData),\n        topCountries: this.processCountriesData(countriesData),\n        topDevices: this.processDevicesData(devicesData),\n        searchAppearance: this.processSearchAppearanceData(searchAppearanceData)\n      }\n\n      return metrics\n    } catch (error) {\n      console.error('Error fetching comprehensive metrics:', error)\n      throw error\n    }\n  }\n\n  // Helper methods for data processing\n  private calculateTotalClicks(data: GoogleSearchConsoleSearchAnalyticsData): number {\n    return data.rows.reduce((sum, row) => sum + row.clicks, 0)\n  }\n\n  private calculateTotalImpressions(data: GoogleSearchConsoleSearchAnalyticsData): number {\n    return data.rows.reduce((sum, row) => sum + row.impressions, 0)\n  }\n\n  private calculateAverageCtr(data: GoogleSearchConsoleSearchAnalyticsData): number {\n    if (data.rows.length === 0) return 0\n    const totalCtr = data.rows.reduce((sum, row) => sum + row.ctr, 0)\n    return totalCtr / data.rows.length\n  }\n\n  private calculateAveragePosition(data: GoogleSearchConsoleSearchAnalyticsData): number {\n    if (data.rows.length === 0) return 0\n    const totalPosition = data.rows.reduce((sum, row) => sum + row.position, 0)\n    return totalPosition / data.rows.length\n  }\n\n  private processQueriesData(data: GoogleSearchConsoleSearchAnalyticsData): Array<{\n    query: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }> {\n    return data.rows\n      .map(row => ({\n        query: row.keys[0] || '',\n        clicks: row.clicks,\n        impressions: row.impressions,\n        ctr: row.ctr,\n        position: row.position\n      }))\n      .sort((a, b) => b.clicks - a.clicks)\n      .slice(0, 20)\n  }\n\n  private processPagesData(data: GoogleSearchConsoleSearchAnalyticsData): Array<{\n    page: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }> {\n    return data.rows\n      .map(row => ({\n        page: row.keys[0] || '',\n        clicks: row.clicks,\n        impressions: row.impressions,\n        ctr: row.ctr,\n        position: row.position\n      }))\n      .sort((a, b) => b.clicks - a.clicks)\n      .slice(0, 20)\n  }\n\n  private processCountriesData(data: GoogleSearchConsoleSearchAnalyticsData): Array<{\n    country: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }> {\n    return data.rows\n      .map(row => ({\n        country: row.keys[0] || '',\n        clicks: row.clicks,\n        impressions: row.impressions,\n        ctr: row.ctr,\n        position: row.position\n      }))\n      .sort((a, b) => b.clicks - a.clicks)\n      .slice(0, 10)\n  }\n\n  private processDevicesData(data: GoogleSearchConsoleSearchAnalyticsData): Array<{\n    device: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }> {\n    return data.rows\n      .map(row => ({\n        device: row.keys[0] || '',\n        clicks: row.clicks,\n        impressions: row.impressions,\n        ctr: row.ctr,\n        position: row.position\n      }))\n      .sort((a, b) => b.clicks - a.clicks)\n      .slice(0, 5)\n  }\n\n  private processSearchAppearanceData(data: GoogleSearchConsoleSearchAnalyticsData): Array<{\n    type: string\n    clicks: number\n    impressions: number\n    ctr: number\n    position: number\n  }> {\n    return data.rows\n      .map(row => ({\n        type: row.keys[0] || '',\n        clicks: row.clicks,\n        impressions: row.impressions,\n        ctr: row.ctr,\n        position: row.position\n      }))\n      .sort((a, b) => b.clicks - a.clicks)\n      .slice(0, 10)\n  }\n}\n","export interface GoogleBusinessProfileAccount {\n  name: string\n  accountName: string\n  type: 'PERSONAL' | 'BUSINESS'\n  role: 'OWNER' | 'MANAGER' | 'COMMUNITY_MANAGER' | 'ADMIN'\n  state: 'ACCOUNT_STATE_UNSPECIFIED' | 'VERIFIED' | 'UNVERIFIED' | 'VERIFICATION_REQUIRED'\n  vettedState: 'VETTED_STATE_UNSPECIFIED' | 'VETTED' | 'NOT_VETTED'\n  permissionLevel: 'PERMISSION_LEVEL_UNSPECIFIED' | 'OWNER_LEVEL' | 'MANAGER_LEVEL' | 'COMMUNITY_LEVEL'\n}\n\nexport interface GoogleBusinessProfileLocation {\n  name: string\n  title: string\n  storefrontAddress: {\n    addressLines: string[]\n    locality: string\n    administrativeArea: string\n    postalCode: string\n    regionCode: string\n  }\n  primaryPhone: string\n  primaryCategory: {\n    name: string\n    categoryId: string\n  }\n  additionalCategories: Array<{\n    name: string\n    categoryId: string\n  }>\n  websiteUri: string\n  regularHours: {\n    weekdayDescriptions: string[]\n  }\n  specialHours: Array<{\n    startDate: {\n      year: number\n      month: number\n      day: number\n    }\n    endDate: {\n      year: number\n      month: number\n      day: number\n    }\n    hourType: 'HOUR_TYPE_UNSPECIFIED' | 'OPEN' | 'CLOSED' | 'HOLIDAY'\n  }>\n  profile: {\n    description: string\n    attributes: Array<{\n      name: string\n      values: string[]\n    }>\n  }\n  metrics: {\n    totalReviewCount: number\n    averageRating: number\n    totalPhotoCount: number\n  }\n  state: 'LOCATION_STATE_UNSPECIFIED' | 'VERIFIED' | 'UNVERIFIED' | 'VERIFICATION_REQUIRED'\n  metadata: {\n    hasGoogleUpdated: boolean\n    hasPendingEdits: boolean\n    canDelete: boolean\n    canOperateLocalPost: boolean\n    canOperateLodgingData: boolean\n    canOperateFoodMenu: boolean\n    canOperateFoodReservation: boolean\n    canOperateLodgingReservation: boolean\n    canDuplicate: boolean\n    canHaveBusinessCalls: boolean\n    canHaveBusinessMessages: boolean\n    canModifyServiceList: boolean\n    canOperateHealthData: boolean\n    canOperateInsuranceData: boolean\n  }\n}\n\nexport interface GoogleBusinessProfileInsight {\n  metric: {\n    metric: string\n    displayName: string\n  }\n  metricValue: {\n    stringValue?: string\n    intValue?: number\n    doubleValue?: number\n    moneyValue?: {\n      currencyCode: string\n      units: string\n      nanos: number\n    }\n  }\n  dimensionalValues: Array<{\n    metric: {\n      metric: string\n      displayName: string\n    }\n    value: {\n      stringValue?: string\n      intValue?: number\n      doubleValue?: number\n    }\n  }>\n}\n\nexport interface GoogleBusinessProfileMetrics {\n  totalViews: number\n  totalCalls: number\n  totalDirectionRequests: number\n  totalWebsiteClicks: number\n  totalPhotoViews: number\n  totalPosts: number\n  totalReviews: number\n  averageRating: number\n  topSearchQueries: Array<{\n    query: string\n    views: number\n  }>\n  topPhotoViews: Array<{\n    photoUrl: string\n    views: number\n  }>\n  customerActions: Array<{\n    action: string\n    count: number\n  }>\n  hourlyViews: Array<{\n    hour: number\n    views: number\n  }>\n  dailyViews: Array<{\n    date: string\n    views: number\n  }>\n  monthlyViews: Array<{\n    month: string\n    views: number\n  }>\n}\n\nexport interface GoogleBusinessProfilePost {\n  name: string\n  languageCode: string\n  summary: string\n  callToAction: {\n    actionType: 'ACTION_TYPE_UNSPECIFIED' | 'BOOK' | 'ORDER_ONLINE' | 'SHOP' | 'LEARN_MORE' | 'SIGN_UP' | 'GET_OFFER' | 'CALL'\n    url?: string\n  }\n  offer?: {\n    couponCode?: string\n    redeemOnlineUrl?: string\n    termsConditions?: string\n  }\n  event?: {\n    title: string\n    startTime: string\n    endTime: string\n  }\n  media: Array<{\n    mediaFormat: 'MEDIA_FORMAT_UNSPECIFIED' | 'PHOTO' | 'VIDEO'\n    sourceUrl: string\n    thumbnailUrl?: string\n  }>\n  state: 'POST_STATE_UNSPECIFIED' | 'LIVE' | 'REJECTED' | 'PENDING_REVIEW'\n  createTime: string\n  updateTime: string\n}\n\nexport class GoogleBusinessProfileService {\n  private accessToken: string\n  private baseUrl: string = 'https://mybusinessaccountmanagement.googleapis.com/v1'\n  private businessUrl: string = 'https://mybusinessbusinessinformation.googleapis.com/v1'\n  private insightsUrl: string = 'https://mybusinessinsights.googleapis.com/v1'\n\n  constructor(accessToken: string) {\n    this.accessToken = accessToken\n  }\n\n  private async makeRequest<T>(\n    url: string,\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE' = 'GET',\n    body?: any\n  ): Promise<T> {\n    const response = await fetch(url, {\n      method,\n      headers: {\n        'Authorization': `Bearer ${this.accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: body ? JSON.stringify(body) : undefined,\n    })\n\n    if (!response.ok) {\n      throw new Error(`Google Business Profile API error: ${response.status} ${response.statusText}`)\n    }\n\n    return response.json()\n  }\n\n  // Get all accounts accessible to the user\n  async getAccounts(): Promise<GoogleBusinessProfileAccount[]> {\n    try {\n      const response = await this.makeRequest<{ accounts: GoogleBusinessProfileAccount[] }>(\n        `${this.baseUrl}/accounts`\n      )\n      return response.accounts || []\n    } catch (error) {\n      console.error('Error fetching accounts:', error)\n      throw error\n    }\n  }\n\n  // Get locations for an account\n  async getLocations(accountId: string): Promise<GoogleBusinessProfileLocation[]> {\n    try {\n      const response = await this.makeRequest<{ locations: GoogleBusinessProfileLocation[] }>(\n        `${this.businessUrl}/accounts/${accountId}/locations`\n      )\n      return response.locations || []\n    } catch (error) {\n      console.error('Error fetching locations:', error)\n      throw error\n    }\n  }\n\n  // Get insights for a location\n  async getInsights(\n    locationId: string,\n    startDate: string,\n    endDate: string,\n    metricRequests: Array<{\n      metric: string\n      options: string[]\n    }>\n  ): Promise<GoogleBusinessProfileInsight[]> {\n    try {\n      const requestBody = {\n        locationNames: [`locations/${locationId}`],\n        basicRequest: {\n          metricRequests,\n          startDate: {\n            year: parseInt(startDate.split('-')[0]),\n            month: parseInt(startDate.split('-')[1]),\n            day: parseInt(startDate.split('-')[2])\n          },\n          endDate: {\n            year: parseInt(endDate.split('-')[0]),\n            month: parseInt(endDate.split('-')[1]),\n            day: parseInt(endDate.split('-')[2])\n          }\n        }\n      }\n\n      const response = await this.makeRequest<{ locationMetrics: Array<{ metricValues: GoogleBusinessProfileInsight[] }> }>(\n        `${this.insightsUrl}/locations/${locationId}:reportInsights`,\n        'POST',\n        requestBody\n      )\n\n      return response.locationMetrics[0]?.metricValues || []\n    } catch (error) {\n      console.error('Error fetching insights:', error)\n      throw error\n    }\n  }\n\n  // Get posts for a location\n  async getPosts(locationId: string): Promise<GoogleBusinessProfilePost[]> {\n    try {\n      const response = await this.makeRequest<{ posts: GoogleBusinessProfilePost[] }>(\n        `${this.businessUrl}/locations/${locationId}/localPosts`\n      )\n      return response.posts || []\n    } catch (error) {\n      console.error('Error fetching posts:', error)\n      throw error\n    }\n  }\n\n  // Get comprehensive metrics for a location\n  async getMetrics(\n    locationId: string,\n    startDate: string,\n    endDate: string\n  ): Promise<GoogleBusinessProfileMetrics> {\n    try {\n      // Get basic metrics\n      const basicInsights = await this.getInsights(locationId, startDate, endDate, [\n        { metric: 'QUERIES_DIRECT', options: [] },\n        { metric: 'QUERIES_INDIRECT', options: [] },\n        { metric: 'QUERIES_CHAIN', options: [] },\n        { metric: 'VIEWS_MAPS', options: [] },\n        { metric: 'VIEWS_SEARCH', options: [] },\n        { metric: 'ACTIONS_PHONE', options: [] },\n        { metric: 'ACTIONS_WEBSITE', options: [] },\n        { metric: 'ACTIONS_DRIVING_DIRECTIONS', options: [] },\n        { metric: 'PHOTOS_VIEWS_MERCHANT', options: [] },\n        { metric: 'PHOTOS_VIEWS_CUSTOMERS', options: [] },\n        { metric: 'PHOTOS_COUNT_MERCHANT', options: [] },\n        { metric: 'PHOTOS_COUNT_CUSTOMERS', options: [] },\n        { metric: 'POSTS_VIEWS', options: [] },\n        { metric: 'REVIEWS', options: [] }\n      ])\n\n      // Get hourly views\n      const hourlyInsights = await this.getInsights(locationId, startDate, endDate, [\n        { metric: 'QUERIES_DIRECT', options: ['HOUR'] }\n      ])\n\n      // Get daily views\n      const dailyInsights = await this.getInsights(locationId, startDate, endDate, [\n        { metric: 'QUERIES_DIRECT', options: ['DAY'] }\n      ])\n\n      // Get monthly views\n      const monthlyInsights = await this.getInsights(locationId, startDate, endDate, [\n        { metric: 'QUERIES_DIRECT', options: ['MONTH'] }\n      ])\n\n      // Process the data\n      const metrics: GoogleBusinessProfileMetrics = {\n        totalViews: this.extractMetricValue(basicInsights, 'QUERIES_DIRECT') + \n                   this.extractMetricValue(basicInsights, 'QUERIES_INDIRECT') + \n                   this.extractMetricValue(basicInsights, 'QUERIES_CHAIN'),\n        totalCalls: this.extractMetricValue(basicInsights, 'ACTIONS_PHONE'),\n        totalDirectionRequests: this.extractMetricValue(basicInsights, 'ACTIONS_DRIVING_DIRECTIONS'),\n        totalWebsiteClicks: this.extractMetricValue(basicInsights, 'ACTIONS_WEBSITE'),\n        totalPhotoViews: this.extractMetricValue(basicInsights, 'PHOTOS_VIEWS_MERCHANT') + \n                        this.extractMetricValue(basicInsights, 'PHOTOS_VIEWS_CUSTOMERS'),\n        totalPosts: this.extractMetricValue(basicInsights, 'POSTS_VIEWS'),\n        totalReviews: this.extractMetricValue(basicInsights, 'REVIEWS'),\n        averageRating: 0, // This would need to be calculated from review data\n        topSearchQueries: this.processSearchQueries(basicInsights),\n        topPhotoViews: this.processPhotoViews(basicInsights),\n        customerActions: this.processCustomerActions(basicInsights),\n        hourlyViews: this.processHourlyViews(hourlyInsights),\n        dailyViews: this.processDailyViews(dailyInsights),\n        monthlyViews: this.processMonthlyViews(monthlyInsights)\n      }\n\n      return metrics\n    } catch (error) {\n      console.error('Error fetching comprehensive metrics:', error)\n      throw error\n    }\n  }\n\n  // Helper methods for data processing\n  private extractMetricValue(insights: GoogleBusinessProfileInsight[], metric: string): number {\n    const insight = insights.find(i => i.metric.metric === metric)\n    if (!insight) return 0\n\n    if (insight.metricValue.intValue !== undefined) {\n      return insight.metricValue.intValue\n    }\n    if (insight.metricValue.doubleValue !== undefined) {\n      return insight.metricValue.doubleValue\n    }\n    return 0\n  }\n\n  private processSearchQueries(insights: GoogleBusinessProfileInsight[]): Array<{\n    query: string\n    views: number\n  }> {\n    // This would need to be implemented based on the actual API response structure\n    return []\n  }\n\n  private processPhotoViews(insights: GoogleBusinessProfileInsight[]): Array<{\n    photoUrl: string\n    views: number\n  }> {\n    // This would need to be implemented based on the actual API response structure\n    return []\n  }\n\n  private processCustomerActions(insights: GoogleBusinessProfileInsight[]): Array<{\n    action: string\n    count: number\n  }> {\n    const actions = [\n      { action: 'Phone Calls', count: this.extractMetricValue(insights, 'ACTIONS_PHONE') },\n      { action: 'Website Clicks', count: this.extractMetricValue(insights, 'ACTIONS_WEBSITE') },\n      { action: 'Directions', count: this.extractMetricValue(insights, 'ACTIONS_DRIVING_DIRECTIONS') }\n    ]\n\n    return actions.filter(action => action.count > 0)\n  }\n\n  private processHourlyViews(insights: GoogleBusinessProfileInsight[]): Array<{\n    hour: number\n    views: number\n  }> {\n    // This would need to be implemented based on the actual API response structure\n    return []\n  }\n\n  private processDailyViews(insights: GoogleBusinessProfileInsight[]): Array<{\n    date: string\n    views: number\n  }> {\n    // This would need to be implemented based on the actual API response structure\n    return []\n  }\n\n  private processMonthlyViews(insights: GoogleBusinessProfileInsight[]): Array<{\n    month: string\n    views: number\n  }> {\n    // This would need to be implemented based on the actual API response structure\n    return []\n  }\n}\n","import { GoogleAnalyticsService, GoogleAnalyticsMetrics } from './google-analytics'\nimport { GoogleSearchConsoleService, GoogleSearchConsoleMetrics } from './google-search-console'\nimport { GoogleBusinessProfileService, GoogleBusinessProfileMetrics } from './google-business-profile'\n\nexport interface GoogleOAuthConfig {\n  clientId: string\n  clientSecret: string\n  redirectUri: string\n  scopes: string[]\n}\n\nexport interface GoogleIntegration {\n  id: string\n  type: 'analytics' | 'search_console' | 'business_profile'\n  accountId: string\n  accountName: string\n  propertyId?: string\n  siteUrl?: string\n  locationId?: string\n  accessToken: string\n  refreshToken?: string\n  expiresAt: number\n  isActive: boolean\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface GoogleMetricsSummary {\n  analytics?: GoogleAnalyticsMetrics\n  searchConsole?: GoogleSearchConsoleMetrics\n  businessProfile?: GoogleBusinessProfileMetrics\n  lastUpdated: string\n}\n\nexport class GoogleService {\n  private analyticsService?: GoogleAnalyticsService\n  private searchConsoleService?: GoogleSearchConsoleService\n  private businessProfileService?: GoogleBusinessProfileService\n\n  constructor(integrations: GoogleIntegration[]) {\n    // Initialize services based on available integrations\n    const analyticsIntegration = integrations.find(i => i.type === 'analytics' && i.isActive)\n    if (analyticsIntegration) {\n      this.analyticsService = new GoogleAnalyticsService(analyticsIntegration.accessToken)\n    }\n\n    const searchConsoleIntegration = integrations.find(i => i.type === 'search_console' && i.isActive)\n    if (searchConsoleIntegration) {\n      this.searchConsoleService = new GoogleSearchConsoleService(searchConsoleIntegration.accessToken)\n    }\n\n    const businessProfileIntegration = integrations.find(i => i.type === 'business_profile' && i.isActive)\n    if (businessProfileIntegration) {\n      this.businessProfileService = new GoogleBusinessProfileService(businessProfileIntegration.accessToken)\n    }\n  }\n\n  // Get OAuth authorization URL\n  static getAuthorizationUrl(config: GoogleOAuthConfig): string {\n    const params = new URLSearchParams({\n      client_id: config.clientId,\n      redirect_uri: config.redirectUri,\n      scope: config.scopes.join(' '),\n      response_type: 'code',\n      access_type: 'offline',\n      prompt: 'consent'\n    })\n\n    return `https://accounts.google.com/o/oauth2/v2/auth?${params.toString()}`\n  }\n\n  // Exchange authorization code for tokens\n  static async exchangeCodeForTokens(\n    code: string,\n    config: GoogleOAuthConfig\n  ): Promise<{\n    accessToken: string\n    refreshToken: string\n    expiresIn: number\n  }> {\n    const response = await fetch('https://oauth2.googleapis.com/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: config.clientId,\n        client_secret: config.clientSecret,\n        code,\n        grant_type: 'authorization_code',\n        redirect_uri: config.redirectUri,\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`OAuth token exchange failed: ${response.status} ${response.statusText}`)\n    }\n\n    const data = await response.json()\n    return {\n      accessToken: data.access_token,\n      refreshToken: data.refresh_token,\n      expiresIn: data.expires_in\n    }\n  }\n\n  // Refresh access token\n  static async refreshAccessToken(\n    refreshToken: string,\n    config: GoogleOAuthConfig\n  ): Promise<{\n    accessToken: string\n    expiresIn: number\n  }> {\n    const response = await fetch('https://oauth2.googleapis.com/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: config.clientId,\n        client_secret: config.clientSecret,\n        refresh_token: refreshToken,\n        grant_type: 'refresh_token',\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Token refresh failed: ${response.status} ${response.statusText}`)\n    }\n\n    const data = await response.json()\n    return {\n      accessToken: data.access_token,\n      expiresIn: data.expires_in\n    }\n  }\n\n  // Get comprehensive metrics from all connected services\n  async getMetricsSummary(\n    startDate: string,\n    endDate: string,\n    propertyId?: string,\n    siteUrl?: string,\n    locationId?: string\n  ): Promise<GoogleMetricsSummary> {\n    const summary: GoogleMetricsSummary = {\n      lastUpdated: new Date().toISOString()\n    }\n\n    try {\n      // Get Analytics metrics\n      if (this.analyticsService && propertyId) {\n        summary.analytics = await this.analyticsService.getMetrics(propertyId, startDate, endDate)\n      }\n\n      // Get Search Console metrics\n      if (this.searchConsoleService && siteUrl) {\n        summary.searchConsole = await this.searchConsoleService.getMetrics(siteUrl, startDate, endDate)\n      }\n\n      // Get Business Profile metrics\n      if (this.businessProfileService && locationId) {\n        summary.businessProfile = await this.businessProfileService.getMetrics(locationId, startDate, endDate)\n      }\n    } catch (error) {\n      console.error('Error fetching metrics summary:', error)\n      throw error\n    }\n\n    return summary\n  }\n\n  // Get Analytics service\n  getAnalyticsService(): GoogleAnalyticsService | undefined {\n    return this.analyticsService\n  }\n\n  // Get Search Console service\n  getSearchConsoleService(): GoogleSearchConsoleService | undefined {\n    return this.searchConsoleService\n  }\n\n  // Get Business Profile service\n  getBusinessProfileService(): GoogleBusinessProfileService | undefined {\n    return this.businessProfileService\n  }\n\n  // Check if service is available\n  isServiceAvailable(type: 'analytics' | 'search_console' | 'business_profile'): boolean {\n    switch (type) {\n      case 'analytics':\n        return this.analyticsService !== undefined\n      case 'search_console':\n        return this.searchConsoleService !== undefined\n      case 'business_profile':\n        return this.businessProfileService !== undefined\n      default:\n        return false\n    }\n  }\n\n  // Get available services\n  getAvailableServices(): Array<'analytics' | 'search_console' | 'business_profile'> {\n    const services: Array<'analytics' | 'search_console' | 'business_profile'> = []\n    \n    if (this.analyticsService) services.push('analytics')\n    if (this.searchConsoleService) services.push('search_console')\n    if (this.businessProfileService) services.push('business_profile')\n    \n    return services\n  }\n}\n\n// Default OAuth scopes for each service\nexport const GOOGLE_OAUTH_SCOPES = {\n  analytics: [\n    'https://www.googleapis.com/auth/analytics.readonly',\n    'https://www.googleapis.com/auth/analytics.manage.users.readonly'\n  ],\n  search_console: [\n    'https://www.googleapis.com/auth/webmasters.readonly'\n  ],\n  business_profile: [\n    'https://www.googleapis.com/auth/business.manage'\n  ]\n}\n\n// Helper function to get all required scopes\nexport function getAllGoogleScopes(): string[] {\n  return [\n    ...GOOGLE_OAUTH_SCOPES.analytics,\n    ...GOOGLE_OAUTH_SCOPES.search_console,\n    ...GOOGLE_OAUTH_SCOPES.business_profile\n  ]\n}\n\n// Helper function to get scopes for specific services\nexport function getScopesForServices(services: Array<'analytics' | 'search_console' | 'business_profile'>): string[] {\n  const scopes: string[] = []\n  \n  services.forEach(service => {\n    scopes.push(...GOOGLE_OAUTH_SCOPES[service])\n  })\n  \n  return [...new Set(scopes)] // Remove duplicates\n}\n","export interface TeamMember {\n  id: string\n  user_id: string\n  website_id: string\n  role: 'admin' | 'editor'\n  permissions: TeamPermissions\n  invited_by: string\n  invited_at: string\n  joined_at?: string\n  status: 'pending' | 'active' | 'suspended'\n  last_active?: string\n  created_at: string\n  updated_at: string\n  user?: {\n    id: string\n    email: string\n    full_name?: string\n    avatar_url?: string\n  }\n}\n\nexport interface TeamPermissions {\n  can_manage_website: boolean\n  can_manage_domains: boolean\n  can_manage_analytics: boolean\n  can_manage_billing: boolean\n  can_manage_team: boolean\n  can_manage_integrations: boolean\n  can_manage_content: boolean\n  can_manage_settings: boolean\n}\n\nexport interface TeamInvitation {\n  id: string\n  email: string\n  website_id: string\n  role: 'admin' | 'editor'\n  permissions: TeamPermissions\n  invited_by: string\n  token: string\n  expires_at: string\n  status: 'pending' | 'accepted' | 'expired' | 'revoked'\n  created_at: string\n  updated_at: string\n}\n\nexport interface TeamActivity {\n  id: string\n  user_id: string\n  website_id: string\n  action: string\n  resource_type: string\n  resource_id?: string\n  details: Record<string, any>\n  ip_address?: string\n  user_agent?: string\n  created_at: string\n}\n\nexport interface TeamSettings {\n  id: string\n  website_id: string\n  allow_self_registration: boolean\n  require_approval: boolean\n  max_team_members: number\n  session_timeout: number\n  two_factor_required: boolean\n  password_policy: {\n    min_length: number\n    require_uppercase: boolean\n    require_lowercase: boolean\n    require_numbers: boolean\n    require_symbols: boolean\n  }\n  notification_settings: {\n    email_invitations: boolean\n    email_activity: boolean\n    email_security: boolean\n  }\n  created_at: string\n  updated_at: string\n}\n\n// Default permissions for roles\nexport const DEFAULT_ROLE_PERMISSIONS: Record<'admin' | 'editor', TeamPermissions> = {\n  admin: {\n    can_manage_website: true,\n    can_manage_domains: true,\n    can_manage_analytics: true,\n    can_manage_billing: true,\n    can_manage_team: true,\n    can_manage_integrations: true,\n    can_manage_content: true,\n    can_manage_settings: true,\n  },\n  editor: {\n    can_manage_website: true,\n    can_manage_domains: false,\n    can_manage_analytics: true,\n    can_manage_billing: false,\n    can_manage_team: false,\n    can_manage_integrations: false,\n    can_manage_content: true,\n    can_manage_settings: false,\n  },\n}\n\n// Team member status colors\nexport const TEAM_MEMBER_STATUS_COLORS = {\n  pending: 'yellow',\n  active: 'green',\n  suspended: 'red',\n} as const\n\n// Team member role colors\nexport const TEAM_MEMBER_ROLE_COLORS = {\n  admin: 'purple',\n  editor: 'blue',\n} as const\n","import { createBrowserClient, createServerClient } from '../auth/auth'\nimport { TeamMember, TeamInvitation, TeamActivity, TeamSettings, DEFAULT_ROLE_PERMISSIONS } from './types'\n\nexport class TeamService {\n  private supabase: any\n\n  constructor(serverClient?: any) {\n    this.supabase = serverClient || createBrowserClient()\n  }\n\n  // Team Members Management\n  async getTeamMembers(websiteId: string): Promise<{ data: TeamMember[]; error: any }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('team_members')\n        .select(`\n          *,\n          user:user_id (\n            id,\n            email,\n            full_name,\n            avatar_url\n          )\n        `)\n        .eq('website_id', websiteId)\n        .order('created_at', { ascending: false })\n\n      return { data: data || [], error }\n    } catch (error) {\n      return { data: [], error }\n    }\n  }\n\n  async addTeamMember(\n    websiteId: string,\n    email: string,\n    role: 'admin' | 'editor',\n    invitedBy: string\n  ): Promise<{ data: TeamInvitation | null; error: any }> {\n    try {\n      // Check if user already exists\n      const { data: existingUser } = await this.supabase\n        .from('users')\n        .select('id')\n        .eq('email', email)\n        .single()\n\n      if (existingUser) {\n        // User exists, add directly to team\n        const { data, error } = await this.supabase\n          .from('team_members')\n          .insert({\n            user_id: existingUser.id,\n            website_id: websiteId,\n            role,\n            permissions: DEFAULT_ROLE_PERMISSIONS[role],\n            invited_by: invitedBy,\n            status: 'active',\n            joined_at: new Date().toISOString()\n          })\n          .select()\n          .single()\n\n        return { data: null, error }\n      } else {\n        // User doesn't exist, create invitation\n        const invitationToken = this.generateInvitationToken()\n        const expiresAt = new Date()\n        expiresAt.setDate(expiresAt.getDate() + 7) // 7 days from now\n\n        const { data, error } = await this.supabase\n          .from('team_invitations')\n          .insert({\n            email,\n            website_id: websiteId,\n            role,\n            permissions: DEFAULT_ROLE_PERMISSIONS[role],\n            invited_by: invitedBy,\n            token: invitationToken,\n            expires_at: expiresAt.toISOString()\n          })\n          .select()\n          .single()\n\n        // Send invitation email (this would integrate with your email service)\n        await this.sendInvitationEmail(email, invitationToken, websiteId)\n\n        return { data, error }\n      }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  async updateTeamMember(\n    memberId: string,\n    updates: Partial<Pick<TeamMember, 'role' | 'permissions' | 'status'>>\n  ): Promise<{ data: TeamMember | null; error: any }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('team_members')\n        .update({\n          ...updates,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', memberId)\n        .select()\n        .single()\n\n      return { data, error }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  async removeTeamMember(memberId: string): Promise<{ error: any }> {\n    try {\n      const { error } = await this.supabase\n        .from('team_members')\n        .delete()\n        .eq('id', memberId)\n\n      return { error }\n    } catch (error) {\n      return { error }\n    }\n  }\n\n  // Team Invitations Management\n  async getTeamInvitations(websiteId: string): Promise<{ data: TeamInvitation[]; error: any }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('team_invitations')\n        .select('*')\n        .eq('website_id', websiteId)\n        .order('created_at', { ascending: false })\n\n      return { data: data || [], error }\n    } catch (error) {\n      return { data: [], error }\n    }\n  }\n\n  async acceptInvitation(token: string, userId: string): Promise<{ data: TeamMember | null; error: any }> {\n    try {\n      // Get invitation details\n      const { data: invitation, error: invitationError } = await this.supabase\n        .from('team_invitations')\n        .select('*')\n        .eq('token', token)\n        .eq('status', 'pending')\n        .single()\n\n      if (invitationError || !invitation) {\n        return { data: null, error: 'Invalid or expired invitation' }\n      }\n\n      // Check if invitation is expired\n      if (new Date(invitation.expires_at) < new Date()) {\n        return { data: null, error: 'Invitation has expired' }\n      }\n\n      // Add user to team\n      const { data: teamMember, error: memberError } = await this.supabase\n        .from('team_members')\n        .insert({\n          user_id: userId,\n          website_id: invitation.website_id,\n          role: invitation.role,\n          permissions: invitation.permissions,\n          invited_by: invitation.invited_by,\n          status: 'active',\n          joined_at: new Date().toISOString()\n        })\n        .select()\n        .single()\n\n      if (memberError) {\n        return { data: null, error: memberError }\n      }\n\n      // Update invitation status\n      await this.supabase\n        .from('team_invitations')\n        .update({ status: 'accepted' })\n        .eq('id', invitation.id)\n\n      return { data: teamMember, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  async revokeInvitation(invitationId: string): Promise<{ error: any }> {\n    try {\n      const { error } = await this.supabase\n        .from('team_invitations')\n        .update({ status: 'revoked' })\n        .eq('id', invitationId)\n\n      return { error }\n    } catch (error) {\n      return { error }\n    }\n  }\n\n  // Team Activity Logging\n  async logActivity(\n    websiteId: string,\n    userId: string,\n    action: string,\n    resourceType: string,\n    resourceId?: string,\n    details?: Record<string, any>,\n    ipAddress?: string,\n    userAgent?: string\n  ): Promise<{ error: any }> {\n    try {\n      const { error } = await this.supabase\n        .from('team_activities')\n        .insert({\n          website_id: websiteId,\n          user_id: userId,\n          action,\n          resource_type: resourceType,\n          resource_id: resourceId,\n          details: details || {},\n          ip_address: ipAddress,\n          user_agent: userAgent\n        })\n\n      return { error }\n    } catch (error) {\n      return { error }\n    }\n  }\n\n  async getTeamActivity(\n    websiteId: string,\n    limit: number = 50,\n    offset: number = 0\n  ): Promise<{ data: TeamActivity[]; error: any }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('team_activities')\n        .select(`\n          *,\n          user:user_id (\n            id,\n            email,\n            full_name,\n            avatar_url\n          )\n        `)\n        .eq('website_id', websiteId)\n        .order('created_at', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      return { data: data || [], error }\n    } catch (error) {\n      return { data: [], error }\n    }\n  }\n\n  // Team Settings Management\n  async getTeamSettings(websiteId: string): Promise<{ data: TeamSettings | null; error: any }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('team_settings')\n        .select('*')\n        .eq('website_id', websiteId)\n        .single()\n\n      return { data, error }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  async updateTeamSettings(\n    websiteId: string,\n    settings: Partial<TeamSettings>\n  ): Promise<{ data: TeamSettings | null; error: any }> {\n    try {\n      const { data, error } = await this.supabase\n        .from('team_settings')\n        .upsert({\n          website_id: websiteId,\n          ...settings,\n          updated_at: new Date().toISOString()\n        })\n        .select()\n        .single()\n\n      return { data, error }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n\n  // Permission Checking\n  async checkPermission(\n    userId: string,\n    websiteId: string,\n    permission: string\n  ): Promise<boolean> {\n    try {\n      const { data: member } = await this.supabase\n        .from('team_members')\n        .select('permissions')\n        .eq('user_id', userId)\n        .eq('website_id', websiteId)\n        .eq('status', 'active')\n        .single()\n\n      return member?.permissions?.[permission] || false\n    } catch (error) {\n      return false\n    }\n  }\n\n  async getUserRole(userId: string, websiteId: string): Promise<'admin' | 'editor' | null> {\n    try {\n      const { data: member } = await this.supabase\n        .from('team_members')\n        .select('role')\n        .eq('user_id', userId)\n        .eq('website_id', websiteId)\n        .eq('status', 'active')\n        .single()\n\n      return member?.role || null\n    } catch (error) {\n      return null\n    }\n  }\n\n  // Utility Methods\n  private generateInvitationToken(): string {\n    return Math.random().toString(36).substring(2, 15) + \n           Math.random().toString(36).substring(2, 15)\n  }\n\n  private async sendInvitationEmail(email: string, token: string, websiteId: string): Promise<void> {\n    // This would integrate with your email service (SendGrid, AWS SES, etc.)\n    // For now, we'll just log it\n    console.log(`Sending invitation email to ${email} with token ${token} for website ${websiteId}`)\n    \n    // In a real implementation, you would:\n    // 1. Get website details\n    // 2. Create email template\n    // 3. Send email with invitation link\n    // 4. Handle email delivery status\n  }\n\n  // Static method to create server-side instance\n  static createServerInstance(cookies: any): TeamService {\n    return new TeamService(createServerClient(cookies))\n  }\n}\n","import { useState, useEffect, useCallback } from 'react'\nimport { TeamService } from './team-service'\nimport { TeamMember, TeamInvitation, TeamActivity, TeamSettings } from './types'\n\nexport function useTeamMembers(websiteId: string) {\n  const [members, setMembers] = useState<TeamMember[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const teamService = new TeamService()\n\n  const loadMembers = useCallback(async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const { data, error } = await teamService.getTeamMembers(websiteId)\n      \n      if (error) {\n        setError(error.message || 'Failed to load team members')\n      } else {\n        setMembers(data)\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load team members')\n    } finally {\n      setLoading(false)\n    }\n  }, [websiteId, teamService])\n\n  const addMember = useCallback(async (\n    email: string,\n    role: 'admin' | 'editor',\n    invitedBy: string\n  ) => {\n    try {\n      setError(null)\n      const { data, error } = await teamService.addTeamMember(websiteId, email, role, invitedBy)\n      \n      if (error) {\n        setError(error.message || 'Failed to add team member')\n        return { success: false, error: error.message }\n      }\n      \n      // Reload members to get updated list\n      await loadMembers()\n      return { success: true }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to add team member'\n      setError(errorMessage)\n      return { success: false, error: errorMessage }\n    }\n  }, [websiteId, teamService, loadMembers])\n\n  const updateMember = useCallback(async (\n    memberId: string,\n    updates: Partial<Pick<TeamMember, 'role' | 'permissions' | 'status'>>\n  ) => {\n    try {\n      setError(null)\n      const { data, error } = await teamService.updateTeamMember(memberId, updates)\n      \n      if (error) {\n        setError(error.message || 'Failed to update team member')\n        return { success: false, error: error.message }\n      }\n      \n      // Update local state\n      setMembers(prev => prev.map(member => \n        member.id === memberId ? { ...member, ...updates } : member\n      ))\n      return { success: true }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update team member'\n      setError(errorMessage)\n      return { success: false, error: errorMessage }\n    }\n  }, [teamService])\n\n  const removeMember = useCallback(async (memberId: string) => {\n    try {\n      setError(null)\n      const { error } = await teamService.removeTeamMember(memberId)\n      \n      if (error) {\n        setError(error.message || 'Failed to remove team member')\n        return { success: false, error: error.message }\n      }\n      \n      // Update local state\n      setMembers(prev => prev.filter(member => member.id !== memberId))\n      return { success: true }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to remove team member'\n      setError(errorMessage)\n      return { success: false, error: errorMessage }\n    }\n  }, [teamService])\n\n  useEffect(() => {\n    if (websiteId) {\n      loadMembers()\n    }\n  }, [websiteId, loadMembers])\n\n  return {\n    members,\n    loading,\n    error,\n    addMember,\n    updateMember,\n    removeMember,\n    refresh: loadMembers\n  }\n}\n\nexport function useTeamInvitations(websiteId: string) {\n  const [invitations, setInvitations] = useState<TeamInvitation[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const teamService = new TeamService()\n\n  const loadInvitations = useCallback(async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const { data, error } = await teamService.getTeamInvitations(websiteId)\n      \n      if (error) {\n        setError(error.message || 'Failed to load invitations')\n      } else {\n        setInvitations(data)\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load invitations')\n    } finally {\n      setLoading(false)\n    }\n  }, [websiteId, teamService])\n\n  const revokeInvitation = useCallback(async (invitationId: string) => {\n    try {\n      setError(null)\n      const { error } = await teamService.revokeInvitation(invitationId)\n      \n      if (error) {\n        setError(error.message || 'Failed to revoke invitation')\n        return { success: false, error: error.message }\n      }\n      \n      // Update local state\n      setInvitations(prev => prev.map(invitation => \n        invitation.id === invitationId \n          ? { ...invitation, status: 'revoked' as const }\n          : invitation\n      ))\n      return { success: true }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to revoke invitation'\n      setError(errorMessage)\n      return { success: false, error: errorMessage }\n    }\n  }, [teamService])\n\n  useEffect(() => {\n    if (websiteId) {\n      loadInvitations()\n    }\n  }, [websiteId, loadInvitations])\n\n  return {\n    invitations,\n    loading,\n    error,\n    revokeInvitation,\n    refresh: loadInvitations\n  }\n}\n\nexport function useTeamActivity(websiteId: string) {\n  const [activities, setActivities] = useState<TeamActivity[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [hasMore, setHasMore] = useState(true)\n\n  const teamService = new TeamService()\n\n  const loadActivities = useCallback(async (limit: number = 50, offset: number = 0) => {\n    try {\n      setLoading(true)\n      setError(null)\n      const { data, error } = await teamService.getTeamActivity(websiteId, limit, offset)\n      \n      if (error) {\n        setError(error.message || 'Failed to load activities')\n      } else {\n        if (offset === 0) {\n          setActivities(data)\n        } else {\n          setActivities(prev => [...prev, ...data])\n        }\n        setHasMore(data.length === limit)\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load activities')\n    } finally {\n      setLoading(false)\n    }\n  }, [websiteId, teamService])\n\n  const loadMore = useCallback(() => {\n    if (!loading && hasMore) {\n      loadActivities(50, activities.length)\n    }\n  }, [loading, hasMore, activities.length, loadActivities])\n\n  useEffect(() => {\n    if (websiteId) {\n      loadActivities()\n    }\n  }, [websiteId, loadActivities])\n\n  return {\n    activities,\n    loading,\n    error,\n    hasMore,\n    loadMore,\n    refresh: () => loadActivities()\n  }\n}\n\nexport function useTeamSettings(websiteId: string) {\n  const [settings, setSettings] = useState<TeamSettings | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const teamService = new TeamService()\n\n  const loadSettings = useCallback(async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const { data, error } = await teamService.getTeamSettings(websiteId)\n      \n      if (error) {\n        setError(error.message || 'Failed to load settings')\n      } else {\n        setSettings(data)\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load settings')\n    } finally {\n      setLoading(false)\n    }\n  }, [websiteId, teamService])\n\n  const updateSettings = useCallback(async (updates: Partial<TeamSettings>) => {\n    try {\n      setError(null)\n      const { data, error } = await teamService.updateTeamSettings(websiteId, updates)\n      \n      if (error) {\n        setError(error.message || 'Failed to update settings')\n        return { success: false, error: error.message }\n      }\n      \n      setSettings(data)\n      return { success: true }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update settings'\n      setError(errorMessage)\n      return { success: false, error: errorMessage }\n    }\n  }, [websiteId, teamService])\n\n  useEffect(() => {\n    if (websiteId) {\n      loadSettings()\n    }\n  }, [websiteId, loadSettings])\n\n  return {\n    settings,\n    loading,\n    error,\n    updateSettings,\n    refresh: loadSettings\n  }\n}\n\nexport function useTeamPermissions(userId: string, websiteId: string) {\n  const [permissions, setPermissions] = useState<Record<string, boolean>>({})\n  const [role, setRole] = useState<'admin' | 'editor' | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  const teamService = new TeamService()\n\n  const checkPermission = useCallback(async (permission: string) => {\n    try {\n      const hasPermission = await teamService.checkPermission(userId, websiteId, permission as any)\n      setPermissions(prev => ({ ...prev, [permission]: hasPermission }))\n      return hasPermission\n    } catch (error) {\n      return false\n    }\n  }, [userId, websiteId, teamService])\n\n  const loadPermissions = useCallback(async () => {\n    try {\n      setLoading(true)\n      \n      // Get user role\n      const userRole = await teamService.getUserRole(userId, websiteId)\n      setRole(userRole)\n      \n      // Check all permissions\n      const permissionKeys = [\n        'can_manage_website',\n        'can_manage_domains',\n        'can_manage_analytics',\n        'can_manage_billing',\n        'can_manage_team',\n        'can_manage_integrations',\n        'can_manage_content',\n        'can_manage_settings'\n      ]\n      \n      const permissionChecks = permissionKeys.map(key => \n        teamService.checkPermission(userId, websiteId, key as any)\n      )\n      \n      const results = await Promise.all(permissionChecks)\n      const permissionMap = permissionKeys.reduce((acc, key, index) => {\n        acc[key] = results[index]\n        return acc\n      }, {} as Record<string, boolean>)\n      \n      setPermissions(permissionMap)\n    } catch (error) {\n      console.error('Failed to load permissions:', error)\n    } finally {\n      setLoading(false)\n    }\n  }, [userId, websiteId, teamService])\n\n  useEffect(() => {\n    if (userId && websiteId) {\n      loadPermissions()\n    }\n  }, [userId, websiteId, loadPermissions])\n\n  return {\n    permissions,\n    role,\n    loading,\n    checkPermission,\n    refresh: loadPermissions\n  }\n}\n","export interface LeadData {\n  email: string\n  name: string\n  company?: string\n  phone?: string\n  source: string\n  utm_source?: string\n  utm_medium?: string\n  utm_campaign?: string\n}\n\nexport interface SiteProvisioningData {\n  user_id: string\n  site_name: string\n  subdomain: string\n  template?: string\n}\n\nexport interface DomainActionData {\n  action: 'verify' | 'ssl_request' | 'delete'\n  domain: string\n  user_id: string\n  website_id?: string\n}\n\nexport interface N8NResponse {\n  success: boolean\n  message: string\n  [key: string]: any\n}\n\nexport class N8NService {\n  private baseUrl: string\n\n  constructor(baseUrl: string = process.env.N8N_WEBHOOK_URL || 'http://localhost:5678') {\n    this.baseUrl = baseUrl\n  }\n\n  /**\n   * Capture a lead from the marketing site\n   */\n  async captureLead(leadData: LeadData): Promise<N8NResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/webhook/lead-captured`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...leadData,\n          timestamp: new Date().toISOString()\n        })\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      return await response.json()\n    } catch (error) {\n      console.error('Error capturing lead:', error)\n      throw new Error('Failed to capture lead')\n    }\n  }\n\n  /**\n   * Provision a new site\n   */\n  async provisionSite(siteData: SiteProvisioningData): Promise<N8NResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/webhook/provision-site`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...siteData,\n          timestamp: new Date().toISOString()\n        })\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      return await response.json()\n    } catch (error) {\n      console.error('Error provisioning site:', error)\n      throw new Error('Failed to provision site')\n    }\n  }\n\n  /**\n   * Process domain action\n   */\n  async processDomainAction(domainData: DomainActionData): Promise<N8NResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/webhook/domain-webhook`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...domainData,\n          timestamp: new Date().toISOString()\n        })\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      return await response.json()\n    } catch (error) {\n      console.error('Error processing domain action:', error)\n      throw new Error('Failed to process domain action')\n    }\n  }\n\n  /**\n   * Check N8N health\n   */\n  async checkHealth(): Promise<boolean> {\n    try {\n      const response = await fetch(`${this.baseUrl}/healthz`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      })\n\n      return response.ok\n    } catch (error) {\n      console.error('Error checking N8N health:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get workflow status\n   */\n  async getWorkflowStatus(workflowId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/v1/workflows/${workflowId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`)\n      }\n\n      return await response.json()\n    } catch (error) {\n      console.error('Error getting workflow status:', error)\n      throw new Error('Failed to get workflow status')\n    }\n  }\n}\n\n// Export singleton instance\nexport const n8nService = new N8NService()\n","import { useState, useCallback } from 'react'\nimport { n8nService, LeadData, SiteProvisioningData, DomainActionData, N8NResponse } from './n8n'\n\nexport interface UseN8NReturn {\n  captureLead: (leadData: LeadData) => Promise<N8NResponse>\n  provisionSite: (siteData: SiteProvisioningData) => Promise<N8NResponse>\n  processDomainAction: (domainData: DomainActionData) => Promise<N8NResponse>\n  checkHealth: () => Promise<boolean>\n  loading: boolean\n  error: string | null\n}\n\nexport function useN8N(): UseN8NReturn {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleRequest = useCallback(async <T>(\n    requestFn: () => Promise<T>\n  ): Promise<T> => {\n    setLoading(true)\n    setError(null)\n    \n    try {\n      const result = await requestFn()\n      return result\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'An error occurred'\n      setError(errorMessage)\n      throw err\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  const captureLead = useCallback(async (leadData: LeadData): Promise<N8NResponse> => {\n    return handleRequest(() => n8nService.captureLead(leadData))\n  }, [handleRequest])\n\n  const provisionSite = useCallback(async (siteData: SiteProvisioningData): Promise<N8NResponse> => {\n    return handleRequest(() => n8nService.provisionSite(siteData))\n  }, [handleRequest])\n\n  const processDomainAction = useCallback(async (domainData: DomainActionData): Promise<N8NResponse> => {\n    return handleRequest(() => n8nService.processDomainAction(domainData))\n  }, [handleRequest])\n\n  const checkHealth = useCallback(async (): Promise<boolean> => {\n    return handleRequest(() => n8nService.checkHealth())\n  }, [handleRequest])\n\n  return {\n    captureLead,\n    provisionSite,\n    processDomainAction,\n    checkHealth,\n    loading,\n    error\n  }\n}\n","/**\n * i18n Service\n * Main service for internationalization functionality\n */\n\nimport { \n  Locale, \n  Translation, \n  I18nConfig, \n  TranslationOptions, \n  SupportedLocale,\n  TranslationNamespace as TNamespace\n} from './types'\n\nexport class I18nService {\n  private config: I18nConfig\n  private currentLocale: string\n  private translations: Map<string, Map<string, Translation>> = new Map()\n  private locales: Map<string, Locale> = new Map()\n\n  constructor(config: I18nConfig) {\n    this.config = config\n    this.currentLocale = config.defaultLocale\n    this.initializeLocales()\n  }\n\n  /**\n   * Initialize supported locales\n   */\n  private initializeLocales(): void {\n    const localeData: Record<string, Locale> = {\n      en: {\n        code: 'en',\n        name: 'English',\n        nativeName: 'English',\n        flag: '🇺🇸',\n        currency: 'USD',\n        dateFormat: 'MM/DD/YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: '.', thousands: ',' },\n        rtl: false\n      },\n      es: {\n        code: 'es',\n        name: 'Spanish',\n        nativeName: 'Español',\n        flag: '🇪🇸',\n        currency: 'EUR',\n        dateFormat: 'DD/MM/YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: ',', thousands: '.' },\n        rtl: false\n      },\n      fr: {\n        code: 'fr',\n        name: 'French',\n        nativeName: 'Français',\n        flag: '🇫🇷',\n        currency: 'EUR',\n        dateFormat: 'DD/MM/YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: ',', thousands: ' ' },\n        rtl: false\n      },\n      de: {\n        code: 'de',\n        name: 'German',\n        nativeName: 'Deutsch',\n        flag: '🇩🇪',\n        currency: 'EUR',\n        dateFormat: 'DD.MM.YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: ',', thousands: '.' },\n        rtl: false\n      },\n      it: {\n        code: 'it',\n        name: 'Italian',\n        nativeName: 'Italiano',\n        flag: '🇮🇹',\n        currency: 'EUR',\n        dateFormat: 'DD/MM/YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: ',', thousands: '.' },\n        rtl: false\n      },\n      pt: {\n        code: 'pt',\n        name: 'Portuguese',\n        nativeName: 'Português',\n        flag: '🇵🇹',\n        currency: 'EUR',\n        dateFormat: 'DD/MM/YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: ',', thousands: ' ' },\n        rtl: false\n      },\n      ru: {\n        code: 'ru',\n        name: 'Russian',\n        nativeName: 'Русский',\n        flag: '🇷🇺',\n        currency: 'RUB',\n        dateFormat: 'DD.MM.YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: ',', thousands: ' ' },\n        rtl: false\n      },\n      ja: {\n        code: 'ja',\n        name: 'Japanese',\n        nativeName: '日本語',\n        flag: '🇯🇵',\n        currency: 'JPY',\n        dateFormat: 'YYYY/MM/DD',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: '.', thousands: ',' },\n        rtl: false\n      },\n      ko: {\n        code: 'ko',\n        name: 'Korean',\n        nativeName: '한국어',\n        flag: '🇰🇷',\n        currency: 'KRW',\n        dateFormat: 'YYYY.MM.DD',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: '.', thousands: ',' },\n        rtl: false\n      },\n      zh: {\n        code: 'zh',\n        name: 'Chinese',\n        nativeName: '中文',\n        flag: '🇨🇳',\n        currency: 'CNY',\n        dateFormat: 'YYYY/MM/DD',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: '.', thousands: ',' },\n        rtl: false\n      },\n      ar: {\n        code: 'ar',\n        name: 'Arabic',\n        nativeName: 'العربية',\n        flag: '🇸🇦',\n        currency: 'SAR',\n        dateFormat: 'DD/MM/YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: '.', thousands: ',' },\n        rtl: true\n      },\n      hi: {\n        code: 'hi',\n        name: 'Hindi',\n        nativeName: 'हिन्दी',\n        flag: '🇮🇳',\n        currency: 'INR',\n        dateFormat: 'DD/MM/YYYY',\n        timeFormat: 'HH:mm',\n        numberFormat: { decimal: '.', thousands: ',' },\n        rtl: false\n      }\n    }\n\n    Object.values(localeData).forEach(locale => {\n      this.locales.set(locale.code, locale)\n    })\n  }\n\n  /**\n   * Get current locale\n   */\n  getCurrentLocale(): string {\n    return this.currentLocale\n  }\n\n  /**\n   * Set current locale\n   */\n  setLocale(locale: string): void {\n    if (this.locales.has(locale)) {\n      this.currentLocale = locale\n      this.saveLocaleToStorage(locale)\n    }\n  }\n\n  /**\n   * Get all supported locales\n   */\n  getSupportedLocales(): Locale[] {\n    return Array.from(this.locales.values())\n  }\n\n  /**\n   * Get locale information\n   */\n  getLocale(localeCode: string): Locale | undefined {\n    return this.locales.get(localeCode)\n  }\n\n  /**\n   * Check if locale is supported\n   */\n  isLocaleSupported(localeCode: string): boolean {\n    return this.locales.has(localeCode)\n  }\n\n  /**\n   * Load translations for a namespace\n   */\n  async loadTranslations(namespace: TNamespace, locale: string): Promise<void> {\n    try {\n      const response = await fetch(`${this.config.loadPath}/${locale}/${namespace}.json`)\n      if (!response.ok) {\n        throw new Error(`Failed to load translations for ${locale}/${namespace}`)\n      }\n      \n      const translations = await response.json()\n      const translationMap = new Map<string, Translation>()\n      \n      Object.entries(translations).forEach(([key, value]) => {\n        translationMap.set(key, {\n          key,\n          value: value as string,\n          locale,\n          namespace,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        })\n      })\n      \n      this.translations.set(`${locale}:${namespace}`, translationMap)\n    } catch (error) {\n      console.error(`Error loading translations for ${locale}/${namespace}:`, error)\n      // Fallback to default locale\n      if (locale !== this.config.fallbackLocale) {\n        await this.loadTranslations(namespace, this.config.fallbackLocale)\n      }\n    }\n  }\n\n  /**\n   * Get translation\n   */\n  t(key: string, options?: TranslationOptions & { namespace?: TNamespace }): string {\n    const namespace = options?.namespace || 'common'\n    const locale = this.currentLocale\n    const translationKey = `${locale}:${namespace}`\n    \n    const translation = this.translations.get(translationKey)?.get(key)\n    \n    if (!translation) {\n      // Try fallback locale\n      const fallbackKey = `${this.config.fallbackLocale}:${namespace}`\n      const fallbackTranslation = this.translations.get(fallbackKey)?.get(key)\n      \n      if (fallbackTranslation) {\n        return this.interpolate(fallbackTranslation.value, options)\n      }\n      \n      // Return key if no translation found\n      return options?.defaultValue || key\n    }\n\n    return this.interpolate(translation.value, options)\n  }\n\n  /**\n   * Interpolate variables in translation\n   */\n  private interpolate(text: string, options?: TranslationOptions): string {\n    if (!options?.variables) return text\n\n    return text.replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {\n      return options.variables![key] || match\n    })\n  }\n\n  /**\n   * Check if translation exists\n   */\n  exists(key: string, options?: { namespace?: TNamespace }): boolean {\n    const namespace = options?.namespace || 'common'\n    const locale = this.currentLocale\n    const translationKey = `${locale}:${namespace}`\n    \n    return this.translations.get(translationKey)?.has(key) || false\n  }\n\n  /**\n   * Get all translations for a namespace\n   */\n  getTranslations(namespace: TNamespace, locale?: string): Map<string, Translation> {\n    const targetLocale = locale || this.currentLocale\n    const translationKey = `${targetLocale}:${namespace}`\n    \n    return this.translations.get(translationKey) || new Map()\n  }\n\n  /**\n   * Save locale to storage\n   */\n  private saveLocaleToStorage(locale: string): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(this.config.detection.cookieName, locale)\n    }\n  }\n\n  /**\n   * Load locale from storage\n   */\n  loadLocaleFromStorage(): string | null {\n    if (typeof window !== 'undefined') {\n      return localStorage.getItem(this.config.detection.cookieName)\n    }\n    return null\n  }\n\n  /**\n   * Detect user's preferred locale\n   */\n  detectLocale(): string {\n    // Check storage first\n    const storedLocale = this.loadLocaleFromStorage()\n    if (storedLocale && this.isLocaleSupported(storedLocale)) {\n      return storedLocale\n    }\n\n    // Check browser language\n    if (typeof window !== 'undefined' && window.navigator) {\n      const browserLang = window.navigator.language.split('-')[0]\n      if (this.isLocaleSupported(browserLang)) {\n        return browserLang\n      }\n    }\n\n    // Check URL parameter\n    if (typeof window !== 'undefined') {\n      const urlParams = new URLSearchParams(window.location.search)\n      const urlLocale = urlParams.get('lang')\n      if (urlLocale && this.isLocaleSupported(urlLocale)) {\n        return urlLocale\n      }\n    }\n\n    // Return default locale\n    return this.config.defaultLocale\n  }\n\n  /**\n   * Initialize i18n service\n   */\n  async initialize(): Promise<void> {\n    const detectedLocale = this.detectLocale()\n    this.setLocale(detectedLocale)\n\n    // Load common translations\n    await this.loadTranslations('common', this.currentLocale)\n  }\n\n  /**\n   * Change locale and reload translations\n   */\n  async changeLocale(locale: string): Promise<void> {\n    if (!this.isLocaleSupported(locale)) {\n      throw new Error(`Locale ${locale} is not supported`)\n    }\n\n    this.setLocale(locale)\n    \n    // Reload all namespaces for new locale\n    for (const namespace of this.config.namespaces) {\n      await this.loadTranslations(namespace as TNamespace, locale)\n    }\n  }\n\n  /**\n   * Get RTL status for current locale\n   */\n  isRTL(): boolean {\n    const locale = this.getLocale(this.currentLocale)\n    return locale?.rtl || false\n  }\n\n  /**\n   * Get currency for current locale\n   */\n  getCurrency(): string {\n    const locale = this.getLocale(this.currentLocale)\n    return locale?.currency || 'USD'\n  }\n\n  /**\n   * Get date format for current locale\n   */\n  getDateFormat(): string {\n    const locale = this.getLocale(this.currentLocale)\n    return locale?.dateFormat || 'MM/DD/YYYY'\n  }\n\n  /**\n   * Get time format for current locale\n   */\n  getTimeFormat(): string {\n    const locale = this.getLocale(this.currentLocale)\n    return locale?.timeFormat || 'HH:mm'\n  }\n\n  /**\n   * Get number format for current locale\n   */\n  getNumberFormat(): { decimal: string; thousands: string } {\n    const locale = this.getLocale(this.currentLocale)\n    return locale?.numberFormat || { decimal: '.', thousands: ',' }\n  }\n}\n","/**\n * Translation Manager\n * Manages translation loading, caching, and synchronization\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport { Translation, TranslationNamespace as TNamespace, SupportedLocale } from './types'\n\nexport class TranslationManager {\n  private supabase: any\n  private cache: Map<string, Translation> = new Map()\n  private lastSync: Map<string, number> = new Map()\n\n  constructor(supabaseUrl: string, supabaseKey: string) {\n    this.supabase = createClient(supabaseUrl || 'https://placeholder.supabase.co', supabaseKey || 'placeholder_key')\n  }\n\n  /**\n   * Load translations from database\n   */\n  async loadTranslations(\n    locale: SupportedLocale, \n    namespace: TNamespace\n  ): Promise<Map<string, Translation>> {\n    try {\n      const { data, error } = await this.supabase\n        .from('translations')\n        .select('*')\n        .eq('locale', locale)\n        .eq('namespace', namespace)\n\n      if (error) {\n        throw error\n      }\n\n      const translations = new Map<string, Translation>()\n      \n      if (data) {\n        data.forEach((translation: Translation) => {\n          translations.set(translation.key, translation)\n          this.cache.set(`${locale}:${namespace}:${translation.key}`, translation)\n        })\n      }\n\n      this.lastSync.set(`${locale}:${namespace}`, Date.now())\n      return translations\n    } catch (error) {\n      console.error('Error loading translations:', error)\n      return new Map()\n    }\n  }\n\n  /**\n   * Save translation to database\n   */\n  async saveTranslation(translation: Omit<Translation, 'created_at' | 'updated_at'>): Promise<boolean> {\n    try {\n      const translationData = {\n        ...translation,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n\n      const { error } = await this.supabase\n        .from('translations')\n        .upsert(translationData)\n\n      if (error) {\n        throw error\n      }\n\n      // Update cache\n      this.cache.set(`${translation.locale}:${translation.namespace}:${translation.key}`, translationData as Translation)\n      return true\n    } catch (error) {\n      console.error('Error saving translation:', error)\n      return false\n    }\n  }\n\n  /**\n   * Update translation\n   */\n  async updateTranslation(\n    key: string,\n    locale: SupportedLocale,\n    namespace: TNamespace,\n    updates: Partial<Translation>\n  ): Promise<boolean> {\n    try {\n      const { error } = await this.supabase\n        .from('translations')\n        .update({\n          ...updates,\n          updated_at: new Date().toISOString()\n        })\n        .eq('key', key)\n        .eq('locale', locale)\n        .eq('namespace', namespace)\n\n      if (error) {\n        throw error\n      }\n\n      // Update cache\n      const cacheKey = `${locale}:${namespace}:${key}`\n      const cached = this.cache.get(cacheKey)\n      if (cached) {\n        this.cache.set(cacheKey, { ...cached, ...updates })\n      }\n\n      return true\n    } catch (error) {\n      console.error('Error updating translation:', error)\n      return false\n    }\n  }\n\n  /**\n   * Delete translation\n   */\n  async deleteTranslation(\n    key: string,\n    locale: SupportedLocale,\n    namespace: TNamespace\n  ): Promise<boolean> {\n    try {\n      const { error } = await this.supabase\n        .from('translations')\n        .delete()\n        .eq('key', key)\n        .eq('locale', locale)\n        .eq('namespace', namespace)\n\n      if (error) {\n        throw error\n      }\n\n      // Remove from cache\n      this.cache.delete(`${locale}:${namespace}:${key}`)\n      return true\n    } catch (error) {\n      console.error('Error deleting translation:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get translation from cache\n   */\n  getCachedTranslation(\n    key: string,\n    locale: SupportedLocale,\n    namespace: TNamespace\n  ): Translation | undefined {\n    return this.cache.get(`${locale}:${namespace}:${key}`)\n  }\n\n  /**\n   * Check if translations need sync\n   */\n  needsSync(locale: SupportedLocale, namespace: TNamespace): boolean {\n    const lastSyncTime = this.lastSync.get(`${locale}:${namespace}`)\n    if (!lastSyncTime) return true\n\n    // Sync if older than 1 hour\n    return Date.now() - lastSyncTime > 3600000\n  }\n\n  /**\n   * Sync translations with database\n   */\n  async syncTranslations(locale: SupportedLocale, namespace: TNamespace): Promise<void> {\n    if (!this.needsSync(locale, namespace)) return\n\n    await this.loadTranslations(locale, namespace)\n  }\n\n  /**\n   * Get all translations for a locale\n   */\n  async getAllTranslations(locale: SupportedLocale): Promise<Map<string, Translation>> {\n    try {\n      const { data, error } = await this.supabase\n        .from('translations')\n        .select('*')\n        .eq('locale', locale)\n\n      if (error) {\n        throw error\n      }\n\n      const translations = new Map<string, Translation>()\n      \n      if (data) {\n        data.forEach((translation: Translation) => {\n          translations.set(`${translation.namespace}:${translation.key}`, translation)\n        })\n      }\n\n      return translations\n    } catch (error) {\n      console.error('Error loading all translations:', error)\n      return new Map()\n    }\n  }\n\n  /**\n   * Get missing translations\n   */\n  async getMissingTranslations(\n    sourceLocale: SupportedLocale,\n    targetLocale: SupportedLocale,\n    namespace: TNamespace\n  ): Promise<string[]> {\n    try {\n      const [sourceTranslations, targetTranslations] = await Promise.all([\n        this.loadTranslations(sourceLocale, namespace),\n        this.loadTranslations(targetLocale, namespace)\n      ])\n\n      const missing: string[] = []\n      \n      sourceTranslations.forEach((_, key) => {\n        if (!targetTranslations.has(key)) {\n          missing.push(key)\n        }\n      })\n\n      return missing\n    } catch (error) {\n      console.error('Error getting missing translations:', error)\n      return []\n    }\n  }\n\n  /**\n   * Bulk import translations\n   */\n  async bulkImportTranslations(translations: Translation[]): Promise<boolean> {\n    try {\n      const { error } = await this.supabase\n        .from('translations')\n        .upsert(translations)\n\n      if (error) {\n        throw error\n      }\n\n      // Update cache\n      translations.forEach(translation => {\n        this.cache.set(\n          `${translation.locale}:${translation.namespace}:${translation.key}`,\n          translation\n        )\n      })\n\n      return true\n    } catch (error) {\n      console.error('Error bulk importing translations:', error)\n      return false\n    }\n  }\n\n  /**\n   * Export translations\n   */\n  async exportTranslations(\n    locale: SupportedLocale,\n    namespace?: TNamespace\n  ): Promise<Record<string, any>> {\n    try {\n      let query = this.supabase\n        .from('translations')\n        .select('*')\n        .eq('locale', locale)\n\n      if (namespace) {\n        query = query.eq('namespace', namespace)\n      }\n\n      const { data, error } = await query\n\n      if (error) {\n        throw error\n      }\n\n      const exportData: Record<string, any> = {}\n      \n      if (data) {\n        data.forEach((translation: Translation) => {\n          if (!exportData[translation.namespace]) {\n            exportData[translation.namespace] = {}\n          }\n          exportData[translation.namespace][translation.key] = translation.value\n        })\n      }\n\n      return exportData\n    } catch (error) {\n      console.error('Error exporting translations:', error)\n      return {}\n    }\n  }\n\n  /**\n   * Clear cache\n   */\n  clearCache(): void {\n    this.cache.clear()\n    this.lastSync.clear()\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getCacheStats(): {\n    totalTranslations: number\n    namespaces: string[]\n    locales: string[]\n    lastSyncTimes: Record<string, number>\n  } {\n    const namespaces = new Set<string>()\n    const locales = new Set<string>()\n    \n    this.cache.forEach((_, key) => {\n      const [locale, namespace] = key.split(':')\n      locales.add(locale)\n      namespaces.add(namespace)\n    })\n\n    return {\n      totalTranslations: this.cache.size,\n      namespaces: Array.from(namespaces),\n      locales: Array.from(locales),\n      lastSyncTimes: Object.fromEntries(this.lastSync)\n    }\n  }\n}\n","/**\n * Locale Detector\n * Detects user's preferred locale from various sources\n */\n\nimport { LanguageDetectionResult, SupportedLocale } from './types'\n\nexport class LocaleDetector {\n  private supportedLocales: SupportedLocale[]\n  private fallbackLocale: SupportedLocale\n\n  constructor(supportedLocales: SupportedLocale[], fallbackLocale: SupportedLocale = 'en') {\n    this.supportedLocales = supportedLocales\n    this.fallbackLocale = fallbackLocale\n  }\n\n  /**\n   * Detect locale from multiple sources\n   */\n  detect(): LanguageDetectionResult {\n    const detectionOrder = [\n      this.detectFromCookie,\n      this.detectFromLocalStorage,\n      this.detectFromNavigator,\n      this.detectFromURL,\n      this.detectFromHeader\n    ]\n\n    for (const detector of detectionOrder) {\n      try {\n        const result = detector.call(this)\n        if (result && this.isLocaleSupported(result.locale)) {\n          return result\n        }\n      } catch (error) {\n        console.warn('Error in locale detection:', error)\n      }\n    }\n\n    return {\n      locale: this.fallbackLocale,\n      confidence: 1.0,\n      source: 'default'\n    }\n  }\n\n  /**\n   * Detect from cookie\n   */\n  private detectFromCookie(): LanguageDetectionResult | null {\n    if (typeof document === 'undefined') return null\n\n    const cookies = document.cookie.split(';')\n    for (const cookie of cookies) {\n      const [name, value] = cookie.trim().split('=')\n      if (name === 'locale' || name === 'lang' || name === 'i18n') {\n        const locale = this.normalizeLocale(value)\n        if (this.isLocaleSupported(locale)) {\n          return {\n            locale,\n            confidence: 0.9,\n            source: 'cookie'\n          }\n        }\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * Detect from localStorage\n   */\n  private detectFromLocalStorage(): LanguageDetectionResult | null {\n    if (typeof window === 'undefined') return null\n\n    const stored = localStorage.getItem('locale') || localStorage.getItem('lang') || localStorage.getItem('i18n')\n    if (stored) {\n      const locale = this.normalizeLocale(stored)\n      if (this.isLocaleSupported(locale)) {\n        return {\n          locale,\n          confidence: 0.8,\n          source: 'localStorage'\n        }\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * Detect from navigator\n   */\n  private detectFromNavigator(): LanguageDetectionResult | null {\n    if (typeof navigator === 'undefined') return null\n\n    const languages = navigator.languages || [navigator.language]\n    \n    for (const lang of languages) {\n      const locale = this.normalizeLocale(lang)\n      if (this.isLocaleSupported(locale)) {\n        return {\n          locale,\n          confidence: 0.7,\n          source: 'navigator'\n        }\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * Detect from URL\n   */\n  private detectFromURL(): LanguageDetectionResult | null {\n    if (typeof window === 'undefined') return null\n\n    const urlParams = new URLSearchParams(window.location.search)\n    const langParam = urlParams.get('lang') || urlParams.get('locale') || urlParams.get('lng')\n    \n    if (langParam) {\n      const locale = this.normalizeLocale(langParam)\n      if (this.isLocaleSupported(locale)) {\n        return {\n          locale,\n          confidence: 0.6,\n          source: 'url'\n        }\n      }\n    }\n\n    // Check pathname for locale\n    const pathname = window.location.pathname\n    const pathSegments = pathname.split('/')\n    if (pathSegments.length > 1) {\n      const potentialLocale = this.normalizeLocale(pathSegments[1])\n      if (this.isLocaleSupported(potentialLocale)) {\n        return {\n          locale: potentialLocale,\n          confidence: 0.6,\n          source: 'url'\n        }\n      }\n    }\n\n    return null\n  }\n\n  /**\n   * Detect from header (server-side)\n   */\n  private detectFromHeader(): LanguageDetectionResult | null {\n    if (typeof window === 'undefined') return null\n\n    // This would typically be done server-side\n    // For client-side, we can't access headers directly\n    return null\n  }\n\n  /**\n   * Normalize locale code\n   */\n  private normalizeLocale(locale: string): SupportedLocale {\n    // Remove region code (e.g., 'en-US' -> 'en')\n    const normalized = locale.split('-')[0].toLowerCase()\n    \n    // Map common variations\n    const localeMap: Record<string, SupportedLocale> = {\n      'en': 'en',\n      'es': 'es',\n      'fr': 'fr',\n      'de': 'de',\n      'it': 'it',\n      'pt': 'pt',\n      'ru': 'ru',\n      'ja': 'ja',\n      'ko': 'ko',\n      'zh': 'zh',\n      'ar': 'ar',\n      'hi': 'hi'\n    }\n\n    return localeMap[normalized] || 'en'\n  }\n\n  /**\n   * Check if locale is supported\n   */\n  private isLocaleSupported(locale: string): boolean {\n    return this.supportedLocales.includes(locale as SupportedLocale)\n  }\n\n  /**\n   * Get best match for locale\n   */\n  getBestMatch(requestedLocale: string): SupportedLocale {\n    const normalized = this.normalizeLocale(requestedLocale)\n    \n    if (this.isLocaleSupported(normalized)) {\n      return normalized\n    }\n\n    // Try to find a close match\n    const language = normalized.split('-')[0]\n    for (const supported of this.supportedLocales) {\n      if (supported.startsWith(language)) {\n        return supported\n      }\n    }\n\n    return this.fallbackLocale\n  }\n\n  /**\n   * Get all supported locales\n   */\n  getSupportedLocales(): SupportedLocale[] {\n    return [...this.supportedLocales]\n  }\n\n  /**\n   * Add supported locale\n   */\n  addSupportedLocale(locale: SupportedLocale): void {\n    if (!this.supportedLocales.includes(locale)) {\n      this.supportedLocales.push(locale)\n    }\n  }\n\n  /**\n   * Remove supported locale\n   */\n  removeSupportedLocale(locale: SupportedLocale): void {\n    const index = this.supportedLocales.indexOf(locale)\n    if (index > -1) {\n      this.supportedLocales.splice(index, 1)\n    }\n  }\n\n  /**\n   * Set fallback locale\n   */\n  setFallbackLocale(locale: SupportedLocale): void {\n    this.fallbackLocale = locale\n  }\n\n  /**\n   * Get fallback locale\n   */\n  getFallbackLocale(): SupportedLocale {\n    return this.fallbackLocale\n  }\n}\n","/**\n * Currency Formatter\n * Handles currency formatting for different locales\n */\n\nimport { CurrencyOptions, SupportedLocale } from './types'\n\nexport class CurrencyFormatter {\n  private locale: string\n  private currency: string\n\n  constructor(locale: SupportedLocale, currency?: string) {\n    this.locale = locale\n    this.currency = currency || this.getDefaultCurrency(locale)\n  }\n\n  /**\n   * Get default currency for locale\n   */\n  private getDefaultCurrency(locale: SupportedLocale): string {\n    const currencyMap: Record<SupportedLocale, string> = {\n      en: 'USD',\n      es: 'EUR',\n      fr: 'EUR',\n      de: 'EUR',\n      it: 'EUR',\n      pt: 'EUR',\n      ru: 'RUB',\n      ja: 'JPY',\n      ko: 'KRW',\n      zh: 'CNY',\n      ar: 'SAR',\n      hi: 'INR'\n    }\n\n    return currencyMap[locale] || 'USD'\n  }\n\n  /**\n   * Format currency amount\n   */\n  format(amount: number, options?: Partial<CurrencyOptions>): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'currency',\n      currency: this.currency,\n      minimumFractionDigits: options?.minimumFractionDigits ?? 2,\n      maximumFractionDigits: options?.maximumFractionDigits ?? 2,\n      useGrouping: options?.useGrouping ?? true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(amount)\n    } catch (error) {\n      console.error('Error formatting currency:', error)\n      return `${this.currency} ${amount.toFixed(2)}`\n    }\n  }\n\n  /**\n   * Format currency with custom currency\n   */\n  formatWithCurrency(amount: number, currency: string, options?: Partial<CurrencyOptions>): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: options?.minimumFractionDigits ?? 2,\n      maximumFractionDigits: options?.maximumFractionDigits ?? 2,\n      useGrouping: options?.useGrouping ?? true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(amount)\n    } catch (error) {\n      console.error('Error formatting currency:', error)\n      return `${currency} ${amount.toFixed(2)}`\n    }\n  }\n\n  /**\n   * Parse currency string to number\n   */\n  parse(currencyString: string): number {\n    // Remove currency symbols and non-numeric characters except decimal point\n    const cleaned = currencyString.replace(/[^\\d.,-]/g, '')\n    \n    // Handle different decimal separators\n    const decimalSeparator = this.getDecimalSeparator()\n    const thousandsSeparator = this.getThousandsSeparator()\n    \n    let normalized = cleaned\n    if (decimalSeparator !== '.') {\n      // Replace decimal separator with dot\n      normalized = normalized.replace(new RegExp(`\\\\${decimalSeparator}`, 'g'), '.')\n    }\n    \n    // Remove thousands separators\n    if (thousandsSeparator) {\n      normalized = normalized.replace(new RegExp(`\\\\${thousandsSeparator}`, 'g'), '')\n    }\n    \n    const parsed = parseFloat(normalized)\n    return isNaN(parsed) ? 0 : parsed\n  }\n\n  /**\n   * Get currency symbol\n   */\n  getCurrencySymbol(currency?: string): string {\n    const targetCurrency = currency || this.currency\n    \n    try {\n      const formatter = new Intl.NumberFormat(this.locale, {\n        style: 'currency',\n        currency: targetCurrency,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      })\n      \n      return formatter.format(0).replace(/\\d/g, '').trim()\n    } catch (error) {\n      console.error('Error getting currency symbol:', error)\n      return targetCurrency\n    }\n  }\n\n  /**\n   * Get decimal separator for locale\n   */\n  private getDecimalSeparator(): string {\n    try {\n      const formatter = new Intl.NumberFormat(this.locale)\n      const parts = formatter.formatToParts(1.1)\n      const decimalPart = parts.find(part => part.type === 'decimal')\n      return decimalPart?.value || '.'\n    } catch (error) {\n      return '.'\n    }\n  }\n\n  /**\n   * Get thousands separator for locale\n   */\n  private getThousandsSeparator(): string {\n    try {\n      const formatter = new Intl.NumberFormat(this.locale)\n      const parts = formatter.formatToParts(1000)\n      const groupPart = parts.find(part => part.type === 'group')\n      return groupPart?.value || ','\n    } catch (error) {\n      return ','\n    }\n  }\n\n  /**\n   * Convert currency amount\n   */\n  convert(amount: number, fromCurrency: string, toCurrency: string, rate: number): number {\n    return amount * rate\n  }\n\n  /**\n   * Format compact currency (e.g., $1.2K, $1.2M)\n   */\n  formatCompact(amount: number, options?: Partial<CurrencyOptions>): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'currency',\n      currency: this.currency,\n      notation: 'compact',\n      compactDisplay: 'short',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 1,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(amount)\n    } catch (error) {\n      console.error('Error formatting compact currency:', error)\n      return this.format(amount, options)\n    }\n  }\n\n  /**\n   * Format currency range\n   */\n  formatRange(minAmount: number, maxAmount: number, options?: Partial<CurrencyOptions>): string {\n    const minFormatted = this.format(minAmount, options)\n    const maxFormatted = this.format(maxAmount, options)\n    \n    return `${minFormatted} - ${maxFormatted}`\n  }\n\n  /**\n   * Get supported currencies for locale\n   */\n  getSupportedCurrencies(): string[] {\n    // This would typically come from a more comprehensive list\n    const commonCurrencies = ['USD', 'EUR', 'GBP', 'JPY', 'CAD', 'AUD', 'CHF', 'CNY', 'RUB', 'INR', 'BRL', 'KRW']\n    return commonCurrencies\n  }\n\n  /**\n   * Check if currency is supported\n   */\n  isCurrencySupported(currency: string): boolean {\n    try {\n      new Intl.NumberFormat(this.locale, {\n        style: 'currency',\n        currency\n      }).format(0)\n      return true\n    } catch (error) {\n      return false\n    }\n  }\n\n  /**\n   * Update locale and currency\n   */\n  updateLocale(locale: SupportedLocale, currency?: string): void {\n    this.locale = locale\n    this.currency = currency || this.getDefaultCurrency(locale)\n  }\n\n  /**\n   * Get current currency\n   */\n  getCurrentCurrency(): string {\n    return this.currency\n  }\n\n  /**\n   * Get current locale\n   */\n  getCurrentLocale(): string {\n    return this.locale\n  }\n}\n","/**\n * Date Formatter\n * Handles date and time formatting for different locales\n */\n\nimport { DateOptions, SupportedLocale } from './types'\n\nexport class DateFormatter {\n  private locale: string\n  private timeZone: string\n\n  constructor(locale: SupportedLocale, timeZone?: string) {\n    this.locale = locale\n    this.timeZone = timeZone || this.getDefaultTimeZone()\n  }\n\n  /**\n   * Get default timezone for locale\n   */\n  private getDefaultTimeZone(): string {\n    try {\n      return Intl.DateTimeFormat().resolvedOptions().timeZone\n    } catch (error) {\n      return 'UTC'\n    }\n  }\n\n  /**\n   * Format date\n   */\n  format(date: Date | string | number, options?: DateOptions): string {\n    const dateObj = this.parseDate(date)\n    \n    const formatOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      timeZone: this.timeZone,\n      ...options\n    }\n\n    try {\n      return new Intl.DateTimeFormat(this.locale, formatOptions).format(dateObj)\n    } catch (error) {\n      console.error('Error formatting date:', error)\n      return dateObj.toLocaleDateString()\n    }\n  }\n\n  /**\n   * Format time\n   */\n  formatTime(date: Date | string | number, options?: DateOptions): string {\n    const dateObj = this.parseDate(date)\n    \n    const formatOptions: Intl.DateTimeFormatOptions = {\n      hour: 'numeric',\n      minute: '2-digit',\n      timeZone: this.timeZone,\n      ...options\n    }\n\n    try {\n      return new Intl.DateTimeFormat(this.locale, formatOptions).format(dateObj)\n    } catch (error) {\n      console.error('Error formatting time:', error)\n      return dateObj.toLocaleTimeString()\n    }\n  }\n\n  /**\n   * Format date and time\n   */\n  formatDateTime(date: Date | string | number, options?: DateOptions): string {\n    const dateObj = this.parseDate(date)\n    \n    const formatOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: '2-digit',\n      timeZone: this.timeZone,\n      ...options\n    }\n\n    try {\n      return new Intl.DateTimeFormat(this.locale, formatOptions).format(dateObj)\n    } catch (error) {\n      console.error('Error formatting date and time:', error)\n      return dateObj.toLocaleString()\n    }\n  }\n\n  /**\n   * Format relative time (e.g., \"2 hours ago\", \"in 3 days\")\n   */\n  formatRelative(date: Date | string | number, options?: { numeric?: 'always' | 'auto' }): string {\n    const dateObj = this.parseDate(date)\n    const now = new Date()\n    \n    try {\n      const rtf = new Intl.RelativeTimeFormat(this.locale, {\n        numeric: options?.numeric || 'auto'\n      })\n\n      const diffInSeconds = Math.floor((dateObj.getTime() - now.getTime()) / 1000)\n      const diffInMinutes = Math.floor(diffInSeconds / 60)\n      const diffInHours = Math.floor(diffInMinutes / 60)\n      const diffInDays = Math.floor(diffInHours / 24)\n      const diffInWeeks = Math.floor(diffInDays / 7)\n      const diffInMonths = Math.floor(diffInDays / 30)\n      const diffInYears = Math.floor(diffInDays / 365)\n\n      if (Math.abs(diffInYears) >= 1) {\n        return rtf.format(diffInYears, 'year')\n      } else if (Math.abs(diffInMonths) >= 1) {\n        return rtf.format(diffInMonths, 'month')\n      } else if (Math.abs(diffInWeeks) >= 1) {\n        return rtf.format(diffInWeeks, 'week')\n      } else if (Math.abs(diffInDays) >= 1) {\n        return rtf.format(diffInDays, 'day')\n      } else if (Math.abs(diffInHours) >= 1) {\n        return rtf.format(diffInHours, 'hour')\n      } else if (Math.abs(diffInMinutes) >= 1) {\n        return rtf.format(diffInMinutes, 'minute')\n      } else {\n        return rtf.format(diffInSeconds, 'second')\n      }\n    } catch (error) {\n      console.error('Error formatting relative time:', error)\n      return this.format(dateObj)\n    }\n  }\n\n  /**\n   * Format date range\n   */\n  formatRange(startDate: Date | string | number, endDate: Date | string | number, options?: DateOptions): string {\n    const start = this.parseDate(startDate)\n    const end = this.parseDate(endDate)\n    \n    const formatOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      timeZone: this.timeZone,\n      ...options\n    }\n\n    try {\n      const formatter = new Intl.DateTimeFormat(this.locale, formatOptions)\n      return `${formatter.format(start)} - ${formatter.format(end)}`\n    } catch (error) {\n      console.error('Error formatting date range:', error)\n      return `${this.format(start)} - ${this.format(end)}`\n    }\n  }\n\n  /**\n   * Parse date from various formats\n   */\n  private parseDate(date: Date | string | number): Date {\n    if (date instanceof Date) {\n      return date\n    }\n    \n    if (typeof date === 'number') {\n      return new Date(date)\n    }\n    \n    if (typeof date === 'string') {\n      const parsed = new Date(date)\n      if (isNaN(parsed.getTime())) {\n        throw new Error(`Invalid date string: ${date}`)\n      }\n      return parsed\n    }\n    \n    throw new Error('Invalid date input')\n  }\n\n  /**\n   * Get week start day for locale\n   */\n  getWeekStartDay(): number {\n    try {\n      const formatter = new Intl.DateTimeFormat(this.locale, { weekday: 'long' })\n      const weekStart = new Date(2024, 0, 1) // January 1, 2024 (Monday)\n      const dayName = formatter.format(weekStart)\n      \n      // Map day names to numbers (0 = Sunday, 1 = Monday, etc.)\n      const dayMap: Record<string, number> = {\n        'Sunday': 0, 'Monday': 1, 'Tuesday': 2, 'Wednesday': 3,\n        'Thursday': 4, 'Friday': 5, 'Saturday': 6\n      }\n      \n      return dayMap[dayName] || 1\n    } catch (error) {\n      return 1 // Default to Monday\n    }\n  }\n\n  /**\n   * Get month names\n   */\n  getMonthNames(format: 'long' | 'short' | 'narrow' = 'long'): string[] {\n    try {\n      const formatter = new Intl.DateTimeFormat(this.locale, { month: format })\n      return Array.from({ length: 12 }, (_, i) => \n        formatter.format(new Date(2024, i, 1))\n      )\n    } catch (error) {\n      console.error('Error getting month names:', error)\n      return []\n    }\n  }\n\n  /**\n   * Get weekday names\n   */\n  getWeekdayNames(format: 'long' | 'short' | 'narrow' = 'long'): string[] {\n    try {\n      const formatter = new Intl.DateTimeFormat(this.locale, { weekday: format })\n      return Array.from({ length: 7 }, (_, i) => \n        formatter.format(new Date(2024, 0, i + 1))\n      )\n    } catch (error) {\n      console.error('Error getting weekday names:', error)\n      return []\n    }\n  }\n\n  /**\n   * Get date format pattern\n   */\n  getDateFormatPattern(): string {\n    try {\n      const formatter = new Intl.DateTimeFormat(this.locale)\n      const parts = formatter.formatToParts(new Date(2024, 11, 25))\n      \n      return parts.map(part => {\n        switch (part.type) {\n          case 'year': return 'YYYY'\n          case 'month': return 'MM'\n          case 'day': return 'DD'\n          case 'hour': return 'HH'\n          case 'minute': return 'mm'\n          case 'second': return 'ss'\n          default: return part.value\n        }\n      }).join('')\n    } catch (error) {\n      console.error('Error getting date format pattern:', error)\n      return 'MM/DD/YYYY'\n    }\n  }\n\n  /**\n   * Get time format pattern\n   */\n  getTimeFormatPattern(): string {\n    try {\n      const formatter = new Intl.DateTimeFormat(this.locale, {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: false\n      })\n      const parts = formatter.formatToParts(new Date(2024, 0, 1, 14, 30))\n      \n      return parts.map(part => {\n        switch (part.type) {\n          case 'hour': return 'HH'\n          case 'minute': return 'mm'\n          case 'second': return 'ss'\n          default: return part.value\n        }\n      }).join('')\n    } catch (error) {\n      console.error('Error getting time format pattern:', error)\n      return 'HH:mm'\n    }\n  }\n\n  /**\n   * Check if date is today\n   */\n  isToday(date: Date | string | number): boolean {\n    const dateObj = this.parseDate(date)\n    const today = new Date()\n    \n    return dateObj.toDateString() === today.toDateString()\n  }\n\n  /**\n   * Check if date is yesterday\n   */\n  isYesterday(date: Date | string | number): boolean {\n    const dateObj = this.parseDate(date)\n    const yesterday = new Date()\n    yesterday.setDate(yesterday.getDate() - 1)\n    \n    return dateObj.toDateString() === yesterday.toDateString()\n  }\n\n  /**\n   * Check if date is tomorrow\n   */\n  isTomorrow(date: Date | string | number): boolean {\n    const dateObj = this.parseDate(date)\n    const tomorrow = new Date()\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    \n    return dateObj.toDateString() === tomorrow.toDateString()\n  }\n\n  /**\n   * Update locale and timezone\n   */\n  updateLocale(locale: SupportedLocale, timeZone?: string): void {\n    this.locale = locale\n    this.timeZone = timeZone || this.getDefaultTimeZone()\n  }\n\n  /**\n   * Get current locale\n   */\n  getCurrentLocale(): string {\n    return this.locale\n  }\n\n  /**\n   * Get current timezone\n   */\n  getCurrentTimeZone(): string {\n    return this.timeZone\n  }\n}\n","/**\n * Number Formatter\n * Handles number formatting for different locales\n */\n\nimport { NumberOptions, SupportedLocale } from './types'\n\nexport class NumberFormatter {\n  private locale: string\n\n  constructor(locale: SupportedLocale) {\n    this.locale = locale\n  }\n\n  /**\n   * Format number\n   */\n  format(number: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'decimal',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n      useGrouping: true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(number)\n    } catch (error) {\n      console.error('Error formatting number:', error)\n      return number.toString()\n    }\n  }\n\n  /**\n   * Format compact number (e.g., 1.2K, 1.2M)\n   */\n  formatCompact(number: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'decimal',\n      notation: 'compact',\n      compactDisplay: 'short',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 1,\n      useGrouping: true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(number)\n    } catch (error) {\n      console.error('Error formatting compact number:', error)\n      return this.format(number, options)\n    }\n  }\n\n  /**\n   * Format percentage\n   */\n  formatPercent(number: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n      useGrouping: true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(number / 100)\n    } catch (error) {\n      console.error('Error formatting percentage:', error)\n      return `${number}%`\n    }\n  }\n\n  /**\n   * Format ordinal number (e.g., 1st, 2nd, 3rd)\n   */\n  formatOrdinal(number: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(number)\n    } catch (error) {\n      console.error('Error formatting ordinal number:', error)\n      return number.toString()\n    }\n  }\n\n  /**\n   * Format scientific notation\n   */\n  formatScientific(number: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'decimal',\n      notation: 'scientific',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(number)\n    } catch (error) {\n      console.error('Error formatting scientific number:', error)\n      return number.toExponential()\n    }\n  }\n\n  /**\n   * Format engineering notation\n   */\n  formatEngineering(number: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'decimal',\n      notation: 'engineering',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(number)\n    } catch (error) {\n      console.error('Error formatting engineering number:', error)\n      return number.toExponential()\n    }\n  }\n\n  /**\n   * Parse number string\n   */\n  parse(numberString: string): number {\n    // Remove non-numeric characters except decimal point and minus sign\n    const cleaned = numberString.replace(/[^\\d.,-]/g, '')\n    \n    // Handle different decimal separators\n    const decimalSeparator = this.getDecimalSeparator()\n    const thousandsSeparator = this.getThousandsSeparator()\n    \n    let normalized = cleaned\n    \n    if (decimalSeparator !== '.') {\n      // Replace decimal separator with dot\n      normalized = normalized.replace(new RegExp(`\\\\${decimalSeparator}`, 'g'), '.')\n    }\n    \n    // Remove thousands separators\n    if (thousandsSeparator) {\n      normalized = normalized.replace(new RegExp(`\\\\${thousandsSeparator}`, 'g'), '')\n    }\n    \n    const parsed = parseFloat(normalized)\n    return isNaN(parsed) ? 0 : parsed\n  }\n\n  /**\n   * Get decimal separator for locale\n   */\n  private getDecimalSeparator(): string {\n    try {\n      const formatter = new Intl.NumberFormat(this.locale)\n      const parts = formatter.formatToParts(1.1)\n      const decimalPart = parts.find(part => part.type === 'decimal')\n      return decimalPart?.value || '.'\n    } catch (error) {\n      return '.'\n    }\n  }\n\n  /**\n   * Get thousands separator for locale\n   */\n  private getThousandsSeparator(): string {\n    try {\n      const formatter = new Intl.NumberFormat(this.locale)\n      const parts = formatter.formatToParts(1000)\n      const groupPart = parts.find(part => part.type === 'group')\n      return groupPart?.value || ','\n    } catch (error) {\n      return ','\n    }\n  }\n\n  /**\n   * Format number range\n   */\n  formatRange(minNumber: number, maxNumber: number, options?: NumberOptions): string {\n    const minFormatted = this.format(minNumber, options)\n    const maxFormatted = this.format(maxNumber, options)\n    \n    return `${minFormatted} - ${maxFormatted}`\n  }\n\n  /**\n   * Format number with unit\n   */\n  formatWithUnit(number: number, unit: string, options?: NumberOptions): string {\n    const formatted = this.format(number, options)\n    return `${formatted} ${unit}`\n  }\n\n  /**\n   * Format number with custom suffix\n   */\n  formatWithSuffix(number: number, suffix: string, options?: NumberOptions): string {\n    const formatted = this.format(number, options)\n    return `${formatted}${suffix}`\n  }\n\n  /**\n   * Format number with custom prefix\n   */\n  formatWithPrefix(number: number, prefix: string, options?: NumberOptions): string {\n    const formatted = this.format(number, options)\n    return `${prefix}${formatted}`\n  }\n\n  /**\n   * Check if number is valid\n   */\n  isValidNumber(value: any): boolean {\n    return typeof value === 'number' && !isNaN(value) && isFinite(value)\n  }\n\n  /**\n   * Clamp number to range\n   */\n  clamp(number: number, min: number, max: number): number {\n    return Math.min(Math.max(number, min), max)\n  }\n\n  /**\n   * Round number to specified decimal places\n   */\n  round(number: number, decimalPlaces: number = 2): number {\n    const factor = Math.pow(10, decimalPlaces)\n    return Math.round(number * factor) / factor\n  }\n\n  /**\n   * Format number as currency (without currency symbol)\n   */\n  formatCurrencyValue(amount: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'decimal',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n      useGrouping: true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(amount)\n    } catch (error) {\n      console.error('Error formatting currency value:', error)\n      return amount.toFixed(2)\n    }\n  }\n\n  /**\n   * Format number as integer\n   */\n  formatInteger(number: number, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'decimal',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n      useGrouping: true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(Math.floor(number))\n    } catch (error) {\n      console.error('Error formatting integer:', error)\n      return Math.floor(number).toString()\n    }\n  }\n\n  /**\n   * Format number as decimal\n   */\n  formatDecimal(number: number, decimalPlaces: number = 2, options?: NumberOptions): string {\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'decimal',\n      minimumFractionDigits: decimalPlaces,\n      maximumFractionDigits: decimalPlaces,\n      useGrouping: true,\n      ...options\n    }\n\n    try {\n      return new Intl.NumberFormat(this.locale, formatOptions).format(number)\n    } catch (error) {\n      console.error('Error formatting decimal:', error)\n      return number.toFixed(decimalPlaces)\n    }\n  }\n\n  /**\n   * Update locale\n   */\n  updateLocale(locale: SupportedLocale): void {\n    this.locale = locale\n  }\n\n  /**\n   * Get current locale\n   */\n  getCurrentLocale(): string {\n    return this.locale\n  }\n}\n","/**\n * React Hooks for i18n\n * Provides React hooks for internationalization functionality\n */\n\nimport React, { useState, useEffect, useCallback, useContext, createContext } from 'react'\nimport { I18nService } from './i18n-service'\nimport { CurrencyFormatter } from './currency-formatter'\nimport { DateFormatter } from './date-formatter'\nimport { NumberFormatter } from './number-formatter'\nimport { SupportedLocale, TranslationOptions, CurrencyOptions, DateOptions, NumberOptions } from './types'\n\n// Create i18n context\nconst I18nContext = createContext<{\n  i18n: I18nService\n  currencyFormatter: CurrencyFormatter\n  dateFormatter: DateFormatter\n  numberFormatter: NumberFormatter\n} | null>(null)\n\n// Provider component\nexport function I18nProvider({ \n  children, \n  i18nService \n}: { \n  children: React.ReactNode\n  i18nService: I18nService \n}) {\n  const [currencyFormatter] = useState(() => new CurrencyFormatter(i18nService.getCurrentLocale() as SupportedLocale))\n  const [dateFormatter] = useState(() => new DateFormatter(i18nService.getCurrentLocale() as SupportedLocale))\n  const [numberFormatter] = useState(() => new NumberFormatter(i18nService.getCurrentLocale() as SupportedLocale))\n\n  const value = {\n    i18n: i18nService,\n    currencyFormatter,\n    dateFormatter,\n    numberFormatter\n  }\n\n  return React.createElement(\n    I18nContext.Provider,\n    { value },\n    children\n  )\n}\n\n// Hook to use i18n context\nexport function useI18n() {\n  const context = useContext(I18nContext)\n  if (!context) {\n    throw new Error('useI18n must be used within an I18nProvider')\n  }\n  return context\n}\n\n// Hook for translations\nexport function useTranslation(namespace?: string) {\n  const { i18n } = useI18n()\n  const [locale, setLocale] = useState(i18n.getCurrentLocale())\n\n  const t = useCallback((key: string, options?: TranslationOptions) => {\n    return i18n.t(key, { ...options, namespace: namespace as any })\n  }, [i18n, namespace])\n\n  const changeLocale = useCallback(async (newLocale: SupportedLocale) => {\n    await i18n.changeLocale(newLocale)\n    setLocale(newLocale)\n  }, [i18n])\n\n  const exists = useCallback((key: string) => {\n    return i18n.exists(key, { namespace: namespace as any })\n  }, [i18n, namespace])\n\n  return {\n    t,\n    changeLocale,\n    exists,\n    locale,\n    isRTL: i18n.isRTL()\n  }\n}\n\n// Hook for currency formatting\nexport function useCurrency() {\n  const { currencyFormatter } = useI18n()\n  const { i18n } = useI18n()\n\n  const format = useCallback((amount: number, options?: Partial<CurrencyOptions>) => {\n    return currencyFormatter.format(amount, options)\n  }, [currencyFormatter])\n\n  const formatWithCurrency = useCallback((amount: number, currency: string, options?: Partial<CurrencyOptions>) => {\n    return currencyFormatter.formatWithCurrency(amount, currency, options)\n  }, [currencyFormatter])\n\n  const formatCompact = useCallback((amount: number, options?: Partial<CurrencyOptions>) => {\n    return currencyFormatter.formatCompact(amount, options)\n  }, [currencyFormatter])\n\n  const parse = useCallback((currencyString: string) => {\n    return currencyFormatter.parse(currencyString)\n  }, [currencyFormatter])\n\n  const getCurrencySymbol = useCallback((currency?: string) => {\n    return currencyFormatter.getCurrencySymbol(currency)\n  }, [currencyFormatter])\n\n  return {\n    format,\n    formatWithCurrency,\n    formatCompact,\n    parse,\n    getCurrencySymbol,\n    currency: i18n.getCurrency()\n  }\n}\n\n// Hook for date formatting\nexport function useDate() {\n  const { dateFormatter } = useI18n()\n\n  const format = useCallback((date: Date | string | number, options?: DateOptions) => {\n    return dateFormatter.format(date, options)\n  }, [dateFormatter])\n\n  const formatTime = useCallback((date: Date | string | number, options?: DateOptions) => {\n    return dateFormatter.formatTime(date, options)\n  }, [dateFormatter])\n\n  const formatDateTime = useCallback((date: Date | string | number, options?: DateOptions) => {\n    return dateFormatter.formatDateTime(date, options)\n  }, [dateFormatter])\n\n  const formatRelative = useCallback((date: Date | string | number, options?: { numeric?: 'always' | 'auto' }) => {\n    return dateFormatter.formatRelative(date, options)\n  }, [dateFormatter])\n\n  const formatRange = useCallback((startDate: Date | string | number, endDate: Date | string | number, options?: DateOptions) => {\n    return dateFormatter.formatRange(startDate, endDate, options)\n  }, [dateFormatter])\n\n  const isToday = useCallback((date: Date | string | number) => {\n    return dateFormatter.isToday(date)\n  }, [dateFormatter])\n\n  const isYesterday = useCallback((date: Date | string | number) => {\n    return dateFormatter.isYesterday(date)\n  }, [dateFormatter])\n\n  const isTomorrow = useCallback((date: Date | string | number) => {\n    return dateFormatter.isTomorrow(date)\n  }, [dateFormatter])\n\n  const getMonthNames = useCallback((format: 'long' | 'short' | 'narrow' = 'long') => {\n    return dateFormatter.getMonthNames(format)\n  }, [dateFormatter])\n\n  const getWeekdayNames = useCallback((format: 'long' | 'short' | 'narrow' = 'long') => {\n    return dateFormatter.getWeekdayNames(format)\n  }, [dateFormatter])\n\n  return {\n    format,\n    formatTime,\n    formatDateTime,\n    formatRelative,\n    formatRange,\n    isToday,\n    isYesterday,\n    isTomorrow,\n    getMonthNames,\n    getWeekdayNames\n  }\n}\n\n// Hook for number formatting\nexport function useNumber() {\n  const { numberFormatter } = useI18n()\n\n  const format = useCallback((number: number, options?: NumberOptions) => {\n    return numberFormatter.format(number, options)\n  }, [numberFormatter])\n\n  const formatCompact = useCallback((number: number, options?: NumberOptions) => {\n    return numberFormatter.formatCompact(number, options)\n  }, [numberFormatter])\n\n  const formatPercent = useCallback((number: number, options?: NumberOptions) => {\n    return numberFormatter.formatPercent(number, options)\n  }, [numberFormatter])\n\n  const parse = useCallback((numberString: string) => {\n    return numberFormatter.parse(numberString)\n  }, [numberFormatter])\n\n  return {\n    format,\n    formatCompact,\n    formatPercent,\n    parse\n  }\n}\n\n// Hook for locale management\nexport function useLocale() {\n  const { i18n } = useI18n()\n  const [locale, setLocale] = useState(i18n.getCurrentLocale())\n  const [loading, setLoading] = useState(false)\n\n  const changeLocale = useCallback(async (newLocale: SupportedLocale) => {\n    setLoading(true)\n    try {\n      await i18n.changeLocale(newLocale)\n      setLocale(newLocale)\n    } catch (error) {\n      console.error('Error changing locale:', error)\n    } finally {\n      setLoading(false)\n    }\n  }, [i18n])\n\n  const getSupportedLocales = useCallback(() => {\n    return i18n.getSupportedLocales()\n  }, [i18n])\n\n  const isLocaleSupported = useCallback((localeCode: string) => {\n    return i18n.isLocaleSupported(localeCode)\n  }, [i18n])\n\n  const getLocale = useCallback((localeCode: string) => {\n    return i18n.getLocale(localeCode)\n  }, [i18n])\n\n  return {\n    locale,\n    changeLocale,\n    getSupportedLocales,\n    isLocaleSupported,\n    getLocale,\n    loading,\n    isRTL: i18n.isRTL()\n  }\n}\n\n// Hook for RTL support\nexport function useRTL() {\n  const { i18n } = useI18n()\n  const [isRTL, setIsRTL] = useState(i18n.isRTL())\n\n  useEffect(() => {\n    const updateRTL = () => {\n      setIsRTL(i18n.isRTL())\n    }\n\n    // Listen for locale changes\n    const interval = setInterval(updateRTL, 1000)\n    return () => clearInterval(interval)\n  }, [i18n])\n\n  return {\n    isRTL,\n    direction: isRTL ? 'rtl' : 'ltr'\n  }\n}\n\n// Hook for pluralization\nexport function usePlural() {\n  const { i18n } = useI18n()\n\n  const getPluralForm = useCallback((count: number) => {\n    // This is a simplified implementation\n    // In a real app, you'd use a proper pluralization library\n    if (count === 0) return 'zero'\n    if (count === 1) return 'one'\n    if (count === 2) return 'two'\n    if (count >= 3 && count <= 10) return 'few'\n    if (count > 10) return 'many'\n    return 'other'\n  }, [])\n\n  const tPlural = useCallback((key: string, count: number, options?: TranslationOptions) => {\n    const pluralForm = getPluralForm(count)\n    return i18n.t(`${key}.${pluralForm}`, { ...options, count })\n  }, [i18n, getPluralForm])\n\n  return {\n    getPluralForm,\n    tPlural\n  }\n}\n","/**\n * GDPR Service\n * Main service that coordinates all GDPR compliance features\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport { ConsentManager } from './consent-manager'\nimport { DataSubjectRightsManager } from './data-subject-rights'\nimport { DataRetentionManager } from './data-retention'\nimport { AuditLogger } from './audit-logger'\nimport { \n  GDPRComplianceStatus, \n  DataBreach, \n  PrivacyPolicy, \n  ComplianceReport,\n  ConsentBannerConfig \n} from './types'\n\nexport class GDPRService {\n  private supabase: any\n  private consentManager: ConsentManager\n  private dataSubjectRightsManager: DataSubjectRightsManager\n  private dataRetentionManager: DataRetentionManager\n  private auditLogger: AuditLogger\n\n  constructor(supabaseUrl: string, supabaseKey: string) {\n    this.supabase = createClient(supabaseUrl || 'https://placeholder.supabase.co', supabaseKey || 'placeholder_key')\n    this.consentManager = new ConsentManager(supabaseUrl, supabaseKey)\n    this.dataSubjectRightsManager = new DataSubjectRightsManager(supabaseUrl, supabaseKey)\n    this.dataRetentionManager = new DataRetentionManager(supabaseUrl, supabaseKey)\n    this.auditLogger = new AuditLogger(supabaseUrl, supabaseKey)\n  }\n\n  /**\n   * Initialize GDPR compliance system\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      // Create default retention policies\n      await this.dataRetentionManager.createDefaultPolicies()\n\n      // Log initialization\n      await this.auditLogger.logSystemEvent(\n        'gdpr_initialized',\n        'system',\n        'gdpr_service'\n      )\n\n      return true\n    } catch (error) {\n      console.error('Error initializing GDPR service:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get GDPR compliance status\n   */\n  async getComplianceStatus(): Promise<GDPRComplianceStatus> {\n    try {\n      // Check consent management\n      const consentStats = await this.consentManager.getConsentStatistics()\n      const consentManagement = consentStats.total_users > 0\n\n      // Check data subject rights\n      const rightsStats = await this.dataSubjectRightsManager.getRightsStatistics()\n      const dataSubjectRights = rightsStats.total_requests >= 0\n\n      // Check privacy policy\n      const privacyPolicy = await this.getActivePrivacyPolicy()\n      const hasPrivacyPolicy = privacyPolicy !== null\n\n      // Check cookie consent\n      const cookieConsent = await this.getCookieConsentStatus()\n      const hasCookieConsent = cookieConsent\n\n      // Check data retention\n      const retentionStats = await this.dataRetentionManager.getRetentionStatistics()\n      const dataRetention = retentionStats.total_policies > 0\n\n      // Check audit logging\n      const auditStats = await this.auditLogger.getAuditStatistics()\n      const auditLogging = auditStats.total_logs > 0\n\n      // Check breach procedures (placeholder)\n      const breachProcedures = await this.checkBreachProcedures()\n\n      // Check staff training (placeholder)\n      const staffTraining = await this.checkStaffTraining()\n\n      // Get last audit date\n      const lastAudit = await this.getLastAuditDate()\n\n      // Calculate compliance score\n      const complianceScore = this.calculateComplianceScore({\n        consentManagement,\n        dataSubjectRights,\n        hasPrivacyPolicy,\n        hasCookieConsent,\n        dataRetention,\n        auditLogging,\n        breachProcedures,\n        staffTraining\n      })\n\n      return {\n        consent_management: consentManagement,\n        data_subject_rights: dataSubjectRights,\n        privacy_policy: hasPrivacyPolicy,\n        cookie_consent: hasCookieConsent,\n        data_retention: dataRetention,\n        audit_logging: auditLogging,\n        breach_procedures: breachProcedures,\n        staff_training: staffTraining,\n        last_audit: lastAudit,\n        compliance_score: complianceScore\n      }\n    } catch (error) {\n      console.error('Error getting compliance status:', error)\n      return {\n        consent_management: false,\n        data_subject_rights: false,\n        privacy_policy: false,\n        cookie_consent: false,\n        data_retention: false,\n        audit_logging: false,\n        breach_procedures: false,\n        staff_training: false,\n        last_audit: new Date().toISOString(),\n        compliance_score: 0\n      }\n    }\n  }\n\n  /**\n   * Get active privacy policy\n   */\n  async getActivePrivacyPolicy(): Promise<PrivacyPolicy | null> {\n    try {\n      const { data, error } = await this.supabase\n        .from('privacy_policies')\n        .select('*')\n        .eq('is_active', true)\n        .order('effective_date', { ascending: false })\n        .limit(1)\n        .single()\n\n      if (error && error.code !== 'PGRST116') {\n        throw error\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error fetching privacy policy:', error)\n      return null\n    }\n  }\n\n  /**\n   * Create or update privacy policy\n   */\n  async createPrivacyPolicy(policy: Omit<PrivacyPolicy, 'id' | 'created_at' | 'updated_at'>): Promise<PrivacyPolicy | null> {\n    try {\n      // Deactivate existing policies\n      await this.supabase\n        .from('privacy_policies')\n        .update({ is_active: false })\n        .eq('is_active', true)\n\n      // Create new policy\n      const policyData = {\n        ...policy,\n        is_active: true,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n\n      const { data, error } = await this.supabase\n        .from('privacy_policies')\n        .insert(policyData)\n        .select()\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      // Log policy creation\n      await this.auditLogger.logAdminAction(\n        'privacy_policy_created',\n        'privacy_policy',\n        data.id,\n        'system'\n      )\n\n      return data\n    } catch (error) {\n      console.error('Error creating privacy policy:', error)\n      return null\n    }\n  }\n\n  /**\n   * Get cookie consent status\n   */\n  private async getCookieConsentStatus(): Promise<boolean> {\n    try {\n      const { count } = await this.supabase\n        .from('cookie_consent')\n        .select('*', { count: 'exact', head: true })\n\n      return (count || 0) > 0\n    } catch (error) {\n      console.error('Error checking cookie consent status:', error)\n      return false\n    }\n  }\n\n  /**\n   * Check breach procedures\n   */\n  private async checkBreachProcedures(): Promise<boolean> {\n    try {\n      // Check if breach notification procedures are in place\n      const { data } = await this.supabase\n        .from('data_breaches')\n        .select('id')\n        .limit(1)\n\n      // For now, assume procedures are in place if we can query the table\n      return true\n    } catch (error) {\n      console.error('Error checking breach procedures:', error)\n      return false\n    }\n  }\n\n  /**\n   * Check staff training\n   */\n  private async checkStaffTraining(): Promise<boolean> {\n    try {\n      // Placeholder for staff training checks\n      // In a real implementation, this would check training records\n      return true\n    } catch (error) {\n      console.error('Error checking staff training:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get last audit date\n   */\n  private async getLastAuditDate(): Promise<string> {\n    try {\n      const { data } = await this.supabase\n        .from('compliance_reports')\n        .select('generated_at')\n        .order('generated_at', { ascending: false })\n        .limit(1)\n        .single()\n\n      return data?.generated_at || new Date().toISOString()\n    } catch (error) {\n      console.error('Error getting last audit date:', error)\n      return new Date().toISOString()\n    }\n  }\n\n  /**\n   * Calculate compliance score\n   */\n  private calculateComplianceScore(checks: {\n    consentManagement: boolean\n    dataSubjectRights: boolean\n    hasPrivacyPolicy: boolean\n    hasCookieConsent: boolean\n    dataRetention: boolean\n    auditLogging: boolean\n    breachProcedures: boolean\n    staffTraining: boolean\n  }): number {\n    const totalChecks = Object.keys(checks).length\n    const passedChecks = Object.values(checks).filter(Boolean).length\n    \n    return Math.round((passedChecks / totalChecks) * 100)\n  }\n\n  /**\n   * Report a data breach\n   */\n  async reportDataBreach(breach: Omit<DataBreach, 'id' | 'created_at' | 'updated_at'>): Promise<DataBreach | null> {\n    try {\n      const breachData = {\n        ...breach,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n\n      const { data, error } = await this.supabase\n        .from('data_breaches')\n        .insert(breachData)\n        .select()\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      // Log breach report\n      await this.auditLogger.logSecurityEvent(\n        'data_breach',\n        undefined,\n        'data_breach',\n        data.id,\n        { breach_id: data.id, risk_level: breach.risk_level }\n      )\n\n      // Send notifications if required\n      if (breach.notification_required) {\n        await this.sendBreachNotifications(data)\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error reporting data breach:', error)\n      return null\n    }\n  }\n\n  /**\n   * Send breach notifications\n   */\n  private async sendBreachNotifications(breach: DataBreach): Promise<void> {\n    try {\n      // Notify data protection officer\n      await this.notifyDataProtectionOfficer(breach)\n\n      // Notify affected users if required\n      if (breach.risk_level === 'high' || breach.risk_level === 'medium') {\n        await this.notifyAffectedUsers(breach)\n      }\n\n      // Log notification\n      await this.auditLogger.logSystemEvent(\n        'breach_notifications_sent',\n        'data_breach',\n        breach.id\n      )\n    } catch (error) {\n      console.error('Error sending breach notifications:', error)\n    }\n  }\n\n  /**\n   * Notify data protection officer\n   */\n  private async notifyDataProtectionOfficer(breach: DataBreach): Promise<void> {\n    try {\n      // Get DPO contact information\n      const { data: dpo } = await this.supabase\n        .from('data_protection_officers')\n        .select('*')\n        .eq('is_active', true)\n        .single()\n\n      if (dpo) {\n        // Send notification to DPO\n        await this.supabase\n          .from('admin_notifications')\n          .insert({\n            type: 'data_breach',\n            title: 'Data Breach Reported',\n            message: `A data breach has been reported: ${breach.description}`,\n            data: { breach_id: breach.id },\n            is_read: false,\n            created_at: new Date().toISOString()\n          })\n      }\n    } catch (error) {\n      console.error('Error notifying DPO:', error)\n    }\n  }\n\n  /**\n   * Notify affected users\n   */\n  private async notifyAffectedUsers(breach: DataBreach): Promise<void> {\n    try {\n      // This would typically involve sending emails to affected users\n      // For now, we'll create a notification record\n      await this.supabase\n        .from('user_notifications')\n        .insert({\n          type: 'data_breach',\n          title: 'Important: Data Security Notice',\n          message: 'We have identified a potential data security incident that may affect your personal information.',\n          data: { breach_id: breach.id },\n          is_read: false,\n          created_at: new Date().toISOString()\n        })\n    } catch (error) {\n      console.error('Error notifying affected users:', error)\n    }\n  }\n\n  /**\n   * Generate compliance report\n   */\n  async generateComplianceReport(\n    reportType: 'monthly' | 'quarterly' | 'annual' | 'ad_hoc',\n    periodStart: Date,\n    periodEnd: Date,\n    generatedBy: string\n  ): Promise<ComplianceReport | null> {\n    try {\n      // Get compliance statistics for the period\n      const complianceStatus = await this.getComplianceStatus()\n      const consentStats = await this.consentManager.getConsentStatistics()\n      const rightsStats = await this.dataSubjectRightsManager.getRightsStatistics()\n      const retentionStats = await this.dataRetentionManager.getRetentionStatistics()\n      const auditStats = await this.auditLogger.getAuditStatistics()\n\n      // Get data breaches in period\n      const { data: breaches } = await this.supabase\n        .from('data_breaches')\n        .select('*')\n        .gte('created_at', periodStart.toISOString())\n        .lte('created_at', periodEnd.toISOString())\n\n      // Generate recommendations\n      const recommendations = this.generateRecommendations(complianceStatus, auditStats)\n\n      const report: Omit<ComplianceReport, 'id'> = {\n        report_type: reportType,\n        period_start: periodStart.toISOString(),\n        period_end: periodEnd.toISOString(),\n        data_subject_requests: rightsStats.total_requests,\n        consent_updates: consentStats.recent_consents,\n        data_breaches: breaches?.length || 0,\n        audit_findings: this.generateAuditFindings(auditStats),\n        compliance_score: complianceStatus.compliance_score,\n        recommendations,\n        generated_at: new Date().toISOString(),\n        generated_by: generatedBy\n      }\n\n      const { data, error } = await this.supabase\n        .from('compliance_reports')\n        .insert(report)\n        .select()\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      // Log report generation\n      await this.auditLogger.logAdminAction(\n        'compliance_report_generated',\n        'compliance_report',\n        data.id,\n        generatedBy\n      )\n\n      return data\n    } catch (error) {\n      console.error('Error generating compliance report:', error)\n      return null\n    }\n  }\n\n  /**\n   * Generate compliance recommendations\n   */\n  private generateRecommendations(\n    complianceStatus: GDPRComplianceStatus,\n    auditStats: any\n  ): string[] {\n    const recommendations: string[] = []\n\n    if (!complianceStatus.consent_management) {\n      recommendations.push('Implement comprehensive consent management system')\n    }\n\n    if (!complianceStatus.data_subject_rights) {\n      recommendations.push('Set up data subject rights request handling')\n    }\n\n    if (!complianceStatus.privacy_policy) {\n      recommendations.push('Create and publish privacy policy')\n    }\n\n    if (!complianceStatus.cookie_consent) {\n      recommendations.push('Implement cookie consent mechanism')\n    }\n\n    if (!complianceStatus.data_retention) {\n      recommendations.push('Establish data retention policies')\n    }\n\n    if (!complianceStatus.audit_logging) {\n      recommendations.push('Enable comprehensive audit logging')\n    }\n\n    if (!complianceStatus.breach_procedures) {\n      recommendations.push('Develop data breach response procedures')\n    }\n\n    if (!complianceStatus.staff_training) {\n      recommendations.push('Provide GDPR training to staff')\n    }\n\n    if (auditStats.recent_activity > 1000) {\n      recommendations.push('Review high volume of audit activities')\n    }\n\n    return recommendations\n  }\n\n  /**\n   * Generate audit findings\n   */\n  private generateAuditFindings(auditStats: any): string[] {\n    const findings: string[] = []\n\n    if (auditStats.recent_activity > 500) {\n      findings.push('High volume of recent audit activity detected')\n    }\n\n    if (auditStats.logs_by_action['security_unauthorized_access'] > 0) {\n      findings.push('Unauthorized access attempts detected')\n    }\n\n    if (auditStats.logs_by_action['security_data_breach'] > 0) {\n      findings.push('Data breach incidents reported')\n    }\n\n    return findings\n  }\n\n  /**\n   * Get consent manager instance\n   */\n  getConsentManager(): ConsentManager {\n    return this.consentManager\n  }\n\n  /**\n   * Get data subject rights manager instance\n   */\n  getDataSubjectRightsManager(): DataSubjectRightsManager {\n    return this.dataSubjectRightsManager\n  }\n\n  /**\n   * Get data retention manager instance\n   */\n  getDataRetentionManager(): DataRetentionManager {\n    return this.dataRetentionManager\n  }\n\n  /**\n   * Get audit logger instance\n   */\n  getAuditLogger(): AuditLogger {\n    return this.auditLogger\n  }\n}\n","/**\n * Consent Manager\n * Handles user consent collection, storage, and management\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport { ConsentPreferences, ConsentType, CookieConsent, ConsentBannerConfig } from './types'\n\nexport class ConsentManager {\n  private supabase: any\n  private config: ConsentBannerConfig\n\n  constructor(supabaseUrl: string, supabaseKey: string, config?: Partial<ConsentBannerConfig>) {\n    this.supabase = createClient(supabaseUrl || 'https://placeholder.supabase.co', supabaseKey || 'placeholder_key')\n    this.config = {\n      enabled: true,\n      theme: 'auto',\n      position: 'bottom',\n      show_essential_only: false,\n      allow_reject_all: true,\n      allow_accept_all: true,\n      show_details: true,\n      languages: ['en'],\n      ...config\n    }\n  }\n\n  /**\n   * Get user's current consent preferences\n   */\n  async getConsentPreferences(userId: string): Promise<ConsentPreferences | null> {\n    try {\n      const { data, error } = await this.supabase\n        .from('consent_preferences')\n        .select('*')\n        .eq('user_id', userId)\n        .order('created_at', { ascending: false })\n        .limit(1)\n        .single()\n\n      if (error && error.code !== 'PGRST116') {\n        throw error\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error fetching consent preferences:', error)\n      return null\n    }\n  }\n\n  /**\n   * Save user's consent preferences\n   */\n  async saveConsentPreferences(\n    userId: string,\n    preferences: Partial<ConsentPreferences>,\n    metadata?: { ip_address?: string; user_agent?: string }\n  ): Promise<boolean> {\n    try {\n      const consentData = {\n        user_id: userId,\n        essential: preferences.essential ?? true, // Essential cookies are always true\n        analytics: preferences.analytics ?? false,\n        marketing: preferences.marketing ?? false,\n        personalization: preferences.personalization ?? false,\n        third_party: preferences.third_party ?? false,\n        ip_address: metadata?.ip_address,\n        user_agent: metadata?.user_agent,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n\n      const { error } = await this.supabase\n        .from('consent_preferences')\n        .upsert(consentData)\n\n      if (error) {\n        throw error\n      }\n\n      // Also save cookie consent for session tracking\n      await this.saveCookieConsent(userId, preferences, metadata)\n\n      return true\n    } catch (error) {\n      console.error('Error saving consent preferences:', error)\n      return false\n    }\n  }\n\n  /**\n   * Save cookie consent for session tracking\n   */\n  private async saveCookieConsent(\n    userId: string,\n    preferences: Partial<ConsentPreferences>,\n    metadata?: { ip_address?: string; user_agent?: string }\n  ): Promise<void> {\n    try {\n      const sessionId = this.generateSessionId()\n      \n      const cookieConsent = {\n        user_id: userId,\n        session_id: sessionId,\n        essential: preferences.essential ?? true,\n        analytics: preferences.analytics ?? false,\n        marketing: preferences.marketing ?? false,\n        personalization: preferences.personalization ?? false,\n        third_party: preferences.third_party ?? false,\n        consent_given_at: new Date().toISOString(),\n        ip_address: metadata?.ip_address,\n        user_agent: metadata?.user_agent\n      }\n\n      await this.supabase\n        .from('cookie_consent')\n        .insert(cookieConsent)\n    } catch (error) {\n      console.error('Error saving cookie consent:', error)\n    }\n  }\n\n  /**\n   * Check if user has given specific consent\n   */\n  async hasConsent(userId: string, consentType: ConsentType): Promise<boolean> {\n    try {\n      const preferences = await this.getConsentPreferences(userId)\n      if (!preferences) return false\n\n      switch (consentType) {\n        case 'essential':\n          return preferences.essential\n        case 'analytics':\n          return preferences.analytics\n        case 'marketing':\n          return preferences.marketing\n        case 'personalization':\n          return preferences.personalization\n        case 'third_party':\n          return preferences.third_party\n        default:\n          return false\n      }\n    } catch (error) {\n      console.error('Error checking consent:', error)\n      return false\n    }\n  }\n\n  /**\n   * Withdraw user consent\n   */\n  async withdrawConsent(userId: string, consentType: ConsentType): Promise<boolean> {\n    try {\n      const preferences = await this.getConsentPreferences(userId)\n      if (!preferences) return false\n\n      const updatedPreferences = {\n        ...preferences,\n        [consentType]: false,\n        updated_at: new Date().toISOString()\n      }\n\n      return await this.saveConsentPreferences(userId, updatedPreferences)\n    } catch (error) {\n      console.error('Error withdrawing consent:', error)\n      return false\n    }\n  }\n\n  /**\n   * Get consent banner configuration\n   */\n  getBannerConfig(): ConsentBannerConfig {\n    return this.config\n  }\n\n  /**\n   * Update consent banner configuration\n   */\n  updateBannerConfig(config: Partial<ConsentBannerConfig>): void {\n    this.config = { ...this.config, ...config }\n  }\n\n  /**\n   * Generate consent banner HTML\n   */\n  generateConsentBanner(language: string = 'en'): string {\n    if (!this.config.enabled) return ''\n\n    const texts = this.getBannerTexts(language)\n    \n    return `\n      <div id=\"consent-banner\" class=\"consent-banner consent-banner-${this.config.position} consent-banner-${this.config.theme}\" style=\"display: none;\">\n        <div class=\"consent-banner-content\">\n          <div class=\"consent-banner-header\">\n            <h3>${texts.title}</h3>\n            <p>${texts.description}</p>\n          </div>\n          \n          <div class=\"consent-banner-options\">\n            <div class=\"consent-option\">\n              <label>\n                <input type=\"checkbox\" id=\"consent-essential\" checked disabled>\n                ${texts.essential}\n              </label>\n            </div>\n            \n            <div class=\"consent-option\">\n              <label>\n                <input type=\"checkbox\" id=\"consent-analytics\">\n                ${texts.analytics}\n              </label>\n            </div>\n            \n            <div class=\"consent-option\">\n              <label>\n                <input type=\"checkbox\" id=\"consent-marketing\">\n                ${texts.marketing}\n              </label>\n            </div>\n            \n            <div class=\"consent-option\">\n              <label>\n                <input type=\"checkbox\" id=\"consent-personalization\">\n                ${texts.personalization}\n              </label>\n            </div>\n            \n            <div class=\"consent-option\">\n              <label>\n                <input type=\"checkbox\" id=\"consent-third-party\">\n                ${texts.third_party}\n              </label>\n            </div>\n          </div>\n          \n          <div class=\"consent-banner-actions\">\n            ${this.config.allow_reject_all ? `<button id=\"consent-reject-all\" class=\"consent-btn consent-btn-secondary\">${texts.reject_all}</button>` : ''}\n            ${this.config.allow_accept_all ? `<button id=\"consent-accept-all\" class=\"consent-btn consent-btn-primary\">${texts.accept_all}</button>` : ''}\n            <button id=\"consent-save-preferences\" class=\"consent-btn consent-btn-primary\">${texts.save_preferences}</button>\n          </div>\n        </div>\n      </div>\n    `\n  }\n\n  /**\n   * Get banner texts for specific language\n   */\n  private getBannerTexts(language: string) {\n    const defaultTexts = {\n      title: 'Cookie Consent',\n      description: 'We use cookies to enhance your experience and analyze our traffic. Please choose your preferences.',\n      accept_all: 'Accept All',\n      reject_all: 'Reject All',\n      save_preferences: 'Save Preferences',\n      essential: 'Essential Cookies',\n      analytics: 'Analytics Cookies',\n      marketing: 'Marketing Cookies',\n      personalization: 'Personalization Cookies',\n      third_party: 'Third-Party Cookies'\n    }\n\n    if (this.config.custom_text) {\n      return { ...defaultTexts, ...this.config.custom_text }\n    }\n\n    return defaultTexts\n  }\n\n  /**\n   * Generate session ID\n   */\n  private generateSessionId(): string {\n    return Math.random().toString(36).substring(2) + Date.now().toString(36)\n  }\n\n  /**\n   * Get consent statistics\n   */\n  async getConsentStatistics(): Promise<{\n    total_users: number\n    consent_rates: Record<ConsentType, number>\n    recent_consents: number\n  }> {\n    try {\n      // Get total users\n      const { count: totalUsers } = await this.supabase\n        .from('consent_preferences')\n        .select('*', { count: 'exact', head: true })\n\n      // Get consent rates\n      const { data: consentData } = await this.supabase\n        .from('consent_preferences')\n        .select('essential, analytics, marketing, personalization, third_party')\n\n      const consentRates = {\n        essential: 0,\n        analytics: 0,\n        marketing: 0,\n        personalization: 0,\n        third_party: 0\n      }\n\n      if (consentData && consentData.length > 0) {\n        const total = consentData.length\n        consentRates.essential = (consentData.filter((c: any) => c.essential).length / total) * 100\n        consentRates.analytics = (consentData.filter((c: any) => c.analytics).length / total) * 100\n        consentRates.marketing = (consentData.filter((c: any) => c.marketing).length / total) * 100\n        consentRates.personalization = (consentData.filter((c: any) => c.personalization).length / total) * 100\n        consentRates.third_party = (consentData.filter((c: any) => c.third_party).length / total) * 100\n      }\n\n      // Get recent consents (last 30 days)\n      const thirtyDaysAgo = new Date()\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30)\n\n      const { count: recentConsents } = await this.supabase\n        .from('consent_preferences')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', thirtyDaysAgo.toISOString())\n\n      return {\n        total_users: totalUsers || 0,\n        consent_rates: consentRates,\n        recent_consents: recentConsents || 0\n      }\n    } catch (error) {\n      console.error('Error getting consent statistics:', error)\n      return {\n        total_users: 0,\n        consent_rates: {\n          essential: 0,\n          analytics: 0,\n          marketing: 0,\n          personalization: 0,\n          third_party: 0\n        },\n        recent_consents: 0\n      }\n    }\n  }\n}\n","/**\n * Data Subject Rights Manager\n * Handles GDPR data subject rights requests (access, rectification, erasure, etc.)\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport { DataSubjectRequest, DataSubjectRightType, DataExport, DataDeletionRequest } from './types'\n\nexport class DataSubjectRightsManager {\n  private supabase: any\n\n  constructor(supabaseUrl: string, supabaseKey: string) {\n    this.supabase = createClient(supabaseUrl || 'https://placeholder.supabase.co', supabaseKey || 'placeholder_key')\n  }\n\n  /**\n   * Create a new data subject request\n   */\n  async createDataSubjectRequest(\n    userId: string,\n    requestType: DataSubjectRightType,\n    description?: string\n  ): Promise<DataSubjectRequest | null> {\n    try {\n      const requestData = {\n        user_id: userId,\n        request_type: requestType,\n        status: 'pending',\n        description,\n        requested_at: new Date().toISOString()\n      }\n\n      const { data, error } = await this.supabase\n        .from('data_subject_requests')\n        .insert(requestData)\n        .select()\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      // Send notification to admin\n      await this.notifyAdmin('data_request', {\n        user_id: userId,\n        request_type: requestType,\n        request_id: data.id\n      })\n\n      return data\n    } catch (error) {\n      console.error('Error creating data subject request:', error)\n      return null\n    }\n  }\n\n  /**\n   * Get user's data subject requests\n   */\n  async getUserRequests(userId: string): Promise<DataSubjectRequest[]> {\n    try {\n      const { data, error } = await this.supabase\n        .from('data_subject_requests')\n        .select('*')\n        .eq('user_id', userId)\n        .order('requested_at', { ascending: false })\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error fetching user requests:', error)\n      return []\n    }\n  }\n\n  /**\n   * Get all pending data subject requests (admin)\n   */\n  async getPendingRequests(): Promise<DataSubjectRequest[]> {\n    try {\n      const { data, error } = await this.supabase\n        .from('data_subject_requests')\n        .select('*')\n        .eq('status', 'pending')\n        .order('requested_at', { ascending: true })\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error fetching pending requests:', error)\n      return []\n    }\n  }\n\n  /**\n   * Update request status (admin)\n   */\n  async updateRequestStatus(\n    requestId: string,\n    status: DataSubjectRequest['status'],\n    adminNotes?: string\n  ): Promise<boolean> {\n    try {\n      const updateData: any = {\n        status,\n        updated_at: new Date().toISOString()\n      }\n\n      if (status === 'completed') {\n        updateData.completed_at = new Date().toISOString()\n      }\n\n      if (adminNotes) {\n        updateData.admin_notes = adminNotes\n      }\n\n      const { error } = await this.supabase\n        .from('data_subject_requests')\n        .update(updateData)\n        .eq('id', requestId)\n\n      if (error) {\n        throw error\n      }\n\n      return true\n    } catch (error) {\n      console.error('Error updating request status:', error)\n      return false\n    }\n  }\n\n  /**\n   * Handle data access request\n   */\n  async handleDataAccessRequest(userId: string): Promise<DataExport | null> {\n    try {\n      // Create data export\n      const exportData = {\n        user_id: userId,\n        data_types: ['profile', 'websites', 'subscriptions', 'consent', 'audit_logs'],\n        format: 'json',\n        status: 'pending',\n        created_at: new Date().toISOString(),\n        expires_at: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString() // 30 days\n      }\n\n      const { data: exportRecord, error: exportError } = await this.supabase\n        .from('data_exports')\n        .insert(exportData)\n        .select()\n        .single()\n\n      if (exportError) {\n        throw exportError\n      }\n\n      // Process the export\n      await this.processDataExport(exportRecord.id, userId)\n\n      return exportRecord\n    } catch (error) {\n      console.error('Error handling data access request:', error)\n      return null\n    }\n  }\n\n  /**\n   * Process data export\n   */\n  private async processDataExport(exportId: string, userId: string): Promise<void> {\n    try {\n      // Update status to processing\n      await this.supabase\n        .from('data_exports')\n        .update({ status: 'processing' })\n        .eq('id', exportId)\n\n      // Collect user data\n      const userData = await this.collectUserData(userId)\n\n      // Generate export file\n      const exportData = {\n        user_id: userId,\n        export_id: exportId,\n        generated_at: new Date().toISOString(),\n        data: userData\n      }\n\n      // Store export data (in a real implementation, this would be stored in a secure location)\n      const { error: updateError } = await this.supabase\n        .from('data_exports')\n        .update({\n          status: 'ready',\n          response_data: exportData,\n          file_size: JSON.stringify(exportData).length\n        })\n        .eq('id', exportId)\n\n      if (updateError) {\n        throw updateError\n      }\n\n      // Notify user\n      await this.notifyUser(userId, 'data_export_ready', {\n        export_id: exportId\n      })\n\n    } catch (error) {\n      console.error('Error processing data export:', error)\n      \n      // Update status to failed\n      await this.supabase\n        .from('data_exports')\n        .update({ status: 'failed' })\n        .eq('id', exportId)\n    }\n  }\n\n  /**\n   * Collect all user data\n   */\n  private async collectUserData(userId: string): Promise<any> {\n    try {\n      // Get user profile\n      const { data: profile } = await this.supabase\n        .from('users')\n        .select('*')\n        .eq('id', userId)\n        .single()\n\n      // Get user websites\n      const { data: websites } = await this.supabase\n        .from('websites')\n        .select('*')\n        .eq('user_id', userId)\n\n      // Get subscriptions\n      const { data: subscriptions } = await this.supabase\n        .from('subscriptions')\n        .select('*')\n        .eq('user_id', userId)\n\n      // Get consent preferences\n      const { data: consent } = await this.supabase\n        .from('consent_preferences')\n        .select('*')\n        .eq('user_id', userId)\n\n      // Get audit logs\n      const { data: auditLogs } = await this.supabase\n        .from('audit_logs')\n        .select('*')\n        .eq('user_id', userId)\n\n      return {\n        profile,\n        websites: websites || [],\n        subscriptions: subscriptions || [],\n        consent_preferences: consent || [],\n        audit_logs: auditLogs || [],\n        export_metadata: {\n          generated_at: new Date().toISOString(),\n          data_categories: ['personal_data', 'usage_data', 'consent_data', 'audit_data']\n        }\n      }\n    } catch (error) {\n      console.error('Error collecting user data:', error)\n      return {}\n    }\n  }\n\n  /**\n   * Handle data rectification request\n   */\n  async handleDataRectificationRequest(\n    userId: string,\n    corrections: Record<string, any>\n  ): Promise<boolean> {\n    try {\n      // Update user profile with corrections\n      const { error } = await this.supabase\n        .from('users')\n        .update({\n          ...corrections,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', userId)\n\n      if (error) {\n        throw error\n      }\n\n      // Log the rectification\n      await this.logDataAction(userId, 'data_rectification', {\n        corrections,\n        timestamp: new Date().toISOString()\n      })\n\n      return true\n    } catch (error) {\n      console.error('Error handling data rectification:', error)\n      return false\n    }\n  }\n\n  /**\n   * Handle data erasure request (right to be forgotten)\n   */\n  async handleDataErasureRequest(userId: string): Promise<DataDeletionRequest | null> {\n    try {\n      // Create deletion request\n      const deletionRequest = {\n        user_id: userId,\n        reason: 'User requested data erasure (GDPR Article 17)',\n        status: 'pending',\n        requested_at: new Date().toISOString()\n      }\n\n      const { data, error } = await this.supabase\n        .from('data_deletion_requests')\n        .insert(deletionRequest)\n        .select()\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      // Notify admin\n      await this.notifyAdmin('deletion_request', {\n        user_id: userId,\n        request_id: data.id\n      })\n\n      return data\n    } catch (error) {\n      console.error('Error handling data erasure request:', error)\n      return null\n    }\n  }\n\n  /**\n   * Process data deletion (admin)\n   */\n  async processDataDeletion(requestId: string, approved: boolean): Promise<boolean> {\n    try {\n      const { data: request } = await this.supabase\n        .from('data_deletion_requests')\n        .select('*')\n        .eq('id', requestId)\n        .single()\n\n      if (!request) {\n        throw new Error('Deletion request not found')\n      }\n\n      const status = approved ? 'approved' : 'rejected'\n      const processedAt = approved ? new Date().toISOString() : null\n\n      // Update request status\n      await this.supabase\n        .from('data_deletion_requests')\n        .update({\n          status,\n          processed_at: processedAt\n        })\n        .eq('id', requestId)\n\n      if (approved) {\n        // Perform data deletion\n        await this.performDataDeletion(request.user_id)\n      }\n\n      return true\n    } catch (error) {\n      console.error('Error processing data deletion:', error)\n      return false\n    }\n  }\n\n  /**\n   * Perform actual data deletion\n   */\n  private async performDataDeletion(userId: string): Promise<void> {\n    try {\n      // Delete user data from all tables\n      const tables = [\n        'websites',\n        'subscriptions',\n        'consent_preferences',\n        'cookie_consent',\n        'data_subject_requests',\n        'data_exports',\n        'audit_logs'\n      ]\n\n      for (const table of tables) {\n        await this.supabase\n          .from(table)\n          .delete()\n          .eq('user_id', userId)\n      }\n\n      // Anonymize user profile (keep for legal/audit purposes)\n      await this.supabase\n        .from('users')\n        .update({\n          email: `deleted_${userId}@deleted.local`,\n          full_name: 'Deleted User',\n          avatar_url: null,\n          deleted_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', userId)\n\n      // Log the deletion\n      await this.logDataAction(userId, 'data_deletion', {\n        deleted_at: new Date().toISOString(),\n        tables_affected: tables\n      })\n\n    } catch (error) {\n      console.error('Error performing data deletion:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Handle data portability request\n   */\n  async handleDataPortabilityRequest(userId: string): Promise<DataExport | null> {\n    // Similar to data access request but with specific format for portability\n    return await this.handleDataAccessRequest(userId)\n  }\n\n  /**\n   * Log data action for audit purposes\n   */\n  private async logDataAction(\n    userId: string,\n    action: string,\n    metadata: any\n  ): Promise<void> {\n    try {\n      await this.supabase\n        .from('audit_logs')\n        .insert({\n          user_id: userId,\n          action,\n          resource_type: 'user_data',\n          resource_id: userId,\n          new_values: metadata,\n          timestamp: new Date().toISOString()\n        })\n    } catch (error) {\n      console.error('Error logging data action:', error)\n    }\n  }\n\n  /**\n   * Notify admin about data subject request\n   */\n  private async notifyAdmin(type: string, data: any): Promise<void> {\n    try {\n      await this.supabase\n        .from('admin_notifications')\n        .insert({\n          type,\n          data,\n          is_read: false,\n          created_at: new Date().toISOString()\n        })\n    } catch (error) {\n      console.error('Error notifying admin:', error)\n    }\n  }\n\n  /**\n   * Notify user about request status\n   */\n  private async notifyUser(userId: string, type: string, data: any): Promise<void> {\n    try {\n      await this.supabase\n        .from('user_notifications')\n        .insert({\n          user_id: userId,\n          type,\n          data,\n          is_read: false,\n          created_at: new Date().toISOString()\n        })\n    } catch (error) {\n      console.error('Error notifying user:', error)\n    }\n  }\n\n  /**\n   * Get data subject rights statistics\n   */\n  async getRightsStatistics(): Promise<{\n    total_requests: number\n    pending_requests: number\n    completed_requests: number\n    request_types: Record<DataSubjectRightType, number>\n  }> {\n    try {\n      const { data: requests } = await this.supabase\n        .from('data_subject_requests')\n        .select('request_type, status')\n\n      const stats = {\n        total_requests: requests?.length || 0,\n        pending_requests: requests?.filter((r: any) => r.status === 'pending').length || 0,\n        completed_requests: requests?.filter((r: any) => r.status === 'completed').length || 0,\n        request_types: {\n          access: 0,\n          rectification: 0,\n          erasure: 0,\n          portability: 0,\n          restriction: 0,\n          objection: 0\n        }\n      }\n\n      if (requests) {\n        requests.forEach((request: any) => {\n          stats.request_types[request.request_type as DataSubjectRightType]++\n        })\n      }\n\n      return stats\n    } catch (error) {\n      console.error('Error getting rights statistics:', error)\n      return {\n        total_requests: 0,\n        pending_requests: 0,\n        completed_requests: 0,\n        request_types: {\n          access: 0,\n          rectification: 0,\n          erasure: 0,\n          portability: 0,\n          restriction: 0,\n          objection: 0\n        }\n      }\n    }\n  }\n}\n","/**\n * Data Retention Manager\n * Handles data retention policies and automatic data cleanup\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport { DataRetentionPolicy, AuditLog } from './types'\n\nexport class DataRetentionManager {\n  private supabase: any\n\n  constructor(supabaseUrl: string, supabaseKey: string) {\n    this.supabase = createClient(supabaseUrl || 'https://placeholder.supabase.co', supabaseKey || 'placeholder_key')\n  }\n\n  /**\n   * Create a new data retention policy\n   */\n  async createRetentionPolicy(policy: Omit<DataRetentionPolicy, 'id' | 'created_at' | 'updated_at'>): Promise<DataRetentionPolicy | null> {\n    try {\n      const policyData = {\n        ...policy,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n\n      const { data, error } = await this.supabase\n        .from('data_retention_policies')\n        .insert(policyData)\n        .select()\n        .single()\n\n      if (error) {\n        throw error\n      }\n\n      return data\n    } catch (error) {\n      console.error('Error creating retention policy:', error)\n      return null\n    }\n  }\n\n  /**\n   * Get all data retention policies\n   */\n  async getRetentionPolicies(): Promise<DataRetentionPolicy[]> {\n    try {\n      const { data, error } = await this.supabase\n        .from('data_retention_policies')\n        .select('*')\n        .order('created_at', { ascending: false })\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error fetching retention policies:', error)\n      return []\n    }\n  }\n\n  /**\n   * Update data retention policy\n   */\n  async updateRetentionPolicy(\n    policyId: string,\n    updates: Partial<DataRetentionPolicy>\n  ): Promise<boolean> {\n    try {\n      const { error } = await this.supabase\n        .from('data_retention_policies')\n        .update({\n          ...updates,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', policyId)\n\n      if (error) {\n        throw error\n      }\n\n      return true\n    } catch (error) {\n      console.error('Error updating retention policy:', error)\n      return false\n    }\n  }\n\n  /**\n   * Delete data retention policy\n   */\n  async deleteRetentionPolicy(policyId: string): Promise<boolean> {\n    try {\n      const { error } = await this.supabase\n        .from('data_retention_policies')\n        .delete()\n        .eq('id', policyId)\n\n      if (error) {\n        throw error\n      }\n\n      return true\n    } catch (error) {\n      console.error('Error deleting retention policy:', error)\n      return false\n    }\n  }\n\n  /**\n   * Process data retention cleanup\n   */\n  async processDataRetentionCleanup(): Promise<{\n    processed_policies: number\n    deleted_records: number\n    errors: string[]\n  }> {\n    const results = {\n      processed_policies: 0,\n      deleted_records: 0,\n      errors: [] as string[]\n    }\n\n    try {\n      const policies = await this.getRetentionPolicies()\n      \n      for (const policy of policies) {\n        if (!policy.auto_delete) continue\n\n        try {\n          const deletedCount = await this.applyRetentionPolicy(policy)\n          results.deleted_records += deletedCount\n          results.processed_policies++\n        } catch (error) {\n          results.errors.push(`Policy ${policy.id}: ${error instanceof Error ? error.message : 'Unknown error'}`)\n        }\n      }\n\n      // Log cleanup activity\n      await this.logCleanupActivity(results)\n\n    } catch (error) {\n      results.errors.push(`General cleanup error: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n\n    return results\n  }\n\n  /**\n   * Apply a specific retention policy\n   */\n  private async applyRetentionPolicy(policy: DataRetentionPolicy): Promise<number> {\n    const cutoffDate = new Date()\n    cutoffDate.setDate(cutoffDate.getDate() - policy.retention_period_days)\n\n    let deletedCount = 0\n\n    switch (policy.data_type) {\n      case 'audit_logs':\n        deletedCount = await this.cleanupAuditLogs(cutoffDate)\n        break\n      case 'consent_preferences':\n        deletedCount = await this.cleanupConsentPreferences(cutoffDate)\n        break\n      case 'cookie_consent':\n        deletedCount = await this.cleanupCookieConsent(cutoffDate)\n        break\n      case 'data_exports':\n        deletedCount = await this.cleanupDataExports(cutoffDate)\n        break\n      case 'user_sessions':\n        deletedCount = await this.cleanupUserSessions(cutoffDate)\n        break\n      case 'notification_logs':\n        deletedCount = await this.cleanupNotificationLogs(cutoffDate)\n        break\n      default:\n        console.warn(`Unknown data type for retention policy: ${policy.data_type}`)\n    }\n\n    return deletedCount\n  }\n\n  /**\n   * Cleanup audit logs older than cutoff date\n   */\n  private async cleanupAuditLogs(cutoffDate: Date): Promise<number> {\n    try {\n      const { count } = await this.supabase\n        .from('audit_logs')\n        .delete()\n        .lt('timestamp', cutoffDate.toISOString())\n        .select('*', { count: 'exact', head: true })\n\n      return count || 0\n    } catch (error) {\n      console.error('Error cleaning up audit logs:', error)\n      return 0\n    }\n  }\n\n  /**\n   * Cleanup old consent preferences (keep only latest per user)\n   */\n  private async cleanupConsentPreferences(cutoffDate: Date): Promise<number> {\n    try {\n      // Get all users with old consent preferences\n      const { data: oldConsents } = await this.supabase\n        .from('consent_preferences')\n        .select('user_id, id, created_at')\n        .lt('created_at', cutoffDate.toISOString())\n        .order('user_id, created_at', { ascending: false })\n\n      if (!oldConsents) return 0\n\n      // Group by user and keep only the latest\n      const userLatestConsent = new Map()\n      oldConsents.forEach((consent: any) => {\n        if (!userLatestConsent.has(consent.user_id) || \n            new Date(consent.created_at) > new Date(userLatestConsent.get(consent.user_id).created_at)) {\n          userLatestConsent.set(consent.user_id, consent)\n        }\n      })\n\n      // Delete old consents (excluding the latest for each user)\n      const idsToDelete = oldConsents\n        .filter((consent: any) => consent.id !== userLatestConsent.get(consent.user_id)?.id)\n        .map((consent: any) => consent.id)\n\n      if (idsToDelete.length > 0) {\n        const { count } = await this.supabase\n          .from('consent_preferences')\n          .delete()\n          .in('id', idsToDelete)\n          .select('*', { count: 'exact', head: true })\n\n        return count || 0\n      }\n\n      return 0\n    } catch (error) {\n      console.error('Error cleaning up consent preferences:', error)\n      return 0\n    }\n  }\n\n  /**\n   * Cleanup old cookie consent records\n   */\n  private async cleanupCookieConsent(cutoffDate: Date): Promise<number> {\n    try {\n      const { count } = await this.supabase\n        .from('cookie_consent')\n        .delete()\n        .lt('consent_given_at', cutoffDate.toISOString())\n        .select('*', { count: 'exact', head: true })\n\n      return count || 0\n    } catch (error) {\n      console.error('Error cleaning up cookie consent:', error)\n      return 0\n    }\n  }\n\n  /**\n   * Cleanup expired data exports\n   */\n  private async cleanupDataExports(cutoffDate: Date): Promise<number> {\n    try {\n      const { count } = await this.supabase\n        .from('data_exports')\n        .delete()\n        .lt('expires_at', cutoffDate.toISOString())\n        .select('*', { count: 'exact', head: true })\n\n      return count || 0\n    } catch (error) {\n      console.error('Error cleaning up data exports:', error)\n      return 0\n    }\n  }\n\n  /**\n   * Cleanup old user sessions\n   */\n  private async cleanupUserSessions(cutoffDate: Date): Promise<number> {\n    try {\n      const { count } = await this.supabase\n        .from('user_sessions')\n        .delete()\n        .lt('last_activity', cutoffDate.toISOString())\n        .select('*', { count: 'exact', head: true })\n\n      return count || 0\n    } catch (error) {\n      console.error('Error cleaning up user sessions:', error)\n      return 0\n    }\n  }\n\n  /**\n   * Cleanup old notification logs\n   */\n  private async cleanupNotificationLogs(cutoffDate: Date): Promise<number> {\n    try {\n      const { count } = await this.supabase\n        .from('notification_logs')\n        .delete()\n        .lt('created_at', cutoffDate.toISOString())\n        .select('*', { count: 'exact', head: true })\n\n      return count || 0\n    } catch (error) {\n      console.error('Error cleaning up notification logs:', error)\n      return 0\n    }\n  }\n\n  /**\n   * Log cleanup activity for audit purposes\n   */\n  private async logCleanupActivity(results: {\n    processed_policies: number\n    deleted_records: number\n    errors: string[]\n  }): Promise<void> {\n    try {\n      await this.supabase\n        .from('audit_logs')\n        .insert({\n          action: 'data_retention_cleanup',\n          resource_type: 'system',\n          resource_id: 'retention_cleanup',\n          new_values: results,\n          timestamp: new Date().toISOString()\n        })\n    } catch (error) {\n      console.error('Error logging cleanup activity:', error)\n    }\n  }\n\n  /**\n   * Get data retention statistics\n   */\n  async getRetentionStatistics(): Promise<{\n    total_policies: number\n    active_policies: number\n    auto_delete_enabled: number\n    data_types_covered: string[]\n    last_cleanup: string | null\n  }> {\n    try {\n      const policies = await this.getRetentionPolicies()\n      \n      const stats = {\n        total_policies: policies.length,\n        active_policies: policies.filter(p => p.auto_delete).length,\n        auto_delete_enabled: policies.filter(p => p.auto_delete).length,\n        data_types_covered: Array.from(new Set(policies.map(p => p.data_type))),\n        last_cleanup: null as string | null\n      }\n\n      // Get last cleanup activity\n      const { data: lastCleanup } = await this.supabase\n        .from('audit_logs')\n        .select('timestamp')\n        .eq('action', 'data_retention_cleanup')\n        .order('timestamp', { ascending: false })\n        .limit(1)\n        .single()\n\n      if (lastCleanup) {\n        stats.last_cleanup = lastCleanup.timestamp\n      }\n\n      return stats\n    } catch (error) {\n      console.error('Error getting retention statistics:', error)\n      return {\n        total_policies: 0,\n        active_policies: 0,\n        auto_delete_enabled: 0,\n        data_types_covered: [],\n        last_cleanup: null\n      }\n    }\n  }\n\n  /**\n   * Create default retention policies\n   */\n  async createDefaultPolicies(): Promise<void> {\n    const defaultPolicies = [\n      {\n        data_type: 'audit_logs',\n        retention_period_days: 2555, // 7 years\n        auto_delete: true,\n        legal_basis: 'legal_obligation',\n        description: 'Audit logs for compliance and security monitoring'\n      },\n      {\n        data_type: 'consent_preferences',\n        retention_period_days: 365, // 1 year\n        auto_delete: false, // Keep for consent history\n        legal_basis: 'consent',\n        description: 'User consent preferences and history'\n      },\n      {\n        data_type: 'cookie_consent',\n        retention_period_days: 90, // 3 months\n        auto_delete: true,\n        legal_basis: 'consent',\n        description: 'Cookie consent session data'\n      },\n      {\n        data_type: 'data_exports',\n        retention_period_days: 30, // 30 days\n        auto_delete: true,\n        legal_basis: 'consent',\n        description: 'Data export files and metadata'\n      },\n      {\n        data_type: 'user_sessions',\n        retention_period_days: 30, // 30 days\n        auto_delete: true,\n        legal_basis: 'legitimate_interests',\n        description: 'User session data for security'\n      },\n      {\n        data_type: 'notification_logs',\n        retention_period_days: 90, // 3 months\n        auto_delete: true,\n        legal_basis: 'legitimate_interests',\n        description: 'Notification delivery logs'\n      }\n    ]\n\n    for (const policy of defaultPolicies) {\n      await this.createRetentionPolicy(policy)\n    }\n  }\n\n  /**\n   * Check if data should be retained based on legal basis\n   */\n  async shouldRetainData(\n    dataType: string,\n    legalBasis: string,\n    ageInDays: number\n  ): Promise<boolean> {\n    try {\n      const policies = await this.getRetentionPolicies()\n      const policy = policies.find(p => p.data_type === dataType)\n\n      if (!policy) {\n        // No specific policy, use default retention\n        return ageInDays <= 365 // Default 1 year\n      }\n\n      // Check if data exceeds retention period\n      if (ageInDays > policy.retention_period_days) {\n        return false\n      }\n\n      // Check for legal exceptions\n      if (legalBasis === 'legal_obligation') {\n        // Some legal obligations may require longer retention\n        return true\n      }\n\n      return true\n    } catch (error) {\n      console.error('Error checking data retention:', error)\n      return true // Conservative approach - retain if uncertain\n    }\n  }\n}\n","/**\n * Audit Logger\n * Comprehensive audit logging for GDPR compliance and security monitoring\n */\n\nimport { createClient } from '@supabase/supabase-js'\nimport { AuditLog } from './types'\n\nexport class AuditLogger {\n  private supabase: any\n  private enabled: boolean\n\n  constructor(supabaseUrl: string, supabaseKey: string, enabled: boolean = true) {\n    this.supabase = createClient(supabaseUrl || 'https://placeholder.supabase.co', supabaseKey || 'placeholder_key')\n    this.enabled = enabled\n  }\n\n  /**\n   * Log an audit event\n   */\n  async log(\n    action: string,\n    resourceType: string,\n    resourceId: string,\n    options: {\n      userId?: string\n      oldValues?: any\n      newValues?: any\n      ipAddress?: string\n      userAgent?: string\n      metadata?: any\n    } = {}\n  ): Promise<boolean> {\n    if (!this.enabled) return true\n\n    try {\n      const auditLog: Omit<AuditLog, 'id'> = {\n        user_id: options.userId,\n        action,\n        resource_type: resourceType,\n        resource_id: resourceId,\n        old_values: options.oldValues,\n        new_values: options.newValues,\n        ip_address: options.ipAddress,\n        user_agent: options.userAgent,\n        timestamp: new Date().toISOString(),\n        metadata: options.metadata\n      }\n\n      const { error } = await this.supabase\n        .from('audit_logs')\n        .insert(auditLog)\n\n      if (error) {\n        console.error('Error logging audit event:', error)\n        return false\n      }\n\n      return true\n    } catch (error) {\n      console.error('Error in audit logger:', error)\n      return false\n    }\n  }\n\n  /**\n   * Log user authentication events\n   */\n  async logAuthEvent(\n    action: 'login' | 'logout' | 'register' | 'password_reset' | 'email_verification',\n    userId: string,\n    metadata?: any\n  ): Promise<boolean> {\n    return await this.log(\n      `auth_${action}`,\n      'user',\n      userId,\n      {\n        userId,\n        metadata: {\n          ...metadata,\n          event_type: 'authentication'\n        }\n      }\n    )\n  }\n\n  /**\n   * Log data access events\n   */\n  async logDataAccess(\n    action: 'read' | 'create' | 'update' | 'delete' | 'export',\n    resourceType: string,\n    resourceId: string,\n    userId: string,\n    metadata?: any\n  ): Promise<boolean> {\n    return await this.log(\n      `data_${action}`,\n      resourceType,\n      resourceId,\n      {\n        userId,\n        metadata: {\n          ...metadata,\n          event_type: 'data_access'\n        }\n      }\n    )\n  }\n\n  /**\n   * Log consent events\n   */\n  async logConsentEvent(\n    action: 'given' | 'withdrawn' | 'updated',\n    userId: string,\n    consentType: string,\n    metadata?: any\n  ): Promise<boolean> {\n    return await this.log(\n      `consent_${action}`,\n      'consent',\n      userId,\n      {\n        userId,\n        metadata: {\n          ...metadata,\n          consent_type: consentType,\n          event_type: 'consent'\n        }\n      }\n    )\n  }\n\n  /**\n   * Log data subject rights events\n   */\n  async logDataSubjectRights(\n    action: 'requested' | 'processed' | 'completed' | 'rejected',\n    requestType: string,\n    userId: string,\n    requestId: string,\n    metadata?: any\n  ): Promise<boolean> {\n    return await this.log(\n      `dsr_${action}`,\n      'data_subject_request',\n      requestId,\n      {\n        userId,\n        metadata: {\n          ...metadata,\n          request_type: requestType,\n          event_type: 'data_subject_rights'\n        }\n      }\n    )\n  }\n\n  /**\n   * Log admin actions\n   */\n  async logAdminAction(\n    action: string,\n    resourceType: string,\n    resourceId: string,\n    adminUserId: string,\n    metadata?: any\n  ): Promise<boolean> {\n    return await this.log(\n      `admin_${action}`,\n      resourceType,\n      resourceId,\n      {\n        userId: adminUserId,\n        metadata: {\n          ...metadata,\n          event_type: 'admin_action'\n        }\n      }\n    )\n  }\n\n  /**\n   * Log system events\n   */\n  async logSystemEvent(\n    action: string,\n    resourceType: string,\n    resourceId: string,\n    metadata?: any\n  ): Promise<boolean> {\n    return await this.log(\n      `system_${action}`,\n      resourceType,\n      resourceId,\n      {\n        metadata: {\n          ...metadata,\n          event_type: 'system'\n        }\n      }\n    )\n  }\n\n  /**\n   * Log security events\n   */\n  async logSecurityEvent(\n    action: 'suspicious_activity' | 'failed_login' | 'unauthorized_access' | 'data_breach',\n    userId?: string,\n    resourceType?: string,\n    resourceId?: string,\n    metadata?: any\n  ): Promise<boolean> {\n    return await this.log(\n      `security_${action}`,\n      resourceType || 'security',\n      resourceId || 'system',\n      {\n        userId,\n        metadata: {\n          ...metadata,\n          event_type: 'security',\n          severity: this.getSecuritySeverity(action)\n        }\n      }\n    )\n  }\n\n  /**\n   * Get security event severity\n   */\n  private getSecuritySeverity(action: string): 'low' | 'medium' | 'high' | 'critical' {\n    switch (action) {\n      case 'suspicious_activity':\n        return 'medium'\n      case 'failed_login':\n        return 'low'\n      case 'unauthorized_access':\n        return 'high'\n      case 'data_breach':\n        return 'critical'\n      default:\n        return 'medium'\n    }\n  }\n\n  /**\n   * Get audit logs for a specific user\n   */\n  async getUserAuditLogs(\n    userId: string,\n    limit: number = 100,\n    offset: number = 0\n  ): Promise<AuditLog[]> {\n    try {\n      const { data, error } = await this.supabase\n        .from('audit_logs')\n        .select('*')\n        .eq('user_id', userId)\n        .order('timestamp', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error fetching user audit logs:', error)\n      return []\n    }\n  }\n\n  /**\n   * Get audit logs for a specific resource\n   */\n  async getResourceAuditLogs(\n    resourceType: string,\n    resourceId: string,\n    limit: number = 100,\n    offset: number = 0\n  ): Promise<AuditLog[]> {\n    try {\n      const { data, error } = await this.supabase\n        .from('audit_logs')\n        .select('*')\n        .eq('resource_type', resourceType)\n        .eq('resource_id', resourceId)\n        .order('timestamp', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error fetching resource audit logs:', error)\n      return []\n    }\n  }\n\n  /**\n   * Get audit logs by action type\n   */\n  async getAuditLogsByAction(\n    action: string,\n    limit: number = 100,\n    offset: number = 0\n  ): Promise<AuditLog[]> {\n    try {\n      const { data, error } = await this.supabase\n        .from('audit_logs')\n        .select('*')\n        .eq('action', action)\n        .order('timestamp', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error fetching audit logs by action:', error)\n      return []\n    }\n  }\n\n  /**\n   * Get audit logs within a date range\n   */\n  async getAuditLogsByDateRange(\n    startDate: Date,\n    endDate: Date,\n    limit: number = 100,\n    offset: number = 0\n  ): Promise<AuditLog[]> {\n    try {\n      const { data, error } = await this.supabase\n        .from('audit_logs')\n        .select('*')\n        .gte('timestamp', startDate.toISOString())\n        .lte('timestamp', endDate.toISOString())\n        .order('timestamp', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error fetching audit logs by date range:', error)\n      return []\n    }\n  }\n\n  /**\n   * Get audit statistics\n   */\n  async getAuditStatistics(): Promise<{\n    total_logs: number\n    logs_by_action: Record<string, number>\n    logs_by_user: Record<string, number>\n    logs_by_resource_type: Record<string, number>\n    recent_activity: number\n  }> {\n    try {\n      // Get total logs count\n      const { count: totalLogs } = await this.supabase\n        .from('audit_logs')\n        .select('*', { count: 'exact', head: true })\n\n      // Get logs by action\n      const { data: actionData } = await this.supabase\n        .from('audit_logs')\n        .select('action')\n\n      const logsByAction: Record<string, number> = {}\n      if (actionData) {\n        actionData.forEach((log: any) => {\n          logsByAction[log.action] = (logsByAction[log.action] || 0) + 1\n        })\n      }\n\n      // Get logs by user\n      const { data: userData } = await this.supabase\n        .from('audit_logs')\n        .select('user_id')\n        .not('user_id', 'is', null)\n\n      const logsByUser: Record<string, number> = {}\n      if (userData) {\n        userData.forEach((log: any) => {\n          logsByUser[log.user_id] = (logsByUser[log.user_id] || 0) + 1\n        })\n      }\n\n      // Get logs by resource type\n      const { data: resourceData } = await this.supabase\n        .from('audit_logs')\n        .select('resource_type')\n\n      const logsByResourceType: Record<string, number> = {}\n      if (resourceData) {\n        resourceData.forEach((log: any) => {\n          logsByResourceType[log.resource_type] = (logsByResourceType[log.resource_type] || 0) + 1\n        })\n      }\n\n      // Get recent activity (last 24 hours)\n      const yesterday = new Date()\n      yesterday.setDate(yesterday.getDate() - 1)\n\n      const { count: recentActivity } = await this.supabase\n        .from('audit_logs')\n        .select('*', { count: 'exact', head: true })\n        .gte('timestamp', yesterday.toISOString())\n\n      return {\n        total_logs: totalLogs || 0,\n        logs_by_action: logsByAction,\n        logs_by_user: logsByUser,\n        logs_by_resource_type: logsByResourceType,\n        recent_activity: recentActivity || 0\n      }\n    } catch (error) {\n      console.error('Error getting audit statistics:', error)\n      return {\n        total_logs: 0,\n        logs_by_action: {},\n        logs_by_user: {},\n        logs_by_resource_type: {},\n        recent_activity: 0\n      }\n    }\n  }\n\n  /**\n   * Search audit logs\n   */\n  async searchAuditLogs(\n    query: string,\n    filters: {\n      userId?: string\n      action?: string\n      resourceType?: string\n      startDate?: Date\n      endDate?: Date\n    } = {},\n    limit: number = 100,\n    offset: number = 0\n  ): Promise<AuditLog[]> {\n    try {\n      let supabaseQuery = this.supabase\n        .from('audit_logs')\n        .select('*')\n\n      // Apply filters\n      if (filters.userId) {\n        supabaseQuery = supabaseQuery.eq('user_id', filters.userId)\n      }\n      if (filters.action) {\n        supabaseQuery = supabaseQuery.eq('action', filters.action)\n      }\n      if (filters.resourceType) {\n        supabaseQuery = supabaseQuery.eq('resource_type', filters.resourceType)\n      }\n      if (filters.startDate) {\n        supabaseQuery = supabaseQuery.gte('timestamp', filters.startDate.toISOString())\n      }\n      if (filters.endDate) {\n        supabaseQuery = supabaseQuery.lte('timestamp', filters.endDate.toISOString())\n      }\n\n      // Apply search query (search in action, resource_type, and metadata)\n      if (query) {\n        supabaseQuery = supabaseQuery.or(`action.ilike.%${query}%,resource_type.ilike.%${query}%,metadata.ilike.%${query}%`)\n      }\n\n      const { data, error } = await supabaseQuery\n        .order('timestamp', { ascending: false })\n        .range(offset, offset + limit - 1)\n\n      if (error) {\n        throw error\n      }\n\n      return data || []\n    } catch (error) {\n      console.error('Error searching audit logs:', error)\n      return []\n    }\n  }\n\n  /**\n   * Enable or disable audit logging\n   */\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled\n  }\n\n  /**\n   * Check if audit logging is enabled\n   */\n  isEnabled(): boolean {\n    return this.enabled\n  }\n}\n","/**\n * Cookie Manager\n * Handles cookie consent and management for GDPR compliance\n */\n\nimport { CookieConsent, ConsentType } from './types'\n\nexport class CookieManager {\n  private consent: CookieConsent | null = null\n  private onConsentChange?: (consent: CookieConsent) => void\n\n  constructor(onConsentChange?: (consent: CookieConsent) => void) {\n    this.onConsentChange = onConsentChange\n    this.loadConsentFromStorage()\n  }\n\n  /**\n   * Load consent from localStorage\n   */\n  private loadConsentFromStorage(): void {\n    try {\n      const stored = localStorage.getItem('naveeg_cookie_consent')\n      if (stored) {\n        this.consent = JSON.parse(stored)\n      }\n    } catch (error) {\n      console.error('Error loading cookie consent from storage:', error)\n    }\n  }\n\n  /**\n   * Save consent to localStorage\n   */\n  private saveConsentToStorage(consent: CookieConsent): void {\n    try {\n      localStorage.setItem('naveeg_cookie_consent', JSON.stringify(consent))\n    } catch (error) {\n      console.error('Error saving cookie consent to storage:', error)\n    }\n  }\n\n  /**\n   * Set cookie consent\n   */\n  setConsent(consent: Partial<CookieConsent>): void {\n    const sessionId = this.generateSessionId()\n    \n    this.consent = {\n      id: this.consent?.id || this.generateId(),\n      user_id: consent.user_id || '',\n      session_id: sessionId,\n      essential: consent.essential ?? true,\n      analytics: consent.analytics ?? false,\n      marketing: consent.marketing ?? false,\n      personalization: consent.personalization ?? false,\n      third_party: consent.third_party ?? false,\n      consent_given_at: new Date().toISOString(),\n      ip_address: consent.ip_address,\n      user_agent: consent.user_agent || navigator.userAgent\n    }\n\n    this.saveConsentToStorage(this.consent)\n    \n    if (this.onConsentChange) {\n      this.onConsentChange(this.consent)\n    }\n\n    // Set actual cookies based on consent\n    this.setCookiesBasedOnConsent()\n  }\n\n  /**\n   * Get current consent\n   */\n  getConsent(): CookieConsent | null {\n    return this.consent\n  }\n\n  /**\n   * Check if specific consent type is given\n   */\n  hasConsent(consentType: ConsentType): boolean {\n    if (!this.consent) return false\n\n    switch (consentType) {\n      case 'essential':\n        return this.consent.essential\n      case 'analytics':\n        return this.consent.analytics\n      case 'marketing':\n        return this.consent.marketing\n      case 'personalization':\n        return this.consent.personalization\n      case 'third_party':\n        return this.consent.third_party\n      default:\n        return false\n    }\n  }\n\n  /**\n   * Withdraw consent for specific type\n   */\n  withdrawConsent(consentType: ConsentType): void {\n    if (!this.consent) return\n\n    const updatedConsent = { ...this.consent }\n    \n    switch (consentType) {\n      case 'essential':\n        // Essential cookies cannot be withdrawn\n        return\n      case 'analytics':\n        updatedConsent.analytics = false\n        break\n      case 'marketing':\n        updatedConsent.marketing = false\n        break\n      case 'personalization':\n        updatedConsent.personalization = false\n        break\n      case 'third_party':\n        updatedConsent.third_party = false\n        break\n    }\n\n    this.setConsent(updatedConsent)\n  }\n\n  /**\n   * Withdraw all non-essential consent\n   */\n  withdrawAllConsent(): void {\n    if (!this.consent) return\n\n    this.setConsent({\n      ...this.consent,\n      analytics: false,\n      marketing: false,\n      personalization: false,\n      third_party: false\n    })\n  }\n\n  /**\n   * Set cookies based on consent\n   */\n  private setCookiesBasedOnConsent(): void {\n    if (!this.consent) return\n\n    // Essential cookies (always set)\n    this.setCookie('naveeg_session', this.consent.session_id, 30, true)\n    this.setCookie('naveeg_consent', JSON.stringify(this.consent), 365, true)\n\n    // Analytics cookies\n    if (this.consent.analytics) {\n      this.setCookie('naveeg_analytics', 'enabled', 365, false)\n      this.enableAnalytics()\n    } else {\n      this.deleteCookie('naveeg_analytics')\n      this.disableAnalytics()\n    }\n\n    // Marketing cookies\n    if (this.consent.marketing) {\n      this.setCookie('naveeg_marketing', 'enabled', 365, false)\n      this.enableMarketing()\n    } else {\n      this.deleteCookie('naveeg_marketing')\n      this.disableMarketing()\n    }\n\n    // Personalization cookies\n    if (this.consent.personalization) {\n      this.setCookie('naveeg_personalization', 'enabled', 365, false)\n      this.enablePersonalization()\n    } else {\n      this.deleteCookie('naveeg_personalization')\n      this.disablePersonalization()\n    }\n\n    // Third-party cookies\n    if (this.consent.third_party) {\n      this.setCookie('naveeg_third_party', 'enabled', 365, false)\n      this.enableThirdParty()\n    } else {\n      this.deleteCookie('naveeg_third_party')\n      this.disableThirdParty()\n    }\n  }\n\n  /**\n   * Set a cookie\n   */\n  private setCookie(name: string, value: string, days: number, essential: boolean = false): void {\n    const expires = new Date()\n    expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000))\n    \n    const cookieString = `${name}=${value};expires=${expires.toUTCString()};path=/;${essential ? 'HttpOnly;' : ''}SameSite=Strict`\n    \n    document.cookie = cookieString\n  }\n\n  /**\n   * Delete a cookie\n   */\n  private deleteCookie(name: string): void {\n    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/;`\n  }\n\n  /**\n   * Get a cookie value\n   */\n  getCookie(name: string): string | null {\n    const nameEQ = name + \"=\"\n    const ca = document.cookie.split(';')\n    \n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i]\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length)\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length)\n    }\n    \n    return null\n  }\n\n  /**\n   * Enable analytics tracking\n   */\n  private enableAnalytics(): void {\n    // Enable Google Analytics or other analytics tools\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('consent', 'update', {\n        analytics_storage: 'granted'\n      })\n    }\n  }\n\n  /**\n   * Disable analytics tracking\n   */\n  private disableAnalytics(): void {\n    // Disable Google Analytics or other analytics tools\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('consent', 'update', {\n        analytics_storage: 'denied'\n      })\n    }\n  }\n\n  /**\n   * Enable marketing tracking\n   */\n  private enableMarketing(): void {\n    // Enable marketing pixels and tracking\n    if (typeof window !== 'undefined' && (window as any).fbq) {\n      (window as any).fbq('consent', 'grant')\n    }\n  }\n\n  /**\n   * Disable marketing tracking\n   */\n  private disableMarketing(): void {\n    // Disable marketing pixels and tracking\n    if (typeof window !== 'undefined' && (window as any).fbq) {\n      (window as any).fbq('consent', 'revoke')\n    }\n  }\n\n  /**\n   * Enable personalization\n   */\n  private enablePersonalization(): void {\n    // Enable personalization features\n    console.log('Personalization enabled')\n  }\n\n  /**\n   * Disable personalization\n   */\n  private disablePersonalization(): void {\n    // Disable personalization features\n    console.log('Personalization disabled')\n  }\n\n  /**\n   * Enable third-party services\n   */\n  private enableThirdParty(): void {\n    // Enable third-party services\n    console.log('Third-party services enabled')\n  }\n\n  /**\n   * Disable third-party services\n   */\n  private disableThirdParty(): void {\n    // Disable third-party services\n    console.log('Third-party services disabled')\n  }\n\n  /**\n   * Generate session ID\n   */\n  private generateSessionId(): string {\n    return Math.random().toString(36).substring(2) + Date.now().toString(36)\n  }\n\n  /**\n   * Generate unique ID\n   */\n  private generateId(): string {\n    return 'consent_' + Math.random().toString(36).substring(2) + Date.now().toString(36)\n  }\n\n  /**\n   * Clear all cookies\n   */\n  clearAllCookies(): void {\n    const cookies = document.cookie.split(\";\")\n    \n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i]\n      const eqPos = cookie.indexOf(\"=\")\n      const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie\n      this.deleteCookie(name.trim())\n    }\n  }\n\n  /**\n   * Get cookie consent banner HTML\n   */\n  generateConsentBanner(): string {\n    return `\n      <div id=\"cookie-consent-banner\" class=\"cookie-consent-banner\" style=\"display: none;\">\n        <div class=\"cookie-consent-content\">\n          <div class=\"cookie-consent-header\">\n            <h3>Cookie Consent</h3>\n            <p>We use cookies to enhance your experience and analyze our traffic. Please choose your preferences.</p>\n          </div>\n          \n          <div class=\"cookie-consent-options\">\n            <div class=\"cookie-option\">\n              <label>\n                <input type=\"checkbox\" id=\"cookie-essential\" checked disabled>\n                Essential Cookies\n                <small>Required for basic website functionality</small>\n              </label>\n            </div>\n            \n            <div class=\"cookie-option\">\n              <label>\n                <input type=\"checkbox\" id=\"cookie-analytics\">\n                Analytics Cookies\n                <small>Help us understand how visitors interact with our website</small>\n              </label>\n            </div>\n            \n            <div class=\"cookie-option\">\n              <label>\n                <input type=\"checkbox\" id=\"cookie-marketing\">\n                Marketing Cookies\n                <small>Used to track visitors across websites for advertising</small>\n              </label>\n            </div>\n            \n            <div class=\"cookie-option\">\n              <label>\n                <input type=\"checkbox\" id=\"cookie-personalization\">\n                Personalization Cookies\n                <small>Remember your preferences and settings</small>\n              </label>\n            </div>\n            \n            <div class=\"cookie-option\">\n              <label>\n                <input type=\"checkbox\" id=\"cookie-third-party\">\n                Third-Party Cookies\n                <small>Cookies from external services we use</small>\n              </label>\n            </div>\n          </div>\n          \n          <div class=\"cookie-consent-actions\">\n            <button id=\"cookie-reject-all\" class=\"cookie-btn cookie-btn-secondary\">Reject All</button>\n            <button id=\"cookie-accept-all\" class=\"cookie-btn cookie-btn-primary\">Accept All</button>\n            <button id=\"cookie-save-preferences\" class=\"cookie-btn cookie-btn-primary\">Save Preferences</button>\n          </div>\n        </div>\n      </div>\n    `\n  }\n\n  /**\n   * Initialize cookie consent banner\n   */\n  initializeBanner(): void {\n    // Check if consent already exists\n    if (this.consent) {\n      return\n    }\n\n    // Show banner\n    const banner = document.getElementById('cookie-consent-banner')\n    if (banner) {\n      banner.style.display = 'block'\n    }\n\n    // Add event listeners\n    this.addBannerEventListeners()\n  }\n\n  /**\n   * Add event listeners to consent banner\n   */\n  private addBannerEventListeners(): void {\n    // Accept all button\n    const acceptAllBtn = document.getElementById('cookie-accept-all')\n    if (acceptAllBtn) {\n      acceptAllBtn.addEventListener('click', () => {\n        this.setConsent({\n          essential: true,\n          analytics: true,\n          marketing: true,\n          personalization: true,\n          third_party: true\n        })\n        this.hideBanner()\n      })\n    }\n\n    // Reject all button\n    const rejectAllBtn = document.getElementById('cookie-reject-all')\n    if (rejectAllBtn) {\n      rejectAllBtn.addEventListener('click', () => {\n        this.setConsent({\n          essential: true,\n          analytics: false,\n          marketing: false,\n          personalization: false,\n          third_party: false\n        })\n        this.hideBanner()\n      })\n    }\n\n    // Save preferences button\n    const saveBtn = document.getElementById('cookie-save-preferences')\n    if (saveBtn) {\n      saveBtn.addEventListener('click', () => {\n        const essential = (document.getElementById('cookie-essential') as HTMLInputElement)?.checked || true\n        const analytics = (document.getElementById('cookie-analytics') as HTMLInputElement)?.checked || false\n        const marketing = (document.getElementById('cookie-marketing') as HTMLInputElement)?.checked || false\n        const personalization = (document.getElementById('cookie-personalization') as HTMLInputElement)?.checked || false\n        const thirdParty = (document.getElementById('cookie-third-party') as HTMLInputElement)?.checked || false\n\n        this.setConsent({\n          essential,\n          analytics,\n          marketing,\n          personalization,\n          third_party: thirdParty\n        })\n        this.hideBanner()\n      })\n    }\n  }\n\n  /**\n   * Hide consent banner\n   */\n  private hideBanner(): void {\n    const banner = document.getElementById('cookie-consent-banner')\n    if (banner) {\n      banner.style.display = 'none'\n    }\n  }\n}\n"],"mappings":"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","names":["parse","serialize","createBrowserClient","createServerClient","value","import_cookie","options","value","supabaseUrl","import_supabase_js","supabaseUrl","import_supabase_js","supabaseUrl","supabaseAnonKey","Stripe","import_stripe","Stripe","import_stripe","Stripe","subscription","import_stripe","import_supabase_js","supabaseUrl","Stripe","util","objectUtil","errorUtil","errorMap","ctx","result","issues","elements","processed","result","r","ZodFirstPartyTypeKind","import_supabase_js","supabaseUrl","supabaseAnonKey","createBrowserClient","createServerClient","session","import_react","createBrowserClient","import_react","createBrowserClient","import_react","document","row","createBrowserClient","createServerClient","import_react","error","import_react","import_supabase_js","supabaseUrl","import_react","React","parse","format","import_supabase_js","import_supabase_js","supabaseUrl","import_supabase_js","supabaseUrl","import_supabase_js","supabaseUrl","import_supabase_js","supabaseUrl","supabaseUrl"]}